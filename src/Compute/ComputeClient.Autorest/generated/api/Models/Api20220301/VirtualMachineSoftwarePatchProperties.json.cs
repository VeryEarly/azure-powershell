// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Extensions;

    /// <summary>Describes the properties of a Virtual Machine software patch.</summary>
    public partial class VirtualMachineSoftwarePatchProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineSoftwarePatchProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineSoftwarePatchProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineSoftwarePatchProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject json ? new VirtualMachineSoftwarePatchProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="VirtualMachineSoftwarePatchProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode"
        /// />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="VirtualMachineSoftwarePatchProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._patchId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString(this._patchId.ToString()) : null, "patchId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._name)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString(this._name.ToString()) : null, "name" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._version)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString(this._version.ToString()) : null, "version" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._kbId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString(this._kbId.ToString()) : null, "kbId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._classification)
                {
                    var __w = new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.XNodeArray();
                    foreach( var __x in this._classification )
                    {
                        AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                    }
                    container.Add("classifications",__w);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._rebootBehavior)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString(this._rebootBehavior.ToString()) : null, "rebootBehavior" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._activityId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString(this._activityId.ToString()) : null, "activityId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._publishedDate ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString(this._publishedDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "publishedDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._lastModifiedDateTime ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString(this._lastModifiedDateTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastModifiedDateTime" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._assessmentState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString(this._assessmentState.ToString()) : null, "assessmentState" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject into a new instance of <see cref="VirtualMachineSoftwarePatchProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal VirtualMachineSoftwarePatchProperties(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_patchId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString>("patchId"), out var __jsonPatchId) ? (string)__jsonPatchId : (string)PatchId;}
            {_name = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString>("name"), out var __jsonName) ? (string)__jsonName : (string)Name;}
            {_version = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString>("version"), out var __jsonVersion) ? (string)__jsonVersion : (string)Version;}
            {_kbId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString>("kbId"), out var __jsonKbId) ? (string)__jsonKbId : (string)KbId;}
            {_classification = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonArray>("classifications"), out var __jsonClassifications) ? If( __jsonClassifications as Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : Classification;}
            {_rebootBehavior = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString>("rebootBehavior"), out var __jsonRebootBehavior) ? (string)__jsonRebootBehavior : (string)RebootBehavior;}
            {_activityId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString>("activityId"), out var __jsonActivityId) ? (string)__jsonActivityId : (string)ActivityId;}
            {_publishedDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString>("publishedDate"), out var __jsonPublishedDate) ? global::System.DateTime.TryParse((string)__jsonPublishedDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonPublishedDateValue) ? __jsonPublishedDateValue : PublishedDate : PublishedDate;}
            {_lastModifiedDateTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString>("lastModifiedDateTime"), out var __jsonLastModifiedDateTime) ? global::System.DateTime.TryParse((string)__jsonLastModifiedDateTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastModifiedDateTimeValue) ? __jsonLastModifiedDateTimeValue : LastModifiedDateTime : LastModifiedDateTime;}
            {_assessmentState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString>("assessmentState"), out var __jsonAssessmentState) ? (string)__jsonAssessmentState : (string)AssessmentState;}
            AfterFromJson(json);
        }
    }
}