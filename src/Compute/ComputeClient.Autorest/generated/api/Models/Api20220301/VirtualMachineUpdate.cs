// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>Describes a Virtual Machine Update.</summary>
    public partial class VirtualMachineUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUpdateResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUpdateResource __updateResource = new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.UpdateResource();

        /// <summary>The flag that enables or disables hibernation capability on the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? AdditionalCapabilityHibernationEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).AdditionalCapabilityHibernationEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).AdditionalCapabilityHibernationEnabled = value ?? default(bool); }

        /// <summary>
        /// The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account
        /// type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual
        /// machine scale set only if this property is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? AdditionalCapabilityUltraSsdEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).AdditionalCapabilityUltraSsdEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).AdditionalCapabilityUltraSsdEnabled = value ?? default(bool); }

        /// <summary>Specifies the gallery applications that should be made available to the VM/VMSS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMGalleryApplication[] ApplicationProfileGalleryApplication { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ApplicationProfileGalleryApplication; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ApplicationProfileGalleryApplication = value ?? null /* arrayOf */; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string AvailabilitySetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).AvailabilitySetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).AvailabilitySetId = value ?? null; }

        /// <summary>
        /// Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. <br><br> This
        /// price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of
        /// create/update of Azure Spot VM/VMSS and the operation will only succeed if the maxPrice is greater than the current Azure
        /// Spot price. <br><br> The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price
        /// goes beyond the maxPrice after creation of VM/VMSS. <br><br> Possible values are: <br><br> - Any decimal value greater
        /// than zero. Example: 0.01538 <br><br> -1 – indicates default price to be up-to on-demand. <br><br> You can set the maxPrice
        /// to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is
        /// -1 if it is not provided by you. <br><br>Minimum api-version: 2019-03-01.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public double? BillingProfileMaxPrice { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).BillingProfileMaxPrice; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).BillingProfileMaxPrice = value ?? default(double); }

        /// <summary>Whether boot diagnostics should be enabled on the Virtual Machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? BootDiagnosticEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).BootDiagnosticEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).BootDiagnosticEnabled = value ?? default(bool); }

        /// <summary>
        /// Uri of the storage account to use for placing the console output and screenshot. <br><br>If storageUri is not specified
        /// while enabling boot diagnostics, managed storage will be used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string BootDiagnosticStorageUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).BootDiagnosticStorageUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).BootDiagnosticStorageUri = value ?? null; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string CapacityReservationGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).CapacityReservationGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).CapacityReservationGroupId = value ?? null; }

        /// <summary>
        /// Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual
        /// machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot
        /// scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachineEvictionPolicyTypes? EvictionPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).EvictionPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).EvictionPolicy = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachineEvictionPolicyTypes)""); }

        /// <summary>
        /// Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes
        /// (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). <br><br> Minimum api-version:
        /// 2020-06-01
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ExtensionsTimeBudget { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ExtensionsTimeBudget; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ExtensionsTimeBudget = value ?? null; }

        /// <summary>
        /// Specifies the size of the virtual machine. <br><br> The enum data type is currently deprecated and will be removed by
        /// December 23rd 2023. <br><br> Recommended way to get the list of available sizes is using these APIs: <br><br> [List all
        /// available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes)
        /// <br><br> [List all available virtual machine sizes in a region]( https://docs.microsoft.com/rest/api/compute/resourceskus/list)
        /// <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes).
        /// For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/sizes).
        /// <br><br> The available VM sizes depend on region and availability set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachineSizeTypes? HardwareProfileVMSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).HardwareProfileVMSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).HardwareProfileVMSize = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachineSizeTypes)""); }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string HostGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).HostGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).HostGroupId = value ?? null; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string HostId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).HostId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).HostId = value ?? null; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineIdentity _identity;

        /// <summary>The identity of the virtual machine, if configured.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualMachineIdentity()); set => this._identity = value; }

        /// <summary>
        /// The principal id of virtual machine identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineIdentityInternal)Identity).PrincipalId; }

        /// <summary>
        /// The tenant id associated with the virtual machine. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineIdentityInternal)Identity).TenantId; }

        /// <summary>
        /// The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly
        /// created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ResourceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ResourceIdentityType)""); }

        /// <summary>
        /// The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>
        /// Specified the community gallery image unique id for vm deployment. This can be fetched from community gallery image GET
        /// call.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ImageReferenceCommunityGalleryImageId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ImageReferenceCommunityGalleryImageId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ImageReferenceCommunityGalleryImageId = value ?? null; }

        /// <summary>
        /// Specifies in decimal numbers, the version of platform image or marketplace image used to create the virtual machine. This
        /// readonly field differs from 'version', only if the value specified in 'version' field is 'latest'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ImageReferenceExactVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ImageReferenceExactVersion; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ImageReferenceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ImageReferenceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ImageReferenceId = value ?? null; }

        /// <summary>
        /// Specifies the offer of the platform image or marketplace image used to create the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ImageReferenceOffer { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ImageReferenceOffer; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ImageReferenceOffer = value ?? null; }

        /// <summary>The image publisher.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ImageReferencePublisher { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ImageReferencePublisher; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ImageReferencePublisher = value ?? null; }

        /// <summary>
        /// Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ImageReferenceSharedGalleryImageId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ImageReferenceSharedGalleryImageId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ImageReferenceSharedGalleryImageId = value ?? null; }

        /// <summary>The image SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ImageReferenceSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ImageReferenceSku; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ImageReferenceSku = value ?? null; }

        /// <summary>
        /// Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats
        /// are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version
        /// of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy
        /// time even if a new version becomes available. Please do not use field 'version' for gallery image deployment, gallery
        /// image should always use 'id' field for deployment, to use 'latest' version of gallery image, just set '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}'
        /// in the 'id' field without version input.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ImageReferenceVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ImageReferenceVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ImageReferenceVersion = value ?? null; }

        /// <summary>The virtual machine instance view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineInstanceView InstanceView { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).InstanceView; }

        /// <summary>
        /// Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server
        /// operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating
        /// system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid
        /// Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)
        /// <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)
        /// <br><br> Minimum api-version: 2015-06-15
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string LicenseType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).LicenseType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).LicenseType = value ?? null; }

        /// <summary>Internal Acessors for AdditionalCapability</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAdditionalCapabilities Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.AdditionalCapability { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).AdditionalCapability; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).AdditionalCapability = value; }

        /// <summary>Internal Acessors for ApplicationProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IApplicationProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.ApplicationProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ApplicationProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ApplicationProfile = value; }

        /// <summary>Internal Acessors for AvailabilitySet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.AvailabilitySet { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).AvailabilitySet; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).AvailabilitySet = value; }

        /// <summary>Internal Acessors for BillingProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBillingProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.BillingProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).BillingProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).BillingProfile = value; }

        /// <summary>Internal Acessors for CapacityReservation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ICapacityReservationProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.CapacityReservation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).CapacityReservation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).CapacityReservation = value; }

        /// <summary>Internal Acessors for CapacityReservationGroup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.CapacityReservationGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).CapacityReservationGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).CapacityReservationGroup = value; }

        /// <summary>Internal Acessors for DiagnosticProfileBootDiagnostic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnostics Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.DiagnosticProfileBootDiagnostic { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).DiagnosticProfileBootDiagnostic; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).DiagnosticProfileBootDiagnostic = value; }

        /// <summary>Internal Acessors for DiagnosticsProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiagnosticsProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.DiagnosticsProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).DiagnosticsProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).DiagnosticsProfile = value; }

        /// <summary>Internal Acessors for HardwareProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IHardwareProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.HardwareProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).HardwareProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).HardwareProfile = value; }

        /// <summary>Internal Acessors for HardwareProfileVMSizeProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMSizeProperties Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.HardwareProfileVMSizeProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).HardwareProfileVMSizeProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).HardwareProfileVMSizeProperty = value; }

        /// <summary>Internal Acessors for Host</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.Host { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).Host; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).Host = value; }

        /// <summary>Internal Acessors for HostGroup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.HostGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).HostGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).HostGroup = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineIdentity Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualMachineIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for ImageReferenceExactVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.ImageReferenceExactVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ImageReferenceExactVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ImageReferenceExactVersion = value; }

        /// <summary>Internal Acessors for InstanceView</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineInstanceView Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.InstanceView { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).InstanceView; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).InstanceView = value; }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.INetworkProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.NetworkProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).NetworkProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).NetworkProfile = value; }

        /// <summary>Internal Acessors for Plan</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IPlan Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.Plan { get => (this._plan = this._plan ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.Plan()); set { {_plan = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineProperties Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualMachineProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ProximityPlacementGroup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.ProximityPlacementGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ProximityPlacementGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ProximityPlacementGroup = value; }

        /// <summary>Internal Acessors for ScheduledEventProfileTerminateNotificationProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ITerminateNotificationProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.ScheduledEventProfileTerminateNotificationProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ScheduledEventProfileTerminateNotificationProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ScheduledEventProfileTerminateNotificationProfile = value; }

        /// <summary>Internal Acessors for ScheduledEventsProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IScheduledEventsProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.ScheduledEventsProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ScheduledEventsProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ScheduledEventsProfile = value; }

        /// <summary>Internal Acessors for SecurityProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISecurityProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.SecurityProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).SecurityProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).SecurityProfile = value; }

        /// <summary>Internal Acessors for SecurityProfileUefiSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUefiSettings Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.SecurityProfileUefiSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).SecurityProfileUefiSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).SecurityProfileUefiSetting = value; }

        /// <summary>Internal Acessors for StorageProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IStorageProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.StorageProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).StorageProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).StorageProfile = value; }

        /// <summary>Internal Acessors for StorageProfileImageReference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IImageReference Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.StorageProfileImageReference { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).StorageProfileImageReference; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).StorageProfileImageReference = value; }

        /// <summary>Internal Acessors for TimeCreated</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.TimeCreated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).TimeCreated; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).TimeCreated = value; }

        /// <summary>Internal Acessors for VMId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.VMId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).VMId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).VMId = value; }

        /// <summary>Internal Acessors for VirtualMachineScaleSet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineUpdateInternal.VirtualMachineScaleSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).VirtualMachineScaleSet; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).VirtualMachineScaleSet = value; }

        /// <summary>
        /// specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.NetworkApiVersion? NetworkProfileNetworkApiVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).NetworkProfileNetworkApiVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).NetworkProfileNetworkApiVersion = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.NetworkApiVersion)""); }

        /// <summary>
        /// Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.INetworkInterfaceReference[] NetworkProfileNetworkInterface { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).NetworkProfileNetworkInterface; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).NetworkProfileNetworkInterface = value ?? null /* arrayOf */; }

        /// <summary>
        /// Specifies the networking configurations that will be used to create the virtual machine networking resources.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineNetworkInterfaceConfiguration[] NetworkProfileNetworkInterfaceConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).NetworkProfileNetworkInterfaceConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).NetworkProfileNetworkInterfaceConfiguration = value ?? null /* arrayOf */; }

        /// <summary>
        /// Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed
        /// once VM is provisioned.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSProfile OSProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).OSProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).OSProfile = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="Plan" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IPlan _plan;

        /// <summary>
        /// Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace
        /// images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure
        /// portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started
        /// ->**. Enter any required information and then click **Save**.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IPlan Plan { get => (this._plan = this._plan ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.Plan()); set => this._plan = value; }

        /// <summary>The plan ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string PlanName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IPlanInternal)Plan).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IPlanInternal)Plan).Name = value ?? null; }

        /// <summary>
        /// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string PlanProduct { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IPlanInternal)Plan).Product; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IPlanInternal)Plan).Product = value ?? null; }

        /// <summary>The promotion code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string PlanPromotionCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IPlanInternal)Plan).PromotionCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IPlanInternal)Plan).PromotionCode = value ?? null; }

        /// <summary>The publisher ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string PlanPublisher { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IPlanInternal)Plan).Publisher; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IPlanInternal)Plan).Publisher = value ?? null; }

        /// <summary>
        /// Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine
        /// will by automatically assigned to a fault domain that best maintains balance across available fault domains.<br><li>This
        /// is applicable only if the 'virtualMachineScaleSet' property of this Virtual Machine is set.<li>The Virtual Machine Scale
        /// Set that is referenced, must have 'platformFaultDomainCount' &gt; 1.<li>This property cannot be updated once the Virtual
        /// Machine is created.<li>Fault domain assignment can be viewed in the Virtual Machine Instance View.<br><br>Minimum api‐version:
        /// 2020‐12‐01
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? PlatformFaultDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).PlatformFaultDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).PlatformFaultDomain = value ?? default(int); }

        /// <summary>
        /// Specifies the priority for the virtual machine. <br><br>Minimum api-version: 2019-03-01
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachinePriorityTypes? Priority { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).Priority; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).Priority = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachinePriorityTypes)""); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineProperties _property;

        /// <summary>Describes the properties of a Virtual Machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualMachineProperties()); set => this._property = value; }

        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ProvisioningState; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ProximityPlacementGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ProximityPlacementGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).ProximityPlacementGroupId = value ?? null; }

        /// <summary>
        /// This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual
        /// machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. <br><br>
        /// Default: The Encryption at host will be disabled unless this property is set to true for the resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? SecurityProfileEncryptionAtHost { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).SecurityProfileEncryptionAtHost; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).SecurityProfileEncryptionAtHost = value ?? default(bool); }

        /// <summary>
        /// Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. <br><br>
        /// Default: UefiSettings will not be enabled unless this property is set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityTypes? SecurityProfileSecurityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).SecurityProfileSecurityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).SecurityProfileSecurityType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityTypes)""); }

        /// <summary>
        /// Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks,
        /// see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDisk[] StorageProfileDataDisk { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).StorageProfileDataDisk; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).StorageProfileDataDisk = value ?? null /* arrayOf */; }

        /// <summary>
        /// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about
        /// disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSDisk StorageProfileOSDisk { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).StorageProfileOSDisk; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).StorageProfileOSDisk = value ?? null /* model class */; }

        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUpdateResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUpdateResourceInternal)__updateResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUpdateResourceInternal)__updateResource).Tag = value ?? null /* model class */; }

        /// <summary>Specifies whether the Terminate Scheduled event is enabled or disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? TerminateNotificationProfileEnable { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).TerminateNotificationProfileEnable; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).TerminateNotificationProfileEnable = value ?? default(bool); }

        /// <summary>
        /// Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event
        /// before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value
        /// is 5 minutes (PT5M)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string TerminateNotificationProfileNotBeforeTimeout { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).TerminateNotificationProfileNotBeforeTimeout; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).TerminateNotificationProfileNotBeforeTimeout = value ?? null; }

        /// <summary>
        /// Specifies the time at which the Virtual Machine resource was created.<br><br>Minimum api-version: 2022-03-01.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public global::System.DateTime? TimeCreated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).TimeCreated; }

        /// <summary>
        /// Specifies whether secure boot should be enabled on the virtual machine. <br><br>Minimum api-version: 2020-12-01
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? UefiSettingSecureBootEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).UefiSettingSecureBootEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).UefiSettingSecureBootEnabled = value ?? default(bool); }

        /// <summary>
        /// Specifies whether vTPM should be enabled on the virtual machine. <br><br>Minimum api-version: 2020-12-01
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? UefiSettingVTpmEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).UefiSettingVTpmEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).UefiSettingVTpmEnabled = value ?? default(bool); }

        /// <summary>
        /// UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version:
        /// 2021-03-01
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string UserData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).UserData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).UserData = value ?? null; }

        /// <summary>
        /// Specifies the VM unique ID which is a 128-bits identifier that is encoded and stored in all Azure IaaS VMs SMBIOS and
        /// can be read using platform BIOS commands.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string VMId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).VMId; }

        /// <summary>
        /// Specifies the number of vCPUs available for the VM. <br><br> When this property is not specified in the request body the
        /// default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available
        /// virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) .
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? VMSizePropertyVcpUsAvailable { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).VMSizePropertyVcpUsAvailable; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).VMSizePropertyVcpUsAvailable = value ?? default(int); }

        /// <summary>
        /// Specifies the vCPU to physical core ratio. <br><br> When this property is not specified in the request body the default
        /// behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine
        /// sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) <br><br> Setting this property
        /// to 1 also means that hyper-threading is disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? VMSizePropertyVcpUsPerCore { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).VMSizePropertyVcpUsPerCore; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).VMSizePropertyVcpUsPerCore = value ?? default(int); }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string VirtualMachineScaleSetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).VirtualMachineScaleSetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePropertiesInternal)Property).VirtualMachineScaleSetId = value ?? null; }

        /// <summary>Backing field for <see cref="Zone" /> property.</summary>
        private string[] _zone;

        /// <summary>The virtual machine zones.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string[] Zone { get => this._zone; set => this._zone = value; }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__updateResource), __updateResource);
            await eventListener.AssertObjectIsValid(nameof(__updateResource), __updateResource);
        }

        /// <summary>Creates an new <see cref="VirtualMachineUpdate" /> instance.</summary>
        public VirtualMachineUpdate()
        {

        }
    }
    /// Describes a Virtual Machine Update.
    public partial interface IVirtualMachineUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUpdateResource
    {
        /// <summary>The flag that enables or disables hibernation capability on the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The flag that enables or disables hibernation capability on the VM.",
        SerializedName = @"hibernationEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AdditionalCapabilityHibernationEnabled { get; set; }
        /// <summary>
        /// The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account
        /// type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual
        /// machine scale set only if this property is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled.",
        SerializedName = @"ultraSSDEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AdditionalCapabilityUltraSsdEnabled { get; set; }
        /// <summary>Specifies the gallery applications that should be made available to the VM/VMSS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the gallery applications that should be made available to the VM/VMSS",
        SerializedName = @"galleryApplications",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMGalleryApplication) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMGalleryApplication[] ApplicationProfileGalleryApplication { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string AvailabilitySetId { get; set; }
        /// <summary>
        /// Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. <br><br> This
        /// price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of
        /// create/update of Azure Spot VM/VMSS and the operation will only succeed if the maxPrice is greater than the current Azure
        /// Spot price. <br><br> The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price
        /// goes beyond the maxPrice after creation of VM/VMSS. <br><br> Possible values are: <br><br> - Any decimal value greater
        /// than zero. Example: 0.01538 <br><br> -1 – indicates default price to be up-to on-demand. <br><br> You can set the maxPrice
        /// to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is
        /// -1 if it is not provided by you. <br><br>Minimum api-version: 2019-03-01.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. <br><br> This price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the operation will only succeed if  the maxPrice is greater than the current Azure Spot price. <br><br> The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the maxPrice after creation of VM/VMSS. <br><br> Possible values are: <br><br> - Any decimal value greater than zero. Example: 0.01538 <br><br> -1 – indicates default price to be up-to on-demand. <br><br> You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is -1 if it is not provided by you. <br><br>Minimum api-version: 2019-03-01.",
        SerializedName = @"maxPrice",
        PossibleTypes = new [] { typeof(double) })]
        double? BillingProfileMaxPrice { get; set; }
        /// <summary>Whether boot diagnostics should be enabled on the Virtual Machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether boot diagnostics should be enabled on the Virtual Machine.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? BootDiagnosticEnabled { get; set; }
        /// <summary>
        /// Uri of the storage account to use for placing the console output and screenshot. <br><br>If storageUri is not specified
        /// while enabling boot diagnostics, managed storage will be used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Uri of the storage account to use for placing the console output and screenshot. <br><br>If storageUri is not specified while enabling boot diagnostics, managed storage will be used.",
        SerializedName = @"storageUri",
        PossibleTypes = new [] { typeof(string) })]
        string BootDiagnosticStorageUri { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string CapacityReservationGroupId { get; set; }
        /// <summary>
        /// Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual
        /// machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot
        /// scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.",
        SerializedName = @"evictionPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachineEvictionPolicyTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachineEvictionPolicyTypes? EvictionPolicy { get; set; }
        /// <summary>
        /// Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes
        /// (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). <br><br> Minimum api-version:
        /// 2020-06-01
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). <br><br> Minimum api-version: 2020-06-01",
        SerializedName = @"extensionsTimeBudget",
        PossibleTypes = new [] { typeof(string) })]
        string ExtensionsTimeBudget { get; set; }
        /// <summary>
        /// Specifies the size of the virtual machine. <br><br> The enum data type is currently deprecated and will be removed by
        /// December 23rd 2023. <br><br> Recommended way to get the list of available sizes is using these APIs: <br><br> [List all
        /// available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes)
        /// <br><br> [List all available virtual machine sizes in a region]( https://docs.microsoft.com/rest/api/compute/resourceskus/list)
        /// <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes).
        /// For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/sizes).
        /// <br><br> The available VM sizes depend on region and availability set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the size of the virtual machine. <br><br> The enum data type is currently deprecated and will be removed by December 23rd 2023. <br><br> Recommended way to get the list of available sizes is using these APIs: <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region]( https://docs.microsoft.com/rest/api/compute/resourceskus/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes). For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/sizes). <br><br> The available VM sizes depend on region and availability set.",
        SerializedName = @"vmSize",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachineSizeTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachineSizeTypes? HardwareProfileVMSize { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string HostGroupId { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string HostId { get; set; }
        /// <summary>
        /// The principal id of virtual machine identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal id of virtual machine identity. This property will only be provided for a system assigned identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>
        /// The tenant id associated with the virtual machine. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant id associated with the virtual machine. This property will only be provided for a system assigned identity.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>
        /// The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly
        /// created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ResourceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// Specified the community gallery image unique id for vm deployment. This can be fetched from community gallery image GET
        /// call.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specified the community gallery image unique id for vm deployment. This can be fetched from community gallery image GET call.",
        SerializedName = @"communityGalleryImageId",
        PossibleTypes = new [] { typeof(string) })]
        string ImageReferenceCommunityGalleryImageId { get; set; }
        /// <summary>
        /// Specifies in decimal numbers, the version of platform image or marketplace image used to create the virtual machine. This
        /// readonly field differs from 'version', only if the value specified in 'version' field is 'latest'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies in decimal numbers, the version of platform image or marketplace image used to create the virtual machine. This readonly field differs from 'version', only if the value specified in 'version' field is 'latest'.",
        SerializedName = @"exactVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ImageReferenceExactVersion { get;  }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ImageReferenceId { get; set; }
        /// <summary>
        /// Specifies the offer of the platform image or marketplace image used to create the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the offer of the platform image or marketplace image used to create the virtual machine.",
        SerializedName = @"offer",
        PossibleTypes = new [] { typeof(string) })]
        string ImageReferenceOffer { get; set; }
        /// <summary>The image publisher.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The image publisher.",
        SerializedName = @"publisher",
        PossibleTypes = new [] { typeof(string) })]
        string ImageReferencePublisher { get; set; }
        /// <summary>
        /// Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call.",
        SerializedName = @"sharedGalleryImageId",
        PossibleTypes = new [] { typeof(string) })]
        string ImageReferenceSharedGalleryImageId { get; set; }
        /// <summary>The image SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The image SKU.",
        SerializedName = @"sku",
        PossibleTypes = new [] { typeof(string) })]
        string ImageReferenceSku { get; set; }
        /// <summary>
        /// Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats
        /// are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version
        /// of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy
        /// time even if a new version becomes available. Please do not use field 'version' for gallery image deployment, gallery
        /// image should always use 'id' field for deployment, to use 'latest' version of gallery image, just set '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}'
        /// in the 'id' field without version input.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available. Please do not use field 'version' for gallery image deployment, gallery image should always use 'id' field for deployment, to use 'latest' version of gallery image, just set '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}' in the 'id' field without version input.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string ImageReferenceVersion { get; set; }
        /// <summary>The virtual machine instance view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The virtual machine instance view.",
        SerializedName = @"instanceView",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineInstanceView) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineInstanceView InstanceView { get;  }
        /// <summary>
        /// Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server
        /// operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating
        /// system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid
        /// Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)
        /// <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)
        /// <br><br> Minimum api-version: 2015-06-15
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15",
        SerializedName = @"licenseType",
        PossibleTypes = new [] { typeof(string) })]
        string LicenseType { get; set; }
        /// <summary>
        /// specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations",
        SerializedName = @"networkApiVersion",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.NetworkApiVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.NetworkApiVersion? NetworkProfileNetworkApiVersion { get; set; }
        /// <summary>
        /// Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the list of resource Ids for the network interfaces associated with the virtual machine.",
        SerializedName = @"networkInterfaces",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.INetworkInterfaceReference) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.INetworkInterfaceReference[] NetworkProfileNetworkInterface { get; set; }
        /// <summary>
        /// Specifies the networking configurations that will be used to create the virtual machine networking resources.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the networking configurations that will be used to create the virtual machine networking resources.",
        SerializedName = @"networkInterfaceConfigurations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineNetworkInterfaceConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineNetworkInterfaceConfiguration[] NetworkProfileNetworkInterfaceConfiguration { get; set; }
        /// <summary>
        /// Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed
        /// once VM is provisioned.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed once VM is provisioned.",
        SerializedName = @"osProfile",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSProfile OSProfile { get; set; }
        /// <summary>The plan ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The plan ID.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string PlanName { get; set; }
        /// <summary>
        /// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.",
        SerializedName = @"product",
        PossibleTypes = new [] { typeof(string) })]
        string PlanProduct { get; set; }
        /// <summary>The promotion code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The promotion code.",
        SerializedName = @"promotionCode",
        PossibleTypes = new [] { typeof(string) })]
        string PlanPromotionCode { get; set; }
        /// <summary>The publisher ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The publisher ID.",
        SerializedName = @"publisher",
        PossibleTypes = new [] { typeof(string) })]
        string PlanPublisher { get; set; }
        /// <summary>
        /// Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine
        /// will by automatically assigned to a fault domain that best maintains balance across available fault domains.<br><li>This
        /// is applicable only if the 'virtualMachineScaleSet' property of this Virtual Machine is set.<li>The Virtual Machine Scale
        /// Set that is referenced, must have 'platformFaultDomainCount' &gt; 1.<li>This property cannot be updated once the Virtual
        /// Machine is created.<li>Fault domain assignment can be viewed in the Virtual Machine Instance View.<br><br>Minimum api‐version:
        /// 2020‐12‐01
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains.<br><li>This is applicable only if the 'virtualMachineScaleSet' property of this Virtual Machine is set.<li>The Virtual Machine Scale Set that is referenced, must have 'platformFaultDomainCount' &gt; 1.<li>This property cannot be updated once the Virtual Machine is created.<li>Fault domain assignment can be viewed in the Virtual Machine Instance View.<br><br>Minimum api‐version: 2020‐12‐01",
        SerializedName = @"platformFaultDomain",
        PossibleTypes = new [] { typeof(int) })]
        int? PlatformFaultDomain { get; set; }
        /// <summary>
        /// Specifies the priority for the virtual machine. <br><br>Minimum api-version: 2019-03-01
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the priority for the virtual machine. <br><br>Minimum api-version: 2019-03-01",
        SerializedName = @"priority",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachinePriorityTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachinePriorityTypes? Priority { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state, which only appears in the response.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ProximityPlacementGroupId { get; set; }
        /// <summary>
        /// This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual
        /// machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. <br><br>
        /// Default: The Encryption at host will be disabled unless this property is set to true for the resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. <br><br> Default: The Encryption at host will be disabled unless this property is set to true for the resource.",
        SerializedName = @"encryptionAtHost",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SecurityProfileEncryptionAtHost { get; set; }
        /// <summary>
        /// Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. <br><br>
        /// Default: UefiSettings will not be enabled unless this property is set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. <br><br> Default: UefiSettings will not be enabled unless this property is set.",
        SerializedName = @"securityType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityTypes? SecurityProfileSecurityType { get; set; }
        /// <summary>
        /// Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks,
        /// see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).",
        SerializedName = @"dataDisks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDisk) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDisk[] StorageProfileDataDisk { get; set; }
        /// <summary>
        /// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about
        /// disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).",
        SerializedName = @"osDisk",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSDisk) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSDisk StorageProfileOSDisk { get; set; }
        /// <summary>Specifies whether the Terminate Scheduled event is enabled or disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether the Terminate Scheduled event is enabled or disabled.",
        SerializedName = @"enable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TerminateNotificationProfileEnable { get; set; }
        /// <summary>
        /// Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event
        /// before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value
        /// is 5 minutes (PT5M)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)",
        SerializedName = @"notBeforeTimeout",
        PossibleTypes = new [] { typeof(string) })]
        string TerminateNotificationProfileNotBeforeTimeout { get; set; }
        /// <summary>
        /// Specifies the time at which the Virtual Machine resource was created.<br><br>Minimum api-version: 2022-03-01.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the time at which the Virtual Machine resource was created.<br><br>Minimum api-version: 2022-03-01.",
        SerializedName = @"timeCreated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimeCreated { get;  }
        /// <summary>
        /// Specifies whether secure boot should be enabled on the virtual machine. <br><br>Minimum api-version: 2020-12-01
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether secure boot should be enabled on the virtual machine. <br><br>Minimum api-version: 2020-12-01",
        SerializedName = @"secureBootEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UefiSettingSecureBootEnabled { get; set; }
        /// <summary>
        /// Specifies whether vTPM should be enabled on the virtual machine. <br><br>Minimum api-version: 2020-12-01
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether vTPM should be enabled on the virtual machine. <br><br>Minimum api-version: 2020-12-01",
        SerializedName = @"vTpmEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UefiSettingVTpmEnabled { get; set; }
        /// <summary>
        /// UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version:
        /// 2021-03-01
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01",
        SerializedName = @"userData",
        PossibleTypes = new [] { typeof(string) })]
        string UserData { get; set; }
        /// <summary>
        /// Specifies the VM unique ID which is a 128-bits identifier that is encoded and stored in all Azure IaaS VMs SMBIOS and
        /// can be read using platform BIOS commands.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the VM unique ID which is a 128-bits identifier that is encoded and stored in all Azure IaaS VMs SMBIOS and can be read using platform BIOS commands.",
        SerializedName = @"vmId",
        PossibleTypes = new [] { typeof(string) })]
        string VMId { get;  }
        /// <summary>
        /// Specifies the number of vCPUs available for the VM. <br><br> When this property is not specified in the request body the
        /// default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available
        /// virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) .
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the number of vCPUs available for the VM. <br><br> When this property is not specified in the request body the default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) .",
        SerializedName = @"vCPUsAvailable",
        PossibleTypes = new [] { typeof(int) })]
        int? VMSizePropertyVcpUsAvailable { get; set; }
        /// <summary>
        /// Specifies the vCPU to physical core ratio. <br><br> When this property is not specified in the request body the default
        /// behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine
        /// sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) <br><br> Setting this property
        /// to 1 also means that hyper-threading is disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the vCPU to physical core ratio. <br><br> When this property is not specified in the request body the default behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) <br><br> Setting this property to 1 also means that hyper-threading is disabled.",
        SerializedName = @"vCPUsPerCore",
        PossibleTypes = new [] { typeof(int) })]
        int? VMSizePropertyVcpUsPerCore { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualMachineScaleSetId { get; set; }
        /// <summary>The virtual machine zones.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The virtual machine zones.",
        SerializedName = @"zones",
        PossibleTypes = new [] { typeof(string) })]
        string[] Zone { get; set; }

    }
    /// Describes a Virtual Machine Update.
    internal partial interface IVirtualMachineUpdateInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUpdateResourceInternal
    {
        /// <summary>Specifies additional capabilities enabled or disabled on the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAdditionalCapabilities AdditionalCapability { get; set; }
        /// <summary>The flag that enables or disables hibernation capability on the VM.</summary>
        bool? AdditionalCapabilityHibernationEnabled { get; set; }
        /// <summary>
        /// The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account
        /// type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual
        /// machine scale set only if this property is enabled.
        /// </summary>
        bool? AdditionalCapabilityUltraSsdEnabled { get; set; }
        /// <summary>Specifies the gallery applications that should be made available to the VM/VMSS</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IApplicationProfile ApplicationProfile { get; set; }
        /// <summary>Specifies the gallery applications that should be made available to the VM/VMSS</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMGalleryApplication[] ApplicationProfileGalleryApplication { get; set; }
        /// <summary>
        /// Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified
        /// in the same availability set are allocated to different nodes to maximize availability. For more information about availability
        /// sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). <br><br>
        /// For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates)
        /// <br><br> Currently, a VM can only be added to availability set at creation time. The availability set to which the VM
        /// is being added should be under the same resource group as the availability set resource. An existing VM cannot be added
        /// to an availability set. <br><br>This property cannot exist along with a non-null properties.virtualMachineScaleSet reference.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource AvailabilitySet { get; set; }
        /// <summary>Resource Id</summary>
        string AvailabilitySetId { get; set; }
        /// <summary>
        /// Specifies the billing related details of a Azure Spot virtual machine. <br><br>Minimum api-version: 2019-03-01.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBillingProfile BillingProfile { get; set; }
        /// <summary>
        /// Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. <br><br> This
        /// price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of
        /// create/update of Azure Spot VM/VMSS and the operation will only succeed if the maxPrice is greater than the current Azure
        /// Spot price. <br><br> The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price
        /// goes beyond the maxPrice after creation of VM/VMSS. <br><br> Possible values are: <br><br> - Any decimal value greater
        /// than zero. Example: 0.01538 <br><br> -1 – indicates default price to be up-to on-demand. <br><br> You can set the maxPrice
        /// to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is
        /// -1 if it is not provided by you. <br><br>Minimum api-version: 2019-03-01.
        /// </summary>
        double? BillingProfileMaxPrice { get; set; }
        /// <summary>Whether boot diagnostics should be enabled on the Virtual Machine.</summary>
        bool? BootDiagnosticEnabled { get; set; }
        /// <summary>
        /// Uri of the storage account to use for placing the console output and screenshot. <br><br>If storageUri is not specified
        /// while enabling boot diagnostics, managed storage will be used.
        /// </summary>
        string BootDiagnosticStorageUri { get; set; }
        /// <summary>
        /// Specifies information about the capacity reservation that is used to allocate virtual machine. <br><br>Minimum api-version:
        /// 2021-04-01.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ICapacityReservationProfile CapacityReservation { get; set; }
        /// <summary>
        /// Specifies the capacity reservation group resource id that should be used for allocating the virtual machine or scaleset
        /// vm instances provided enough capacity has been reserved. Please refer to https://aka.ms/CapacityReservation for more details.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource CapacityReservationGroup { get; set; }
        /// <summary>Resource Id</summary>
        string CapacityReservationGroupId { get; set; }
        /// <summary>
        /// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status.
        /// <br>**NOTE**: If storageUri is being specified then ensure that the storage account is in the same region and subscription
        /// as the VM. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot
        /// of the VM from the hypervisor.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnostics DiagnosticProfileBootDiagnostic { get; set; }
        /// <summary>
        /// Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiagnosticsProfile DiagnosticsProfile { get; set; }
        /// <summary>
        /// Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual
        /// machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot
        /// scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachineEvictionPolicyTypes? EvictionPolicy { get; set; }
        /// <summary>
        /// Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes
        /// (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). <br><br> Minimum api-version:
        /// 2020-06-01
        /// </summary>
        string ExtensionsTimeBudget { get; set; }
        /// <summary>Specifies the hardware settings for the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IHardwareProfile HardwareProfile { get; set; }
        /// <summary>
        /// Specifies the size of the virtual machine. <br><br> The enum data type is currently deprecated and will be removed by
        /// December 23rd 2023. <br><br> Recommended way to get the list of available sizes is using these APIs: <br><br> [List all
        /// available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes)
        /// <br><br> [List all available virtual machine sizes in a region]( https://docs.microsoft.com/rest/api/compute/resourceskus/list)
        /// <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes).
        /// For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/sizes).
        /// <br><br> The available VM sizes depend on region and availability set.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachineSizeTypes? HardwareProfileVMSize { get; set; }
        /// <summary>
        /// Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-07-01. <br><br> This
        /// feature is still in preview mode and is not supported for VirtualMachineScaleSet. <br><br> Please follow the instructions
        /// in [VM Customization](https://aka.ms/vmcustomization) for more details.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMSizeProperties HardwareProfileVMSizeProperty { get; set; }
        /// <summary>
        /// Specifies information about the dedicated host that the virtual machine resides in. <br><br>Minimum api-version: 2018-10-01.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource Host { get; set; }
        /// <summary>
        /// Specifies information about the dedicated host group that the virtual machine resides in. <br><br>Minimum api-version:
        /// 2020-06-01. <br><br>NOTE: User cannot specify both host and hostGroup properties.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource HostGroup { get; set; }
        /// <summary>Resource Id</summary>
        string HostGroupId { get; set; }
        /// <summary>Resource Id</summary>
        string HostId { get; set; }
        /// <summary>The identity of the virtual machine, if configured.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineIdentity Identity { get; set; }
        /// <summary>
        /// The principal id of virtual machine identity. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>
        /// The tenant id associated with the virtual machine. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityTenantId { get; set; }
        /// <summary>
        /// The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly
        /// created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// Specified the community gallery image unique id for vm deployment. This can be fetched from community gallery image GET
        /// call.
        /// </summary>
        string ImageReferenceCommunityGalleryImageId { get; set; }
        /// <summary>
        /// Specifies in decimal numbers, the version of platform image or marketplace image used to create the virtual machine. This
        /// readonly field differs from 'version', only if the value specified in 'version' field is 'latest'.
        /// </summary>
        string ImageReferenceExactVersion { get; set; }
        /// <summary>Resource Id</summary>
        string ImageReferenceId { get; set; }
        /// <summary>
        /// Specifies the offer of the platform image or marketplace image used to create the virtual machine.
        /// </summary>
        string ImageReferenceOffer { get; set; }
        /// <summary>The image publisher.</summary>
        string ImageReferencePublisher { get; set; }
        /// <summary>
        /// Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call.
        /// </summary>
        string ImageReferenceSharedGalleryImageId { get; set; }
        /// <summary>The image SKU.</summary>
        string ImageReferenceSku { get; set; }
        /// <summary>
        /// Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats
        /// are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version
        /// of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy
        /// time even if a new version becomes available. Please do not use field 'version' for gallery image deployment, gallery
        /// image should always use 'id' field for deployment, to use 'latest' version of gallery image, just set '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}'
        /// in the 'id' field without version input.
        /// </summary>
        string ImageReferenceVersion { get; set; }
        /// <summary>The virtual machine instance view.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineInstanceView InstanceView { get; set; }
        /// <summary>
        /// Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server
        /// operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating
        /// system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid
        /// Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)
        /// <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)
        /// <br><br> Minimum api-version: 2015-06-15
        /// </summary>
        string LicenseType { get; set; }
        /// <summary>Specifies the network interfaces of the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.INetworkProfile NetworkProfile { get; set; }
        /// <summary>
        /// specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.NetworkApiVersion? NetworkProfileNetworkApiVersion { get; set; }
        /// <summary>
        /// Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.INetworkInterfaceReference[] NetworkProfileNetworkInterface { get; set; }
        /// <summary>
        /// Specifies the networking configurations that will be used to create the virtual machine networking resources.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineNetworkInterfaceConfiguration[] NetworkProfileNetworkInterfaceConfiguration { get; set; }
        /// <summary>
        /// Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed
        /// once VM is provisioned.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSProfile OSProfile { get; set; }
        /// <summary>
        /// Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace
        /// images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure
        /// portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started
        /// ->**. Enter any required information and then click **Save**.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IPlan Plan { get; set; }
        /// <summary>The plan ID.</summary>
        string PlanName { get; set; }
        /// <summary>
        /// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
        /// </summary>
        string PlanProduct { get; set; }
        /// <summary>The promotion code.</summary>
        string PlanPromotionCode { get; set; }
        /// <summary>The publisher ID.</summary>
        string PlanPublisher { get; set; }
        /// <summary>
        /// Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine
        /// will by automatically assigned to a fault domain that best maintains balance across available fault domains.<br><li>This
        /// is applicable only if the 'virtualMachineScaleSet' property of this Virtual Machine is set.<li>The Virtual Machine Scale
        /// Set that is referenced, must have 'platformFaultDomainCount' &gt; 1.<li>This property cannot be updated once the Virtual
        /// Machine is created.<li>Fault domain assignment can be viewed in the Virtual Machine Instance View.<br><br>Minimum api‐version:
        /// 2020‐12‐01
        /// </summary>
        int? PlatformFaultDomain { get; set; }
        /// <summary>
        /// Specifies the priority for the virtual machine. <br><br>Minimum api-version: 2019-03-01
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachinePriorityTypes? Priority { get; set; }
        /// <summary>Describes the properties of a Virtual Machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineProperties Property { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        string ProvisioningState { get; set; }
        /// <summary>
        /// Specifies information about the proximity placement group that the virtual machine should be assigned to. <br><br>Minimum
        /// api-version: 2018-04-01.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource ProximityPlacementGroup { get; set; }
        /// <summary>Resource Id</summary>
        string ProximityPlacementGroupId { get; set; }
        /// <summary>Specifies Terminate Scheduled Event related configurations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ITerminateNotificationProfile ScheduledEventProfileTerminateNotificationProfile { get; set; }
        /// <summary>Specifies Scheduled Event related configurations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IScheduledEventsProfile ScheduledEventsProfile { get; set; }
        /// <summary>Specifies the Security related profile settings for the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISecurityProfile SecurityProfile { get; set; }
        /// <summary>
        /// This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual
        /// machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. <br><br>
        /// Default: The Encryption at host will be disabled unless this property is set to true for the resource.
        /// </summary>
        bool? SecurityProfileEncryptionAtHost { get; set; }
        /// <summary>
        /// Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. <br><br>
        /// Default: UefiSettings will not be enabled unless this property is set.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityTypes? SecurityProfileSecurityType { get; set; }
        /// <summary>
        /// Specifies the security settings like secure boot and vTPM used while creating the virtual machine. <br><br>Minimum api-version:
        /// 2020-12-01
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUefiSettings SecurityProfileUefiSetting { get; set; }
        /// <summary>Specifies the storage settings for the virtual machine disks.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IStorageProfile StorageProfile { get; set; }
        /// <summary>
        /// Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks,
        /// see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDisk[] StorageProfileDataDisk { get; set; }
        /// <summary>
        /// Specifies information about the image to use. You can specify information about platform images, marketplace images, or
        /// virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual
        /// machine image, but is not used in other creation operations.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IImageReference StorageProfileImageReference { get; set; }
        /// <summary>
        /// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about
        /// disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSDisk StorageProfileOSDisk { get; set; }
        /// <summary>Specifies whether the Terminate Scheduled event is enabled or disabled.</summary>
        bool? TerminateNotificationProfileEnable { get; set; }
        /// <summary>
        /// Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event
        /// before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value
        /// is 5 minutes (PT5M)
        /// </summary>
        string TerminateNotificationProfileNotBeforeTimeout { get; set; }
        /// <summary>
        /// Specifies the time at which the Virtual Machine resource was created.<br><br>Minimum api-version: 2022-03-01.
        /// </summary>
        global::System.DateTime? TimeCreated { get; set; }
        /// <summary>
        /// Specifies whether secure boot should be enabled on the virtual machine. <br><br>Minimum api-version: 2020-12-01
        /// </summary>
        bool? UefiSettingSecureBootEnabled { get; set; }
        /// <summary>
        /// Specifies whether vTPM should be enabled on the virtual machine. <br><br>Minimum api-version: 2020-12-01
        /// </summary>
        bool? UefiSettingVTpmEnabled { get; set; }
        /// <summary>
        /// UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version:
        /// 2021-03-01
        /// </summary>
        string UserData { get; set; }
        /// <summary>
        /// Specifies the VM unique ID which is a 128-bits identifier that is encoded and stored in all Azure IaaS VMs SMBIOS and
        /// can be read using platform BIOS commands.
        /// </summary>
        string VMId { get; set; }
        /// <summary>
        /// Specifies the number of vCPUs available for the VM. <br><br> When this property is not specified in the request body the
        /// default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available
        /// virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) .
        /// </summary>
        int? VMSizePropertyVcpUsAvailable { get; set; }
        /// <summary>
        /// Specifies the vCPU to physical core ratio. <br><br> When this property is not specified in the request body the default
        /// behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine
        /// sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) <br><br> Setting this property
        /// to 1 also means that hyper-threading is disabled.
        /// </summary>
        int? VMSizePropertyVcpUsPerCore { get; set; }
        /// <summary>
        /// Specifies information about the virtual machine scale set that the virtual machine should be assigned to. Virtual machines
        /// specified in the same virtual machine scale set are allocated to different nodes to maximize availability. Currently,
        /// a VM can only be added to virtual machine scale set at creation time. An existing VM cannot be added to a virtual machine
        /// scale set. <br><br>This property cannot exist along with a non-null properties.availabilitySet reference. <br><br>Minimum
        /// api‐version: 2019‐03‐01
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource VirtualMachineScaleSet { get; set; }
        /// <summary>Resource Id</summary>
        string VirtualMachineScaleSetId { get; set; }
        /// <summary>The virtual machine zones.</summary>
        string[] Zone { get; set; }

    }
}