// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301
{
    using Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.PowerShell;

    /// <summary>Describes a data disk.</summary>
    [System.ComponentModel.TypeConverter(typeof(DataDiskTypeConverter))]
    public partial class DataDisk
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.DataDisk"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal DataDisk(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Vhd"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Vhd = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk) content.GetValueForProperty("Vhd",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Vhd, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualHardDiskTypeConverter.ConvertFrom);
            }
            if (content.Contains("Image"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Image = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk) content.GetValueForProperty("Image",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Image, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualHardDiskTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDisk = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParameters) content.GetValueForProperty("ManagedDisk",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDisk, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ManagedDiskParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("Lun"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Lun = (int) content.GetValueForProperty("Lun",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Lun, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Caching"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Caching = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.CachingTypes?) content.GetValueForProperty("Caching",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Caching, Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.CachingTypes.CreateFrom);
            }
            if (content.Contains("WriteAcceleratorEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).WriteAcceleratorEnabled = (bool?) content.GetValueForProperty("WriteAcceleratorEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).WriteAcceleratorEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CreateOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).CreateOption = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskCreateOptionTypes) content.GetValueForProperty("CreateOption",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).CreateOption, Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskCreateOptionTypes.CreateFrom);
            }
            if (content.Contains("DiskSizeGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DiskSizeGb = (int?) content.GetValueForProperty("DiskSizeGb",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DiskSizeGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ToBeDetached"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ToBeDetached = (bool?) content.GetValueForProperty("ToBeDetached",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ToBeDetached, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DiskIopsReadWrite"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DiskIopsReadWrite = (long?) content.GetValueForProperty("DiskIopsReadWrite",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DiskIopsReadWrite, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("DiskMBpsReadWrite"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DiskMBpsReadWrite = (long?) content.GetValueForProperty("DiskMBpsReadWrite",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DiskMBpsReadWrite, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("DetachOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DetachOption = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDetachOptionTypes?) content.GetValueForProperty("DetachOption",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DetachOption, Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDetachOptionTypes.CreateFrom);
            }
            if (content.Contains("DeleteOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DeleteOption = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDeleteOptionTypes?) content.GetValueForProperty("DeleteOption",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DeleteOption, Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDeleteOptionTypes.CreateFrom);
            }
            if (content.Contains("VhdUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).VhdUri = (string) content.GetValueForProperty("VhdUri",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).VhdUri, global::System.Convert.ToString);
            }
            if (content.Contains("ImageUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ImageUri = (string) content.GetValueForProperty("ImageUri",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ImageUri, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedDiskId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDiskId = (string) content.GetValueForProperty("ManagedDiskId",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDiskId, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedDiskEncryptionSet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDiskEncryptionSet = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource) content.GetValueForProperty("ManagedDiskEncryptionSet",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDiskEncryptionSet, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.SubResourceTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedDiskSecurityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDiskSecurityProfile = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMDiskSecurityProfile) content.GetValueForProperty("ManagedDiskSecurityProfile",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDiskSecurityProfile, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VMDiskSecurityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedDiskStorageAccountType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDiskStorageAccountType = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountTypes?) content.GetValueForProperty("ManagedDiskStorageAccountType",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDiskStorageAccountType, Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountTypes.CreateFrom);
            }
            if (content.Contains("SubResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).SubResourceId = (string) content.GetValueForProperty("SubResourceId",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).SubResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("SecurityProfileDiskEncryptionSet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).SecurityProfileDiskEncryptionSet = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource) content.GetValueForProperty("SecurityProfileDiskEncryptionSet",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).SecurityProfileDiskEncryptionSet, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.SubResourceTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecurityProfileSecurityEncryptionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).SecurityProfileSecurityEncryptionType = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes?) content.GetValueForProperty("SecurityProfileSecurityEncryptionType",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).SecurityProfileSecurityEncryptionType, Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes.CreateFrom);
            }
            if (content.Contains("SecurityProfileDiskEncryptionSetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).SecurityProfileDiskEncryptionSetId = (string) content.GetValueForProperty("SecurityProfileDiskEncryptionSetId",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).SecurityProfileDiskEncryptionSetId, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.DataDisk"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal DataDisk(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Vhd"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Vhd = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk) content.GetValueForProperty("Vhd",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Vhd, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualHardDiskTypeConverter.ConvertFrom);
            }
            if (content.Contains("Image"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Image = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk) content.GetValueForProperty("Image",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Image, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualHardDiskTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDisk = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParameters) content.GetValueForProperty("ManagedDisk",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDisk, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ManagedDiskParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("Lun"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Lun = (int) content.GetValueForProperty("Lun",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Lun, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Caching"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Caching = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.CachingTypes?) content.GetValueForProperty("Caching",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).Caching, Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.CachingTypes.CreateFrom);
            }
            if (content.Contains("WriteAcceleratorEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).WriteAcceleratorEnabled = (bool?) content.GetValueForProperty("WriteAcceleratorEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).WriteAcceleratorEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CreateOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).CreateOption = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskCreateOptionTypes) content.GetValueForProperty("CreateOption",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).CreateOption, Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskCreateOptionTypes.CreateFrom);
            }
            if (content.Contains("DiskSizeGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DiskSizeGb = (int?) content.GetValueForProperty("DiskSizeGb",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DiskSizeGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ToBeDetached"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ToBeDetached = (bool?) content.GetValueForProperty("ToBeDetached",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ToBeDetached, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DiskIopsReadWrite"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DiskIopsReadWrite = (long?) content.GetValueForProperty("DiskIopsReadWrite",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DiskIopsReadWrite, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("DiskMBpsReadWrite"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DiskMBpsReadWrite = (long?) content.GetValueForProperty("DiskMBpsReadWrite",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DiskMBpsReadWrite, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("DetachOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DetachOption = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDetachOptionTypes?) content.GetValueForProperty("DetachOption",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DetachOption, Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDetachOptionTypes.CreateFrom);
            }
            if (content.Contains("DeleteOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DeleteOption = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDeleteOptionTypes?) content.GetValueForProperty("DeleteOption",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).DeleteOption, Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDeleteOptionTypes.CreateFrom);
            }
            if (content.Contains("VhdUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).VhdUri = (string) content.GetValueForProperty("VhdUri",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).VhdUri, global::System.Convert.ToString);
            }
            if (content.Contains("ImageUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ImageUri = (string) content.GetValueForProperty("ImageUri",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ImageUri, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedDiskId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDiskId = (string) content.GetValueForProperty("ManagedDiskId",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDiskId, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedDiskEncryptionSet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDiskEncryptionSet = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource) content.GetValueForProperty("ManagedDiskEncryptionSet",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDiskEncryptionSet, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.SubResourceTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedDiskSecurityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDiskSecurityProfile = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMDiskSecurityProfile) content.GetValueForProperty("ManagedDiskSecurityProfile",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDiskSecurityProfile, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VMDiskSecurityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedDiskStorageAccountType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDiskStorageAccountType = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountTypes?) content.GetValueForProperty("ManagedDiskStorageAccountType",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).ManagedDiskStorageAccountType, Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountTypes.CreateFrom);
            }
            if (content.Contains("SubResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).SubResourceId = (string) content.GetValueForProperty("SubResourceId",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).SubResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("SecurityProfileDiskEncryptionSet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).SecurityProfileDiskEncryptionSet = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource) content.GetValueForProperty("SecurityProfileDiskEncryptionSet",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).SecurityProfileDiskEncryptionSet, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.SubResourceTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecurityProfileSecurityEncryptionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).SecurityProfileSecurityEncryptionType = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes?) content.GetValueForProperty("SecurityProfileSecurityEncryptionType",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).SecurityProfileSecurityEncryptionType, Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes.CreateFrom);
            }
            if (content.Contains("SecurityProfileDiskEncryptionSetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).SecurityProfileDiskEncryptionSetId = (string) content.GetValueForProperty("SecurityProfileDiskEncryptionSetId",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal)this).SecurityProfileDiskEncryptionSetId, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.DataDisk"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDisk" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDisk DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new DataDisk(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.DataDisk"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDisk" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDisk DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new DataDisk(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="DataDisk" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="DataDisk" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDisk FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Describes a data disk.
    [System.ComponentModel.TypeConverter(typeof(DataDiskTypeConverter))]
    public partial interface IDataDisk

    {

    }
}