// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>Specifies the hardware settings for the virtual machine.</summary>
    public partial class HardwareProfile :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IHardwareProfile,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IHardwareProfileInternal
    {

        /// <summary>Internal Acessors for VMSizeProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMSizeProperties Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IHardwareProfileInternal.VMSizeProperty { get => (this._vMSizeProperty = this._vMSizeProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VMSizeProperties()); set { {_vMSizeProperty = value;} } }

        /// <summary>Backing field for <see cref="VMSize" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachineSizeTypes? _vMSize;

        /// <summary>
        /// Specifies the size of the virtual machine. <br><br> The enum data type is currently deprecated and will be removed by
        /// December 23rd 2023. <br><br> Recommended way to get the list of available sizes is using these APIs: <br><br> [List all
        /// available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes)
        /// <br><br> [List all available virtual machine sizes in a region]( https://docs.microsoft.com/rest/api/compute/resourceskus/list)
        /// <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes).
        /// For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/sizes).
        /// <br><br> The available VM sizes depend on region and availability set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachineSizeTypes? VMSize { get => this._vMSize; set => this._vMSize = value; }

        /// <summary>Backing field for <see cref="VMSizeProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMSizeProperties _vMSizeProperty;

        /// <summary>
        /// Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-07-01. <br><br> This
        /// feature is still in preview mode and is not supported for VirtualMachineScaleSet. <br><br> Please follow the instructions
        /// in [VM Customization](https://aka.ms/vmcustomization) for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMSizeProperties VMSizeProperty { get => (this._vMSizeProperty = this._vMSizeProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VMSizeProperties()); set => this._vMSizeProperty = value; }

        /// <summary>
        /// Specifies the number of vCPUs available for the VM. <br><br> When this property is not specified in the request body the
        /// default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available
        /// virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) .
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? VMSizePropertyVcpUsAvailable { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMSizePropertiesInternal)VMSizeProperty).VCpUsAvailable; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMSizePropertiesInternal)VMSizeProperty).VCpUsAvailable = value ?? default(int); }

        /// <summary>
        /// Specifies the vCPU to physical core ratio. <br><br> When this property is not specified in the request body the default
        /// behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine
        /// sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) <br><br> Setting this property
        /// to 1 also means that hyper-threading is disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? VMSizePropertyVcpUsPerCore { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMSizePropertiesInternal)VMSizeProperty).VCpUsPerCore; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMSizePropertiesInternal)VMSizeProperty).VCpUsPerCore = value ?? default(int); }

        /// <summary>Creates an new <see cref="HardwareProfile" /> instance.</summary>
        public HardwareProfile()
        {

        }
    }
    /// Specifies the hardware settings for the virtual machine.
    public partial interface IHardwareProfile :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Specifies the size of the virtual machine. <br><br> The enum data type is currently deprecated and will be removed by
        /// December 23rd 2023. <br><br> Recommended way to get the list of available sizes is using these APIs: <br><br> [List all
        /// available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes)
        /// <br><br> [List all available virtual machine sizes in a region]( https://docs.microsoft.com/rest/api/compute/resourceskus/list)
        /// <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes).
        /// For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/sizes).
        /// <br><br> The available VM sizes depend on region and availability set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the size of the virtual machine. <br><br> The enum data type is currently deprecated and will be removed by December 23rd 2023. <br><br> Recommended way to get the list of available sizes is using these APIs: <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region]( https://docs.microsoft.com/rest/api/compute/resourceskus/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes). For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/sizes). <br><br> The available VM sizes depend on region and availability set.",
        SerializedName = @"vmSize",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachineSizeTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachineSizeTypes? VMSize { get; set; }
        /// <summary>
        /// Specifies the number of vCPUs available for the VM. <br><br> When this property is not specified in the request body the
        /// default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available
        /// virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) .
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the number of vCPUs available for the VM. <br><br> When this property is not specified in the request body the default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) .",
        SerializedName = @"vCPUsAvailable",
        PossibleTypes = new [] { typeof(int) })]
        int? VMSizePropertyVcpUsAvailable { get; set; }
        /// <summary>
        /// Specifies the vCPU to physical core ratio. <br><br> When this property is not specified in the request body the default
        /// behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine
        /// sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) <br><br> Setting this property
        /// to 1 also means that hyper-threading is disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the vCPU to physical core ratio. <br><br> When this property is not specified in the request body the default behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) <br><br> Setting this property to 1 also means that hyper-threading is disabled.",
        SerializedName = @"vCPUsPerCore",
        PossibleTypes = new [] { typeof(int) })]
        int? VMSizePropertyVcpUsPerCore { get; set; }

    }
    /// Specifies the hardware settings for the virtual machine.
    internal partial interface IHardwareProfileInternal

    {
        /// <summary>
        /// Specifies the size of the virtual machine. <br><br> The enum data type is currently deprecated and will be removed by
        /// December 23rd 2023. <br><br> Recommended way to get the list of available sizes is using these APIs: <br><br> [List all
        /// available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes)
        /// <br><br> [List all available virtual machine sizes in a region]( https://docs.microsoft.com/rest/api/compute/resourceskus/list)
        /// <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes).
        /// For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/sizes).
        /// <br><br> The available VM sizes depend on region and availability set.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.VirtualMachineSizeTypes? VMSize { get; set; }
        /// <summary>
        /// Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-07-01. <br><br> This
        /// feature is still in preview mode and is not supported for VirtualMachineScaleSet. <br><br> Please follow the instructions
        /// in [VM Customization](https://aka.ms/vmcustomization) for more details.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMSizeProperties VMSizeProperty { get; set; }
        /// <summary>
        /// Specifies the number of vCPUs available for the VM. <br><br> When this property is not specified in the request body the
        /// default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available
        /// virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) .
        /// </summary>
        int? VMSizePropertyVcpUsAvailable { get; set; }
        /// <summary>
        /// Specifies the vCPU to physical core ratio. <br><br> When this property is not specified in the request body the default
        /// behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine
        /// sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) <br><br> Setting this property
        /// to 1 also means that hyper-threading is disabled.
        /// </summary>
        int? VMSizePropertyVcpUsPerCore { get; set; }

    }
}