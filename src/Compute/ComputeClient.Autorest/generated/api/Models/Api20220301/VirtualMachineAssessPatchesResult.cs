// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Extensions;

    /// <summary>Describes the properties of an AssessPatches result.</summary>
    public partial class VirtualMachineAssessPatchesResult :
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineAssessPatchesResult,
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineAssessPatchesResultInternal
    {

        /// <summary>Backing field for <see cref="AssessmentActivityId" /> property.</summary>
        private string _assessmentActivityId;

        /// <summary>
        /// The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public string AssessmentActivityId { get => this._assessmentActivityId; }

        /// <summary>Backing field for <see cref="AvailablePatch" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineSoftwarePatchProperties[] _availablePatch;

        /// <summary>The list of patches that have been detected as available for installation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineSoftwarePatchProperties[] AvailablePatch { get => this._availablePatch; }

        /// <summary>The error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public string Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Code = value ?? null; }

        /// <summary>Backing field for <see cref="CriticalAndSecurityPatchCount" /> property.</summary>
        private int? _criticalAndSecurityPatchCount;

        /// <summary>
        /// The number of critical or security patches that have been detected as available and not yet installed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public int? CriticalAndSecurityPatchCount { get => this._criticalAndSecurityPatchCount; }

        /// <summary>The Api error details</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorBase[] Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Detail = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Error" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiError _error;

        /// <summary>
        /// The errors that were encountered during execution of the operation. The details array contains the list of them.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiError Error { get => (this._error = this._error ?? new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ApiError()); }

        /// <summary>The internal error message or exception dump.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public string InnererrorErrordetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).InnererrorErrordetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).InnererrorErrordetail = value ?? null; }

        /// <summary>The exception type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public string InnererrorExceptiontype { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).InnererrorExceptiontype; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).InnererrorExceptiontype = value ?? null; }

        /// <summary>The error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public string Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Message = value ?? null; }

        /// <summary>Internal Acessors for AssessmentActivityId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineAssessPatchesResultInternal.AssessmentActivityId { get => this._assessmentActivityId; set { {_assessmentActivityId = value;} } }

        /// <summary>Internal Acessors for AvailablePatch</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineSoftwarePatchProperties[] Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineAssessPatchesResultInternal.AvailablePatch { get => this._availablePatch; set { {_availablePatch = value;} } }

        /// <summary>Internal Acessors for CriticalAndSecurityPatchCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineAssessPatchesResultInternal.CriticalAndSecurityPatchCount { get => this._criticalAndSecurityPatchCount; set { {_criticalAndSecurityPatchCount = value;} } }

        /// <summary>Internal Acessors for Error</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiError Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineAssessPatchesResultInternal.Error { get => (this._error = this._error ?? new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ApiError()); set { {_error = value;} } }

        /// <summary>Internal Acessors for Innererror</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IInnerError Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineAssessPatchesResultInternal.Innererror { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Innererror; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Innererror = value; }

        /// <summary>Internal Acessors for OtherPatchCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineAssessPatchesResultInternal.OtherPatchCount { get => this._otherPatchCount; set { {_otherPatchCount = value;} } }

        /// <summary>Internal Acessors for RebootPending</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineAssessPatchesResultInternal.RebootPending { get => this._rebootPending; set { {_rebootPending = value;} } }

        /// <summary>Internal Acessors for StartDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineAssessPatchesResultInternal.StartDateTime { get => this._startDateTime; set { {_startDateTime = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.PatchOperationStatus? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineAssessPatchesResultInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>Backing field for <see cref="OtherPatchCount" /> property.</summary>
        private int? _otherPatchCount;

        /// <summary>The number of all available patches excluding critical and security.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public int? OtherPatchCount { get => this._otherPatchCount; }

        /// <summary>Backing field for <see cref="RebootPending" /> property.</summary>
        private bool? _rebootPending;

        /// <summary>
        /// The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation
        /// but the reboot has not yet occurred.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public bool? RebootPending { get => this._rebootPending; }

        /// <summary>Backing field for <see cref="StartDateTime" /> property.</summary>
        private global::System.DateTime? _startDateTime;

        /// <summary>The UTC timestamp when the operation began.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public global::System.DateTime? StartDateTime { get => this._startDateTime; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.PatchOperationStatus? _status;

        /// <summary>
        /// The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that
        /// point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.PatchOperationStatus? Status { get => this._status; }

        /// <summary>The target of the particular error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public string Target { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Target = value ?? null; }

        /// <summary>Creates an new <see cref="VirtualMachineAssessPatchesResult" /> instance.</summary>
        public VirtualMachineAssessPatchesResult()
        {

        }
    }
    /// Describes the properties of an AssessPatches result.
    public partial interface IVirtualMachineAssessPatchesResult :
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.",
        SerializedName = @"assessmentActivityId",
        PossibleTypes = new [] { typeof(string) })]
        string AssessmentActivityId { get;  }
        /// <summary>The list of patches that have been detected as available for installation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of patches that have been detected as available for installation.",
        SerializedName = @"availablePatches",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineSoftwarePatchProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineSoftwarePatchProperties[] AvailablePatch { get;  }
        /// <summary>The error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The error code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string Code { get; set; }
        /// <summary>
        /// The number of critical or security patches that have been detected as available and not yet installed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of critical or security patches that have been detected as available and not yet installed.",
        SerializedName = @"criticalAndSecurityPatchCount",
        PossibleTypes = new [] { typeof(int) })]
        int? CriticalAndSecurityPatchCount { get;  }
        /// <summary>The Api error details</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Api error details",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorBase) })]
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorBase[] Detail { get; set; }
        /// <summary>The internal error message or exception dump.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The internal error message or exception dump.",
        SerializedName = @"errordetail",
        PossibleTypes = new [] { typeof(string) })]
        string InnererrorErrordetail { get; set; }
        /// <summary>The exception type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The exception type.",
        SerializedName = @"exceptiontype",
        PossibleTypes = new [] { typeof(string) })]
        string InnererrorExceptiontype { get; set; }
        /// <summary>The error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The error message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get; set; }
        /// <summary>The number of all available patches excluding critical and security.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of all available patches excluding critical and security.",
        SerializedName = @"otherPatchCount",
        PossibleTypes = new [] { typeof(int) })]
        int? OtherPatchCount { get;  }
        /// <summary>
        /// The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation
        /// but the reboot has not yet occurred.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation but the reboot has not yet occurred.",
        SerializedName = @"rebootPending",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RebootPending { get;  }
        /// <summary>The UTC timestamp when the operation began.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The UTC timestamp when the operation began.",
        SerializedName = @"startDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartDateTime { get;  }
        /// <summary>
        /// The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that
        /// point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The overall success or failure status of the operation. It remains ""InProgress"" until the operation completes. At that point it will become ""Unknown"", ""Failed"", ""Succeeded"", or ""CompletedWithWarnings.""",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.PatchOperationStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.PatchOperationStatus? Status { get;  }
        /// <summary>The target of the particular error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target of the particular error.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string Target { get; set; }

    }
    /// Describes the properties of an AssessPatches result.
    internal partial interface IVirtualMachineAssessPatchesResultInternal

    {
        /// <summary>
        /// The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        /// </summary>
        string AssessmentActivityId { get; set; }
        /// <summary>The list of patches that have been detected as available for installation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineSoftwarePatchProperties[] AvailablePatch { get; set; }
        /// <summary>The error code.</summary>
        string Code { get; set; }
        /// <summary>
        /// The number of critical or security patches that have been detected as available and not yet installed.
        /// </summary>
        int? CriticalAndSecurityPatchCount { get; set; }
        /// <summary>The Api error details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorBase[] Detail { get; set; }
        /// <summary>
        /// The errors that were encountered during execution of the operation. The details array contains the list of them.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiError Error { get; set; }
        /// <summary>The Api inner error</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IInnerError Innererror { get; set; }
        /// <summary>The internal error message or exception dump.</summary>
        string InnererrorErrordetail { get; set; }
        /// <summary>The exception type.</summary>
        string InnererrorExceptiontype { get; set; }
        /// <summary>The error message.</summary>
        string Message { get; set; }
        /// <summary>The number of all available patches excluding critical and security.</summary>
        int? OtherPatchCount { get; set; }
        /// <summary>
        /// The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation
        /// but the reboot has not yet occurred.
        /// </summary>
        bool? RebootPending { get; set; }
        /// <summary>The UTC timestamp when the operation began.</summary>
        global::System.DateTime? StartDateTime { get; set; }
        /// <summary>
        /// The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that
        /// point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.PatchOperationStatus? Status { get; set; }
        /// <summary>The target of the particular error.</summary>
        string Target { get; set; }

    }
}