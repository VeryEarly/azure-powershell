// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Extensions;

    /// <summary>Describes the properties of the last installed patch summary.</summary>
    public partial class LastPatchInstallationSummary :
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILastPatchInstallationSummary,
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILastPatchInstallationSummaryInternal
    {

        /// <summary>The error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public string Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Code = value ?? null; }

        /// <summary>The Api error details</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorBase[] Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Detail = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Error" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiError _error;

        /// <summary>
        /// The errors that were encountered during execution of the operation. The details array contains the list of them.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiError Error { get => (this._error = this._error ?? new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ApiError()); }

        /// <summary>Backing field for <see cref="ExcludedPatchCount" /> property.</summary>
        private int? _excludedPatchCount;

        /// <summary>
        /// The number of all available patches but excluded explicitly by a customer-specified exclusion list match.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public int? ExcludedPatchCount { get => this._excludedPatchCount; }

        /// <summary>Backing field for <see cref="FailedPatchCount" /> property.</summary>
        private int? _failedPatchCount;

        /// <summary>The count of patches that failed installation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public int? FailedPatchCount { get => this._failedPatchCount; }

        /// <summary>The internal error message or exception dump.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public string InnererrorErrordetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).InnererrorErrordetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).InnererrorErrordetail = value ?? null; }

        /// <summary>The exception type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public string InnererrorExceptiontype { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).InnererrorExceptiontype; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).InnererrorExceptiontype = value ?? null; }

        /// <summary>Backing field for <see cref="InstallationActivityId" /> property.</summary>
        private string _installationActivityId;

        /// <summary>
        /// The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public string InstallationActivityId { get => this._installationActivityId; }

        /// <summary>Backing field for <see cref="InstalledPatchCount" /> property.</summary>
        private int? _installedPatchCount;

        /// <summary>The count of patches that successfully installed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public int? InstalledPatchCount { get => this._installedPatchCount; }

        /// <summary>Backing field for <see cref="LastModifiedTime" /> property.</summary>
        private global::System.DateTime? _lastModifiedTime;

        /// <summary>The UTC timestamp when the operation began.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public global::System.DateTime? LastModifiedTime { get => this._lastModifiedTime; }

        /// <summary>Backing field for <see cref="MaintenanceWindowExceeded" /> property.</summary>
        private bool? _maintenanceWindowExceeded;

        /// <summary>
        /// Describes whether the operation ran out of time before it completed all its intended actions
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public bool? MaintenanceWindowExceeded { get => this._maintenanceWindowExceeded; }

        /// <summary>The error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public string Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Message = value ?? null; }

        /// <summary>Internal Acessors for Error</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiError Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILastPatchInstallationSummaryInternal.Error { get => (this._error = this._error ?? new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ApiError()); set { {_error = value;} } }

        /// <summary>Internal Acessors for ExcludedPatchCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILastPatchInstallationSummaryInternal.ExcludedPatchCount { get => this._excludedPatchCount; set { {_excludedPatchCount = value;} } }

        /// <summary>Internal Acessors for FailedPatchCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILastPatchInstallationSummaryInternal.FailedPatchCount { get => this._failedPatchCount; set { {_failedPatchCount = value;} } }

        /// <summary>Internal Acessors for Innererror</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IInnerError Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILastPatchInstallationSummaryInternal.Innererror { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Innererror; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Innererror = value; }

        /// <summary>Internal Acessors for InstallationActivityId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILastPatchInstallationSummaryInternal.InstallationActivityId { get => this._installationActivityId; set { {_installationActivityId = value;} } }

        /// <summary>Internal Acessors for InstalledPatchCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILastPatchInstallationSummaryInternal.InstalledPatchCount { get => this._installedPatchCount; set { {_installedPatchCount = value;} } }

        /// <summary>Internal Acessors for LastModifiedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILastPatchInstallationSummaryInternal.LastModifiedTime { get => this._lastModifiedTime; set { {_lastModifiedTime = value;} } }

        /// <summary>Internal Acessors for MaintenanceWindowExceeded</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILastPatchInstallationSummaryInternal.MaintenanceWindowExceeded { get => this._maintenanceWindowExceeded; set { {_maintenanceWindowExceeded = value;} } }

        /// <summary>Internal Acessors for NotSelectedPatchCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILastPatchInstallationSummaryInternal.NotSelectedPatchCount { get => this._notSelectedPatchCount; set { {_notSelectedPatchCount = value;} } }

        /// <summary>Internal Acessors for PendingPatchCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILastPatchInstallationSummaryInternal.PendingPatchCount { get => this._pendingPatchCount; set { {_pendingPatchCount = value;} } }

        /// <summary>Internal Acessors for StartTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILastPatchInstallationSummaryInternal.StartTime { get => this._startTime; set { {_startTime = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.PatchOperationStatus? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILastPatchInstallationSummaryInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>Backing field for <see cref="NotSelectedPatchCount" /> property.</summary>
        private int? _notSelectedPatchCount;

        /// <summary>
        /// The number of all available patches but not going to be installed because it didn't match a classification or inclusion
        /// list entry.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public int? NotSelectedPatchCount { get => this._notSelectedPatchCount; }

        /// <summary>Backing field for <see cref="PendingPatchCount" /> property.</summary>
        private int? _pendingPatchCount;

        /// <summary>
        /// The number of all available patches expected to be installed over the course of the patch installation operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public int? PendingPatchCount { get => this._pendingPatchCount; }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime? _startTime;

        /// <summary>The UTC timestamp when the operation began.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public global::System.DateTime? StartTime { get => this._startTime; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.PatchOperationStatus? _status;

        /// <summary>
        /// The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that
        /// point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.PatchOperationStatus? Status { get => this._status; }

        /// <summary>The target of the particular error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public string Target { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorInternal)Error).Target = value ?? null; }

        /// <summary>Creates an new <see cref="LastPatchInstallationSummary" /> instance.</summary>
        public LastPatchInstallationSummary()
        {

        }
    }
    /// Describes the properties of the last installed patch summary.
    public partial interface ILastPatchInstallationSummary :
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.IJsonSerializable
    {
        /// <summary>The error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The error code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string Code { get; set; }
        /// <summary>The Api error details</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Api error details",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorBase) })]
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorBase[] Detail { get; set; }
        /// <summary>
        /// The number of all available patches but excluded explicitly by a customer-specified exclusion list match.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of all available patches but excluded explicitly by a customer-specified exclusion list match.",
        SerializedName = @"excludedPatchCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ExcludedPatchCount { get;  }
        /// <summary>The count of patches that failed installation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The count of patches that failed installation.",
        SerializedName = @"failedPatchCount",
        PossibleTypes = new [] { typeof(int) })]
        int? FailedPatchCount { get;  }
        /// <summary>The internal error message or exception dump.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The internal error message or exception dump.",
        SerializedName = @"errordetail",
        PossibleTypes = new [] { typeof(string) })]
        string InnererrorErrordetail { get; set; }
        /// <summary>The exception type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The exception type.",
        SerializedName = @"exceptiontype",
        PossibleTypes = new [] { typeof(string) })]
        string InnererrorExceptiontype { get; set; }
        /// <summary>
        /// The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.",
        SerializedName = @"installationActivityId",
        PossibleTypes = new [] { typeof(string) })]
        string InstallationActivityId { get;  }
        /// <summary>The count of patches that successfully installed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The count of patches that successfully installed.",
        SerializedName = @"installedPatchCount",
        PossibleTypes = new [] { typeof(int) })]
        int? InstalledPatchCount { get;  }
        /// <summary>The UTC timestamp when the operation began.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The UTC timestamp when the operation began.",
        SerializedName = @"lastModifiedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModifiedTime { get;  }
        /// <summary>
        /// Describes whether the operation ran out of time before it completed all its intended actions
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Describes whether the operation ran out of time before it completed all its intended actions",
        SerializedName = @"maintenanceWindowExceeded",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaintenanceWindowExceeded { get;  }
        /// <summary>The error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The error message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get; set; }
        /// <summary>
        /// The number of all available patches but not going to be installed because it didn't match a classification or inclusion
        /// list entry.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of all available patches but not going to be installed because it didn't match a classification or inclusion list entry.",
        SerializedName = @"notSelectedPatchCount",
        PossibleTypes = new [] { typeof(int) })]
        int? NotSelectedPatchCount { get;  }
        /// <summary>
        /// The number of all available patches expected to be installed over the course of the patch installation operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of all available patches expected to be installed over the course of the patch installation operation.",
        SerializedName = @"pendingPatchCount",
        PossibleTypes = new [] { typeof(int) })]
        int? PendingPatchCount { get;  }
        /// <summary>The UTC timestamp when the operation began.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The UTC timestamp when the operation began.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTime { get;  }
        /// <summary>
        /// The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that
        /// point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The overall success or failure status of the operation. It remains ""InProgress"" until the operation completes. At that point it will become ""Unknown"", ""Failed"", ""Succeeded"", or ""CompletedWithWarnings.""",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.PatchOperationStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.PatchOperationStatus? Status { get;  }
        /// <summary>The target of the particular error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target of the particular error.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string Target { get; set; }

    }
    /// Describes the properties of the last installed patch summary.
    internal partial interface ILastPatchInstallationSummaryInternal

    {
        /// <summary>The error code.</summary>
        string Code { get; set; }
        /// <summary>The Api error details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiErrorBase[] Detail { get; set; }
        /// <summary>
        /// The errors that were encountered during execution of the operation. The details array contains the list of them.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IApiError Error { get; set; }
        /// <summary>
        /// The number of all available patches but excluded explicitly by a customer-specified exclusion list match.
        /// </summary>
        int? ExcludedPatchCount { get; set; }
        /// <summary>The count of patches that failed installation.</summary>
        int? FailedPatchCount { get; set; }
        /// <summary>The Api inner error</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IInnerError Innererror { get; set; }
        /// <summary>The internal error message or exception dump.</summary>
        string InnererrorErrordetail { get; set; }
        /// <summary>The exception type.</summary>
        string InnererrorExceptiontype { get; set; }
        /// <summary>
        /// The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        /// </summary>
        string InstallationActivityId { get; set; }
        /// <summary>The count of patches that successfully installed.</summary>
        int? InstalledPatchCount { get; set; }
        /// <summary>The UTC timestamp when the operation began.</summary>
        global::System.DateTime? LastModifiedTime { get; set; }
        /// <summary>
        /// Describes whether the operation ran out of time before it completed all its intended actions
        /// </summary>
        bool? MaintenanceWindowExceeded { get; set; }
        /// <summary>The error message.</summary>
        string Message { get; set; }
        /// <summary>
        /// The number of all available patches but not going to be installed because it didn't match a classification or inclusion
        /// list entry.
        /// </summary>
        int? NotSelectedPatchCount { get; set; }
        /// <summary>
        /// The number of all available patches expected to be installed over the course of the patch installation operation.
        /// </summary>
        int? PendingPatchCount { get; set; }
        /// <summary>The UTC timestamp when the operation began.</summary>
        global::System.DateTime? StartTime { get; set; }
        /// <summary>
        /// The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that
        /// point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.PatchOperationStatus? Status { get; set; }
        /// <summary>The target of the particular error.</summary>
        string Target { get; set; }

    }
}