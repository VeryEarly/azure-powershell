// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Extensions;

    /// <summary>The parameters of a managed disk.</summary>
    public partial class ManagedDiskParameters :
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IManagedDiskParameters,
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IManagedDiskParametersInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResource __subResource = new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.SubResource();

        /// <summary>Backing field for <see cref="DiskEncryptionSet" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResource _diskEncryptionSet;

        /// <summary>
        /// Specifies the customer managed disk encryption set resource id for the managed disk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResource DiskEncryptionSet { get => (this._diskEncryptionSet = this._diskEncryptionSet ?? new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.SubResource()); set => this._diskEncryptionSet = value; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResourceInternal)__subResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResourceInternal)__subResource).Id = value ?? null; }

        /// <summary>Internal Acessors for DiskEncryptionSet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResource Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IManagedDiskParametersInternal.DiskEncryptionSet { get => (this._diskEncryptionSet = this._diskEncryptionSet ?? new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.SubResource()); set { {_diskEncryptionSet = value;} } }

        /// <summary>Internal Acessors for SecurityProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVMDiskSecurityProfile Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IManagedDiskParametersInternal.SecurityProfile { get => (this._securityProfile = this._securityProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.VMDiskSecurityProfile()); set { {_securityProfile = value;} } }

        /// <summary>Internal Acessors for SecurityProfileDiskEncryptionSet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResource Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IManagedDiskParametersInternal.SecurityProfileDiskEncryptionSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVMDiskSecurityProfileInternal)SecurityProfile).DiskEncryptionSet; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVMDiskSecurityProfileInternal)SecurityProfile).DiskEncryptionSet = value; }

        /// <summary>Backing field for <see cref="SecurityProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVMDiskSecurityProfile _securityProfile;

        /// <summary>Specifies the security profile for the managed disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVMDiskSecurityProfile SecurityProfile { get => (this._securityProfile = this._securityProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.VMDiskSecurityProfile()); set => this._securityProfile = value; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public string SecurityProfileDiskEncryptionSetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVMDiskSecurityProfileInternal)SecurityProfile).DiskEncryptionSetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVMDiskSecurityProfileInternal)SecurityProfile).DiskEncryptionSetId = value ?? null; }

        /// <summary>
        /// Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed
        /// disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It
        /// can be set for only Confidential VMs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.SecurityEncryptionTypes? SecurityProfileSecurityEncryptionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVMDiskSecurityProfileInternal)SecurityProfile).SecurityEncryptionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVMDiskSecurityProfileInternal)SecurityProfile).SecurityEncryptionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.SecurityEncryptionTypes)""); }

        /// <summary>Backing field for <see cref="StorageAccountType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.StorageAccountTypes? _storageAccountType;

        /// <summary>
        /// Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot
        /// be used with OS Disk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.StorageAccountTypes? StorageAccountType { get => this._storageAccountType; set => this._storageAccountType = value; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public string SubResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResourceInternal)DiskEncryptionSet).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResourceInternal)DiskEncryptionSet).Id = value ?? null; }

        /// <summary>Creates an new <see cref="ManagedDiskParameters" /> instance.</summary>
        public ManagedDiskParameters()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__subResource), __subResource);
            await eventListener.AssertObjectIsValid(nameof(__subResource), __subResource);
        }
    }
    /// The parameters of a managed disk.
    public partial interface IManagedDiskParameters :
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResource
    {
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string SecurityProfileDiskEncryptionSetId { get; set; }
        /// <summary>
        /// Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed
        /// disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It
        /// can be set for only Confidential VMs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It can be set for only Confidential VMs.",
        SerializedName = @"securityEncryptionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.SecurityEncryptionTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.SecurityEncryptionTypes? SecurityProfileSecurityEncryptionType { get; set; }
        /// <summary>
        /// Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot
        /// be used with OS Disk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.",
        SerializedName = @"storageAccountType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.StorageAccountTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.StorageAccountTypes? StorageAccountType { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string SubResourceId { get; set; }

    }
    /// The parameters of a managed disk.
    internal partial interface IManagedDiskParametersInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResourceInternal
    {
        /// <summary>
        /// Specifies the customer managed disk encryption set resource id for the managed disk.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResource DiskEncryptionSet { get; set; }
        /// <summary>Specifies the security profile for the managed disk.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVMDiskSecurityProfile SecurityProfile { get; set; }
        /// <summary>
        /// Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed
        /// Key encrypted ConfidentialVM OS Disk and VMGuest blob.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResource SecurityProfileDiskEncryptionSet { get; set; }
        /// <summary>Resource Id</summary>
        string SecurityProfileDiskEncryptionSetId { get; set; }
        /// <summary>
        /// Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed
        /// disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It
        /// can be set for only Confidential VMs.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.SecurityEncryptionTypes? SecurityProfileSecurityEncryptionType { get; set; }
        /// <summary>
        /// Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot
        /// be used with OS Disk.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.StorageAccountTypes? StorageAccountType { get; set; }
        /// <summary>Resource Id</summary>
        string SubResourceId { get; set; }

    }
}