// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Extensions;

    /// <summary>
    /// Information about a specific patch that was encountered during an installation action.
    /// </summary>
    public partial class PatchInstallationDetail :
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IPatchInstallationDetail,
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IPatchInstallationDetailInternal
    {

        /// <summary>Backing field for <see cref="Classification" /> property.</summary>
        private string[] _classification;

        /// <summary>The classification(s) of the patch as provided by the patch publisher.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public string[] Classification { get => this._classification; }

        /// <summary>Backing field for <see cref="InstallationState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.PatchInstallationState? _installationState;

        /// <summary>The state of the patch after the installation operation completed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.PatchInstallationState? InstallationState { get => this._installationState; }

        /// <summary>Backing field for <see cref="KbId" /> property.</summary>
        private string _kbId;

        /// <summary>The KBID of the patch. Only applies to Windows patches.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public string KbId { get => this._kbId; }

        /// <summary>Internal Acessors for Classification</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IPatchInstallationDetailInternal.Classification { get => this._classification; set { {_classification = value;} } }

        /// <summary>Internal Acessors for InstallationState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.PatchInstallationState? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IPatchInstallationDetailInternal.InstallationState { get => this._installationState; set { {_installationState = value;} } }

        /// <summary>Internal Acessors for KbId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IPatchInstallationDetailInternal.KbId { get => this._kbId; set { {_kbId = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IPatchInstallationDetailInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for PatchId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IPatchInstallationDetailInternal.PatchId { get => this._patchId; set { {_patchId = value;} } }

        /// <summary>Internal Acessors for Version</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IPatchInstallationDetailInternal.Version { get => this._version; set { {_version = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The friendly name of the patch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="PatchId" /> property.</summary>
        private string _patchId;

        /// <summary>A unique identifier for the patch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public string PatchId { get => this._patchId; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary>
        /// The version string of the package. It may conform to Semantic Versioning. Only applies to Linux.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public string Version { get => this._version; }

        /// <summary>Creates an new <see cref="PatchInstallationDetail" /> instance.</summary>
        public PatchInstallationDetail()
        {

        }
    }
    /// Information about a specific patch that was encountered during an installation action.
    public partial interface IPatchInstallationDetail :
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.IJsonSerializable
    {
        /// <summary>The classification(s) of the patch as provided by the patch publisher.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The classification(s) of the patch as provided by the patch publisher.",
        SerializedName = @"classifications",
        PossibleTypes = new [] { typeof(string) })]
        string[] Classification { get;  }
        /// <summary>The state of the patch after the installation operation completed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The state of the patch after the installation operation completed.",
        SerializedName = @"installationState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.PatchInstallationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.PatchInstallationState? InstallationState { get;  }
        /// <summary>The KBID of the patch. Only applies to Windows patches.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The KBID of the patch. Only applies to Windows patches.",
        SerializedName = @"kbId",
        PossibleTypes = new [] { typeof(string) })]
        string KbId { get;  }
        /// <summary>The friendly name of the patch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The friendly name of the patch.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>A unique identifier for the patch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A unique identifier for the patch.",
        SerializedName = @"patchId",
        PossibleTypes = new [] { typeof(string) })]
        string PatchId { get;  }
        /// <summary>
        /// The version string of the package. It may conform to Semantic Versioning. Only applies to Linux.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The version string of the package. It may conform to Semantic Versioning. Only applies to Linux.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get;  }

    }
    /// Information about a specific patch that was encountered during an installation action.
    internal partial interface IPatchInstallationDetailInternal

    {
        /// <summary>The classification(s) of the patch as provided by the patch publisher.</summary>
        string[] Classification { get; set; }
        /// <summary>The state of the patch after the installation operation completed.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.PatchInstallationState? InstallationState { get; set; }
        /// <summary>The KBID of the patch. Only applies to Windows patches.</summary>
        string KbId { get; set; }
        /// <summary>The friendly name of the patch.</summary>
        string Name { get; set; }
        /// <summary>A unique identifier for the patch.</summary>
        string PatchId { get; set; }
        /// <summary>
        /// The version string of the package. It may conform to Semantic Versioning. Only applies to Linux.
        /// </summary>
        string Version { get; set; }

    }
}