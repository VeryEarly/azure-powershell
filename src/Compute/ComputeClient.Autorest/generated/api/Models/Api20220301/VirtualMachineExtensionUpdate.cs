// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>Describes a Virtual Machine Extension.</summary>
    public partial class VirtualMachineExtensionUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdateInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUpdateResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUpdateResource __updateResource = new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.UpdateResource();

        /// <summary>
        /// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed,
        /// however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? AutoUpgradeMinorVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).AutoUpgradeMinorVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).AutoUpgradeMinorVersion = value ?? default(bool); }

        /// <summary>
        /// Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension
        /// available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? EnableAutomaticUpgrade { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).EnableAutomaticUpgrade; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).EnableAutomaticUpgrade = value ?? default(bool); }

        /// <summary>
        /// How the extension handler should be forced to update even if the extension configuration has not changed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ForceUpdateTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).ForceUpdateTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).ForceUpdateTag = value ?? null; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdateProperties Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualMachineExtensionUpdateProperties()); set { {_property = value;} } }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdateProperties _property;

        /// <summary>Describes the properties of a Virtual Machine Extension.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdateProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualMachineExtensionUpdateProperties()); set => this._property = value; }

        /// <summary>
        /// The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.IAny ProtectedSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).ProtectedSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).ProtectedSetting = value ?? null /* model class */; }

        /// <summary>
        /// The extensions protected settings that are passed by reference, and consumed from key vault
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.IAny ProtectedSettingsFromKeyVault { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).ProtectedSettingsFromKeyVault; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).ProtectedSettingsFromKeyVault = value ?? null /* model class */; }

        /// <summary>The name of the extension handler publisher.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string Publisher { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).Publisher; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).Publisher = value ?? null; }

        /// <summary>Json formatted public settings for the extension.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.IAny Setting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).Setting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).Setting = value ?? null /* model class */; }

        /// <summary>
        /// Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting
        /// to the VM will not be suppressed regardless of this value). The default is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? SuppressFailure { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).SuppressFailure; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).SuppressFailure = value ?? default(bool); }

        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUpdateResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUpdateResourceInternal)__updateResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUpdateResourceInternal)__updateResource).Tag = value ?? null /* model class */; }

        /// <summary>Specifies the type of the extension; an example is "CustomScriptExtension".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).Type = value ?? null; }

        /// <summary>Specifies the version of the script handler.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string TypeHandlerVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).TypeHandlerVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdatePropertiesInternal)Property).TypeHandlerVersion = value ?? null; }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__updateResource), __updateResource);
            await eventListener.AssertObjectIsValid(nameof(__updateResource), __updateResource);
        }

        /// <summary>Creates an new <see cref="VirtualMachineExtensionUpdate" /> instance.</summary>
        public VirtualMachineExtensionUpdate()
        {

        }
    }
    /// Describes a Virtual Machine Extension.
    public partial interface IVirtualMachineExtensionUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUpdateResource
    {
        /// <summary>
        /// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed,
        /// however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.",
        SerializedName = @"autoUpgradeMinorVersion",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoUpgradeMinorVersion { get; set; }
        /// <summary>
        /// Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension
        /// available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.",
        SerializedName = @"enableAutomaticUpgrade",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableAutomaticUpgrade { get; set; }
        /// <summary>
        /// How the extension handler should be forced to update even if the extension configuration has not changed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"How the extension handler should be forced to update even if the extension configuration has not changed.",
        SerializedName = @"forceUpdateTag",
        PossibleTypes = new [] { typeof(string) })]
        string ForceUpdateTag { get; set; }
        /// <summary>
        /// The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.",
        SerializedName = @"protectedSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.IAny ProtectedSetting { get; set; }
        /// <summary>
        /// The extensions protected settings that are passed by reference, and consumed from key vault
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The extensions protected settings that are passed by reference, and consumed from key vault",
        SerializedName = @"protectedSettingsFromKeyVault",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.IAny ProtectedSettingsFromKeyVault { get; set; }
        /// <summary>The name of the extension handler publisher.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the extension handler publisher.",
        SerializedName = @"publisher",
        PossibleTypes = new [] { typeof(string) })]
        string Publisher { get; set; }
        /// <summary>Json formatted public settings for the extension.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Json formatted public settings for the extension.",
        SerializedName = @"settings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.IAny Setting { get; set; }
        /// <summary>
        /// Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting
        /// to the VM will not be suppressed regardless of this value). The default is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false.",
        SerializedName = @"suppressFailures",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SuppressFailure { get; set; }
        /// <summary>Specifies the type of the extension; an example is "CustomScriptExtension".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the type of the extension; an example is ""CustomScriptExtension"".",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }
        /// <summary>Specifies the version of the script handler.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the version of the script handler.",
        SerializedName = @"typeHandlerVersion",
        PossibleTypes = new [] { typeof(string) })]
        string TypeHandlerVersion { get; set; }

    }
    /// Describes a Virtual Machine Extension.
    internal partial interface IVirtualMachineExtensionUpdateInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IUpdateResourceInternal
    {
        /// <summary>
        /// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed,
        /// however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        /// </summary>
        bool? AutoUpgradeMinorVersion { get; set; }
        /// <summary>
        /// Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension
        /// available.
        /// </summary>
        bool? EnableAutomaticUpgrade { get; set; }
        /// <summary>
        /// How the extension handler should be forced to update even if the extension configuration has not changed.
        /// </summary>
        string ForceUpdateTag { get; set; }
        /// <summary>Describes the properties of a Virtual Machine Extension.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionUpdateProperties Property { get; set; }
        /// <summary>
        /// The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.IAny ProtectedSetting { get; set; }
        /// <summary>
        /// The extensions protected settings that are passed by reference, and consumed from key vault
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.IAny ProtectedSettingsFromKeyVault { get; set; }
        /// <summary>The name of the extension handler publisher.</summary>
        string Publisher { get; set; }
        /// <summary>Json formatted public settings for the extension.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.IAny Setting { get; set; }
        /// <summary>
        /// Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting
        /// to the VM will not be suppressed regardless of this value). The default is false.
        /// </summary>
        bool? SuppressFailure { get; set; }
        /// <summary>Specifies the type of the extension; an example is "CustomScriptExtension".</summary>
        string Type { get; set; }
        /// <summary>Specifies the version of the script handler.</summary>
        string TypeHandlerVersion { get; set; }

    }
}