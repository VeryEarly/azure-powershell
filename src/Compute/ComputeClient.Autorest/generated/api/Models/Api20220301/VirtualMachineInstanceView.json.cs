// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Extensions;

    /// <summary>The instance view of a virtual machine.</summary>
    public partial class VirtualMachineInstanceView
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineInstanceView.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineInstanceView.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineInstanceView FromJson(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject json ? new VirtualMachineInstanceView(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="VirtualMachineInstanceView" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="VirtualMachineInstanceView" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._vMAgent ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) this._vMAgent.ToJson(null,serializationMode) : null, "vmAgent" ,container.Add );
            AddIf( null != this._maintenanceRedeployStatus ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) this._maintenanceRedeployStatus.ToJson(null,serializationMode) : null, "maintenanceRedeployStatus" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._vMHealth ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) this._vMHealth.ToJson(null,serializationMode) : null, "vmHealth" ,container.Add );
            }
            AddIf( null != this._bootDiagnostic ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) this._bootDiagnostic.ToJson(null,serializationMode) : null, "bootDiagnostics" ,container.Add );
            AddIf( null != this._platformUpdateDomain ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNumber((int)this._platformUpdateDomain) : null, "platformUpdateDomain" ,container.Add );
            AddIf( null != this._platformFaultDomain ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNumber((int)this._platformFaultDomain) : null, "platformFaultDomain" ,container.Add );
            AddIf( null != (((object)this._computerName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString(this._computerName.ToString()) : null, "computerName" ,container.Add );
            AddIf( null != (((object)this._oSName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString(this._oSName.ToString()) : null, "osName" ,container.Add );
            AddIf( null != (((object)this._oSVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString(this._oSVersion.ToString()) : null, "osVersion" ,container.Add );
            AddIf( null != (((object)this._hyperVGeneration)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString(this._hyperVGeneration.ToString()) : null, "hyperVGeneration" ,container.Add );
            AddIf( null != (((object)this._rdpThumbPrint)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString(this._rdpThumbPrint.ToString()) : null, "rdpThumbPrint" ,container.Add );
            if (null != this._disk)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.XNodeArray();
                foreach( var __x in this._disk )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("disks",__w);
            }
            if (null != this._extension)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.XNodeArray();
                foreach( var __s in this._extension )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("extensions",__r);
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._assignedHost)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString(this._assignedHost.ToString()) : null, "assignedHost" ,container.Add );
            }
            if (null != this._statuses)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.XNodeArray();
                foreach( var __n in this._statuses )
                {
                    AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                }
                container.Add("statuses",__m);
            }
            AddIf( null != this._patchStatus ? (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode) this._patchStatus.ToJson(null,serializationMode) : null, "patchStatus" ,container.Add );
            AfterToJson(ref container);
            return container;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject into a new instance of <see cref="VirtualMachineInstanceView" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal VirtualMachineInstanceView(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_vMAgent = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject>("vmAgent"), out var __jsonVMAgent) ? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.VirtualMachineAgentInstanceView.FromJson(__jsonVMAgent) : VMAgent;}
            {_maintenanceRedeployStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject>("maintenanceRedeployStatus"), out var __jsonMaintenanceRedeployStatus) ? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.MaintenanceRedeployStatus.FromJson(__jsonMaintenanceRedeployStatus) : MaintenanceRedeployStatus;}
            {_vMHealth = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject>("vmHealth"), out var __jsonVMHealth) ? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.VirtualMachineHealthStatus.FromJson(__jsonVMHealth) : VMHealth;}
            {_bootDiagnostic = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject>("bootDiagnostics"), out var __jsonBootDiagnostics) ? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.BootDiagnosticsInstanceView.FromJson(__jsonBootDiagnostics) : BootDiagnostic;}
            {_platformUpdateDomain = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNumber>("platformUpdateDomain"), out var __jsonPlatformUpdateDomain) ? (int?)__jsonPlatformUpdateDomain : PlatformUpdateDomain;}
            {_platformFaultDomain = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNumber>("platformFaultDomain"), out var __jsonPlatformFaultDomain) ? (int?)__jsonPlatformFaultDomain : PlatformFaultDomain;}
            {_computerName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString>("computerName"), out var __jsonComputerName) ? (string)__jsonComputerName : (string)ComputerName;}
            {_oSName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString>("osName"), out var __jsonOSName) ? (string)__jsonOSName : (string)OSName;}
            {_oSVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString>("osVersion"), out var __jsonOSVersion) ? (string)__jsonOSVersion : (string)OSVersion;}
            {_hyperVGeneration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString>("hyperVGeneration"), out var __jsonHyperVGeneration) ? (string)__jsonHyperVGeneration : (string)HyperVGeneration;}
            {_rdpThumbPrint = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString>("rdpThumbPrint"), out var __jsonRdpThumbPrint) ? (string)__jsonRdpThumbPrint : (string)RdpThumbPrint;}
            {_disk = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonArray>("disks"), out var __jsonDisks) ? If( __jsonDisks as Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IDiskInstanceView[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IDiskInstanceView) (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.DiskInstanceView.FromJson(__u) )) ))() : null : Disk;}
            {_extension = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonArray>("extensions"), out var __jsonExtensions) ? If( __jsonExtensions as Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineExtensionInstanceView[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachineExtensionInstanceView) (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.VirtualMachineExtensionInstanceView.FromJson(__p) )) ))() : null : Extension;}
            {_assignedHost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonString>("assignedHost"), out var __jsonAssignedHost) ? (string)__jsonAssignedHost : (string)AssignedHost;}
            {_statuses = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonArray>("statuses"), out var __jsonStatuses) ? If( __jsonStatuses as Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IInstanceViewStatus[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IInstanceViewStatus) (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.InstanceViewStatus.FromJson(__k) )) ))() : null : Statuses;}
            {_patchStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonObject>("patchStatus"), out var __jsonPatchStatus) ? Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.VirtualMachinePatchStatus.FromJson(__jsonPatchStatus) : PatchStatus;}
            AfterFromJson(json);
        }
    }
}