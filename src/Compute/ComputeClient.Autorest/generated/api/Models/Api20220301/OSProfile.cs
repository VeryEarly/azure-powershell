// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Extensions;

    /// <summary>
    /// Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned.
    /// </summary>
    public partial class OSProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSProfile,
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSProfileInternal
    {

        /// <summary>Backing field for <see cref="AdminPassword" /> property.</summary>
        private string _adminPassword;

        /// <summary>
        /// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length
        /// (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters
        /// <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has
        /// upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123",
        /// "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br>
        /// For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp)
        /// <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess
        /// Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public string AdminPassword { get => this._adminPassword; set => this._adminPassword = value; }

        /// <summary>Backing field for <see cref="AdminUsername" /> property.</summary>
        private string _adminUsername;

        /// <summary>
        /// Specifies the name of the administrator account. <br><br> This property cannot be updated after the VM is created. <br><br>
        /// **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1",
        /// "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console",
        /// "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4",
        /// "user5". <br><br> **Minimum-length (Linux):** 1 character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length
        /// (Windows):** 20 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public string AdminUsername { get => this._adminUsername; set => this._adminUsername = value; }

        /// <summary>Backing field for <see cref="AllowExtensionOperation" /> property.</summary>
        private bool? _allowExtensionOperation;

        /// <summary>
        /// Specifies whether extension operations should be allowed on the virtual machine. <br><br>This may only be set to False
        /// when no extensions are present on the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public bool? AllowExtensionOperation { get => this._allowExtensionOperation; set => this._allowExtensionOperation = value; }

        /// <summary>Backing field for <see cref="ComputerName" /> property.</summary>
        private string _computerName;

        /// <summary>
        /// Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br>
        /// **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions
        /// and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public string ComputerName { get => this._computerName; set => this._computerName = value; }

        /// <summary>Backing field for <see cref="CustomData" /> property.</summary>
        private string _customData;

        /// <summary>
        /// Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved
        /// as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> **Note: Do not pass
        /// any secrets or passwords in customData property** <br><br> This property cannot be updated after the VM is created. <br><br>
        /// customData is passed to the VM to be saved as a file, for more information see [Custom Data on Azure VMs](https://azure.microsoft.com/blog/custom-data-and-cloud-init-on-windows-azure/)
        /// <br><br> For using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public string CustomData { get => this._customData; set => this._customData = value; }

        /// <summary>Backing field for <see cref="LinuxConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfiguration _linuxConfiguration;

        /// <summary>
        /// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions,
        /// see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfiguration LinuxConfiguration { get => (this._linuxConfiguration = this._linuxConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.LinuxConfiguration()); set => this._linuxConfiguration = value; }

        /// <summary>Specifies whether password authentication should be disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public bool? LinuxConfigurationDisablePasswordAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfigurationInternal)LinuxConfiguration).DisablePasswordAuthentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfigurationInternal)LinuxConfiguration).DisablePasswordAuthentication = value ?? default(bool); }

        /// <summary>
        /// Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br
        /// /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform**
        /// - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.LinuxPatchAssessmentMode? LinuxConfigurationPatchSettingsAssessmentMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfigurationInternal)LinuxConfiguration).PatchSettingAssessmentMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfigurationInternal)LinuxConfiguration).PatchSettingAssessmentMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.LinuxPatchAssessmentMode)""); }

        /// <summary>
        /// Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.LinuxVMGuestPatchAutomaticByPlatformRebootSetting? LinuxConfigurationPatchSettingsAutomaticByPlatformSettingsRebootSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfigurationInternal)LinuxConfiguration).AutomaticByPlatformSettingRebootSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfigurationInternal)LinuxConfiguration).AutomaticByPlatformSettingRebootSetting = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.LinuxVMGuestPatchAutomaticByPlatformRebootSetting)""); }

        /// <summary>
        /// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale
        /// set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's
        /// default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically
        /// updated by the platform. The property provisionVMAgent must be true
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.LinuxVMGuestPatchMode? LinuxConfigurationPatchSettingsPatchMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfigurationInternal)LinuxConfiguration).PatchSettingPatchMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfigurationInternal)LinuxConfiguration).PatchSettingPatchMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.LinuxVMGuestPatchMode)""); }

        /// <summary>
        /// Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not
        /// specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the
        /// VM so that extensions can be added to the VM later.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public bool? LinuxConfigurationProvisionVMAgent { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfigurationInternal)LinuxConfiguration).ProvisionVMAgent; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfigurationInternal)LinuxConfiguration).ProvisionVMAgent = value ?? default(bool); }

        /// <summary>Internal Acessors for LinuxConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfiguration Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSProfileInternal.LinuxConfiguration { get => (this._linuxConfiguration = this._linuxConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.LinuxConfiguration()); set { {_linuxConfiguration = value;} } }

        /// <summary>Internal Acessors for LinuxConfigurationPatchSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxPatchSettings Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSProfileInternal.LinuxConfigurationPatchSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfigurationInternal)LinuxConfiguration).PatchSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfigurationInternal)LinuxConfiguration).PatchSetting = value; }

        /// <summary>Internal Acessors for LinuxConfigurationPatchSettingsAutomaticByPlatformSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxVMGuestPatchAutomaticByPlatformSettings Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSProfileInternal.LinuxConfigurationPatchSettingsAutomaticByPlatformSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfigurationInternal)LinuxConfiguration).PatchSettingAutomaticByPlatformSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfigurationInternal)LinuxConfiguration).PatchSettingAutomaticByPlatformSetting = value; }

        /// <summary>Internal Acessors for LinuxConfigurationSsh</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISshConfiguration Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSProfileInternal.LinuxConfigurationSsh { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfigurationInternal)LinuxConfiguration).Ssh; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfigurationInternal)LinuxConfiguration).Ssh = value; }

        /// <summary>Internal Acessors for WindowConfigurationPatchSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IPatchSettings Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSProfileInternal.WindowConfigurationPatchSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).PatchSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).PatchSetting = value; }

        /// <summary>Internal Acessors for WindowConfigurationWinRm</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWinRmConfiguration Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSProfileInternal.WindowConfigurationWinRm { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).WinRm; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).WinRm = value; }

        /// <summary>Internal Acessors for WindowsConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfiguration Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSProfileInternal.WindowsConfiguration { get => (this._windowsConfiguration = this._windowsConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.WindowsConfiguration()); set { {_windowsConfiguration = value;} } }

        /// <summary>
        /// Internal Acessors for WindowsConfigurationPatchSettingsAutomaticByPlatformSetting
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsVMGuestPatchAutomaticByPlatformSettings Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSProfileInternal.WindowsConfigurationPatchSettingsAutomaticByPlatformSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).PatchSettingAutomaticByPlatformSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).PatchSettingAutomaticByPlatformSetting = value; }

        /// <summary>
        /// Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the 'provisionVMAgent' must
        /// be set to true and 'patchMode' must be set to 'AutomaticByPlatform'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public bool? PatchSettingEnableHotpatching { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).PatchSettingEnableHotpatching; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).PatchSettingEnableHotpatching = value ?? default(bool); }

        /// <summary>Backing field for <see cref="RequireGuestProvisionSignal" /> property.</summary>
        private bool? _requireGuestProvisionSignal;

        /// <summary>Optional property which must either be set to True or omitted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public bool? RequireGuestProvisionSignal { get => this._requireGuestProvisionSignal; set => this._requireGuestProvisionSignal = value; }

        /// <summary>Backing field for <see cref="Secret" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVaultSecretGroup[] _secret;

        /// <summary>
        /// Specifies set of certificates that should be installed onto the virtual machine. To install certificates on a virtual
        /// machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
        /// or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVaultSecretGroup[] Secret { get => this._secret; set => this._secret = value; }

        /// <summary>The list of SSH public keys used to authenticate with linux based VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISshPublicKey[] SshPublicKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfigurationInternal)LinuxConfiguration).SshPublicKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfigurationInternal)LinuxConfiguration).SshPublicKey = value ?? null /* arrayOf */; }

        /// <summary>The list of Windows Remote Management listeners</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWinRmListener[] WinRmListener { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).WinRmListener; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).WinRmListener = value ?? null /* arrayOf */; }

        /// <summary>
        /// Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is
        /// used by Windows Setup.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IAdditionalUnattendContent[] WindowConfigurationAdditionalUnattendContent { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).AdditionalUnattendContent; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).AdditionalUnattendContent = value ?? null /* arrayOf */; }

        /// <summary>
        /// Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. <br><br> For virtual
        /// machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public bool? WindowConfigurationEnableAutomaticUpdate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).EnableAutomaticUpdate; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).EnableAutomaticUpdate = value ?? default(bool); }

        /// <summary>
        /// Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not
        /// specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the
        /// VM so that extensions can be added to the VM later.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public bool? WindowConfigurationProvisionVMAgent { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).ProvisionVMAgent; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).ProvisionVMAgent = value ?? default(bool); }

        /// <summary>
        /// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time". <br><br> Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id)
        /// value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public string WindowConfigurationTimeZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).TimeZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).TimeZone = value ?? null; }

        /// <summary>Backing field for <see cref="WindowsConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfiguration _windowsConfiguration;

        /// <summary>Specifies Windows operating system settings on the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfiguration WindowsConfiguration { get => (this._windowsConfiguration = this._windowsConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.WindowsConfiguration()); set => this._windowsConfiguration = value; }

        /// <summary>
        /// Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br
        /// /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform**
        /// - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.WindowsPatchAssessmentMode? WindowsConfigurationPatchSettingsAssessmentMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).PatchSettingAssessmentMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).PatchSettingAssessmentMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.WindowsPatchAssessmentMode)""); }

        /// <summary>
        /// Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.WindowsVMGuestPatchAutomaticByPlatformRebootSetting? WindowsConfigurationPatchSettingsAutomaticByPlatformSettingsRebootSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).AutomaticByPlatformSettingRebootSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).AutomaticByPlatformSettingRebootSetting = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.WindowsVMGuestPatchAutomaticByPlatformRebootSetting)""); }

        /// <summary>
        /// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale
        /// set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You control the application
        /// of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates
        /// are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The
        /// virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must
        /// be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties
        /// provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Origin(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.WindowsVMGuestPatchMode? WindowsConfigurationPatchSettingsPatchMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).PatchSettingPatchMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfigurationInternal)WindowsConfiguration).PatchSettingPatchMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.WindowsVMGuestPatchMode)""); }

        /// <summary>Creates an new <see cref="OSProfile" /> instance.</summary>
        public OSProfile()
        {

        }
    }
    /// Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned.
    public partial interface IOSProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length
        /// (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters
        /// <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has
        /// upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123",
        /// "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br>
        /// For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp)
        /// <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess
        /// Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** ""abc@123"", ""P@$$w0rd"", ""P@ssw0rd"", ""P@ssword123"", ""Pa$$word"", ""pass@word1"", ""Password!"", ""Password1"", ""Password22"", ""iloveyou!"" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)",
        SerializedName = @"adminPassword",
        PossibleTypes = new [] { typeof(string) })]
        string AdminPassword { get; set; }
        /// <summary>
        /// Specifies the name of the administrator account. <br><br> This property cannot be updated after the VM is created. <br><br>
        /// **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1",
        /// "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console",
        /// "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4",
        /// "user5". <br><br> **Minimum-length (Linux):** 1 character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length
        /// (Windows):** 20 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the name of the administrator account. <br><br> This property cannot be updated after the VM is created. <br><br> **Windows-only restriction:** Cannot end in ""."" <br><br> **Disallowed values:** ""administrator"", ""admin"", ""user"", ""user1"", ""test"", ""user2"", ""test1"", ""user3"", ""admin1"", ""1"", ""123"", ""a"", ""actuser"", ""adm"", ""admin2"", ""aspnet"", ""backup"", ""console"", ""david"", ""guest"", ""john"", ""owner"", ""root"", ""server"", ""sql"", ""support"", ""support_388945a0"", ""sys"", ""test2"", ""test3"", ""user4"", ""user5"". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters.",
        SerializedName = @"adminUsername",
        PossibleTypes = new [] { typeof(string) })]
        string AdminUsername { get; set; }
        /// <summary>
        /// Specifies whether extension operations should be allowed on the virtual machine. <br><br>This may only be set to False
        /// when no extensions are present on the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether extension operations should be allowed on the virtual machine. <br><br>This may only be set to False when no extensions are present on the virtual machine.",
        SerializedName = @"allowExtensionOperations",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AllowExtensionOperation { get; set; }
        /// <summary>
        /// Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br>
        /// **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions
        /// and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules).",
        SerializedName = @"computerName",
        PossibleTypes = new [] { typeof(string) })]
        string ComputerName { get; set; }
        /// <summary>
        /// Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved
        /// as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> **Note: Do not pass
        /// any secrets or passwords in customData property** <br><br> This property cannot be updated after the VM is created. <br><br>
        /// customData is passed to the VM to be saved as a file, for more information see [Custom Data on Azure VMs](https://azure.microsoft.com/blog/custom-data-and-cloud-init-on-windows-azure/)
        /// <br><br> For using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> **Note: Do not pass any secrets or passwords in customData property** <br><br> This property cannot be updated after the VM is created. <br><br> customData is passed to the VM to be saved as a file, for more information see [Custom Data on Azure VMs](https://azure.microsoft.com/blog/custom-data-and-cloud-init-on-windows-azure/) <br><br> For using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init)",
        SerializedName = @"customData",
        PossibleTypes = new [] { typeof(string) })]
        string CustomData { get; set; }
        /// <summary>Specifies whether password authentication should be disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether password authentication should be disabled.",
        SerializedName = @"disablePasswordAuthentication",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxConfigurationDisablePasswordAuthentication { get; set; }
        /// <summary>
        /// Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br
        /// /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform**
        /// - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.",
        SerializedName = @"assessmentMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.LinuxPatchAssessmentMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.LinuxPatchAssessmentMode? LinuxConfigurationPatchSettingsAssessmentMode { get; set; }
        /// <summary>
        /// Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the reboot setting for all AutomaticByPlatform patch installation operations.",
        SerializedName = @"rebootSetting",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.LinuxVMGuestPatchAutomaticByPlatformRebootSetting) })]
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.LinuxVMGuestPatchAutomaticByPlatformRebootSetting? LinuxConfigurationPatchSettingsAutomaticByPlatformSettingsRebootSetting { get; set; }
        /// <summary>
        /// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale
        /// set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's
        /// default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically
        /// updated by the platform. The property provisionVMAgent must be true
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true",
        SerializedName = @"patchMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.LinuxVMGuestPatchMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.LinuxVMGuestPatchMode? LinuxConfigurationPatchSettingsPatchMode { get; set; }
        /// <summary>
        /// Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not
        /// specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the
        /// VM so that extensions can be added to the VM later.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.",
        SerializedName = @"provisionVMAgent",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxConfigurationProvisionVMAgent { get; set; }
        /// <summary>
        /// Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the 'provisionVMAgent' must
        /// be set to true and 'patchMode' must be set to 'AutomaticByPlatform'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode' must be set to 'AutomaticByPlatform'.",
        SerializedName = @"enableHotpatching",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PatchSettingEnableHotpatching { get; set; }
        /// <summary>Optional property which must either be set to True or omitted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional property which must either be set to True or omitted.",
        SerializedName = @"requireGuestProvisionSignal",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RequireGuestProvisionSignal { get; set; }
        /// <summary>
        /// Specifies set of certificates that should be installed onto the virtual machine. To install certificates on a virtual
        /// machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
        /// or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies set of certificates that should be installed onto the virtual machine. To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).",
        SerializedName = @"secrets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVaultSecretGroup) })]
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVaultSecretGroup[] Secret { get; set; }
        /// <summary>The list of SSH public keys used to authenticate with linux based VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of SSH public keys used to authenticate with linux based VMs.",
        SerializedName = @"publicKeys",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISshPublicKey) })]
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISshPublicKey[] SshPublicKey { get; set; }
        /// <summary>The list of Windows Remote Management listeners</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Windows Remote Management listeners",
        SerializedName = @"listeners",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWinRmListener) })]
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWinRmListener[] WinRmListener { get; set; }
        /// <summary>
        /// Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is
        /// used by Windows Setup.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.",
        SerializedName = @"additionalUnattendContent",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IAdditionalUnattendContent) })]
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IAdditionalUnattendContent[] WindowConfigurationAdditionalUnattendContent { get; set; }
        /// <summary>
        /// Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. <br><br> For virtual
        /// machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. <br><br> For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.",
        SerializedName = @"enableAutomaticUpdates",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowConfigurationEnableAutomaticUpdate { get; set; }
        /// <summary>
        /// Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not
        /// specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the
        /// VM so that extensions can be added to the VM later.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.",
        SerializedName = @"provisionVMAgent",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowConfigurationProvisionVMAgent { get; set; }
        /// <summary>
        /// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time". <br><br> Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id)
        /// value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the time zone of the virtual machine. e.g. ""Pacific Standard Time"". <br><br> Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).",
        SerializedName = @"timeZone",
        PossibleTypes = new [] { typeof(string) })]
        string WindowConfigurationTimeZone { get; set; }
        /// <summary>
        /// Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br
        /// /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform**
        /// - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true. ",
        SerializedName = @"assessmentMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.WindowsPatchAssessmentMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.WindowsPatchAssessmentMode? WindowsConfigurationPatchSettingsAssessmentMode { get; set; }
        /// <summary>
        /// Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the reboot setting for all AutomaticByPlatform patch installation operations.",
        SerializedName = @"rebootSetting",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.WindowsVMGuestPatchAutomaticByPlatformRebootSetting) })]
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.WindowsVMGuestPatchAutomaticByPlatformRebootSetting? WindowsConfigurationPatchSettingsAutomaticByPlatformSettingsRebootSetting { get; set; }
        /// <summary>
        /// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale
        /// set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You control the application
        /// of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates
        /// are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The
        /// virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must
        /// be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties
        /// provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true ",
        SerializedName = @"patchMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.WindowsVMGuestPatchMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.WindowsVMGuestPatchMode? WindowsConfigurationPatchSettingsPatchMode { get; set; }

    }
    /// Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned.
    internal partial interface IOSProfileInternal

    {
        /// <summary>
        /// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length
        /// (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters
        /// <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has
        /// upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123",
        /// "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br>
        /// For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp)
        /// <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess
        /// Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
        /// </summary>
        string AdminPassword { get; set; }
        /// <summary>
        /// Specifies the name of the administrator account. <br><br> This property cannot be updated after the VM is created. <br><br>
        /// **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1",
        /// "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console",
        /// "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4",
        /// "user5". <br><br> **Minimum-length (Linux):** 1 character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length
        /// (Windows):** 20 characters.
        /// </summary>
        string AdminUsername { get; set; }
        /// <summary>
        /// Specifies whether extension operations should be allowed on the virtual machine. <br><br>This may only be set to False
        /// when no extensions are present on the virtual machine.
        /// </summary>
        bool? AllowExtensionOperation { get; set; }
        /// <summary>
        /// Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br>
        /// **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions
        /// and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules).
        /// </summary>
        string ComputerName { get; set; }
        /// <summary>
        /// Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved
        /// as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> **Note: Do not pass
        /// any secrets or passwords in customData property** <br><br> This property cannot be updated after the VM is created. <br><br>
        /// customData is passed to the VM to be saved as a file, for more information see [Custom Data on Azure VMs](https://azure.microsoft.com/blog/custom-data-and-cloud-init-on-windows-azure/)
        /// <br><br> For using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init)
        /// </summary>
        string CustomData { get; set; }
        /// <summary>
        /// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions,
        /// see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxConfiguration LinuxConfiguration { get; set; }
        /// <summary>Specifies whether password authentication should be disabled.</summary>
        bool? LinuxConfigurationDisablePasswordAuthentication { get; set; }
        /// <summary>[Preview Feature] Specifies settings related to VM Guest Patching on Linux.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxPatchSettings LinuxConfigurationPatchSetting { get; set; }
        /// <summary>
        /// Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br
        /// /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform**
        /// - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.LinuxPatchAssessmentMode? LinuxConfigurationPatchSettingsAssessmentMode { get; set; }
        /// <summary>
        /// Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Linux.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ILinuxVMGuestPatchAutomaticByPlatformSettings LinuxConfigurationPatchSettingsAutomaticByPlatformSetting { get; set; }
        /// <summary>
        /// Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.LinuxVMGuestPatchAutomaticByPlatformRebootSetting? LinuxConfigurationPatchSettingsAutomaticByPlatformSettingsRebootSetting { get; set; }
        /// <summary>
        /// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale
        /// set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's
        /// default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically
        /// updated by the platform. The property provisionVMAgent must be true
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.LinuxVMGuestPatchMode? LinuxConfigurationPatchSettingsPatchMode { get; set; }
        /// <summary>
        /// Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not
        /// specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the
        /// VM so that extensions can be added to the VM later.
        /// </summary>
        bool? LinuxConfigurationProvisionVMAgent { get; set; }
        /// <summary>Specifies the ssh key configuration for a Linux OS.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISshConfiguration LinuxConfigurationSsh { get; set; }
        /// <summary>
        /// Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the 'provisionVMAgent' must
        /// be set to true and 'patchMode' must be set to 'AutomaticByPlatform'.
        /// </summary>
        bool? PatchSettingEnableHotpatching { get; set; }
        /// <summary>Optional property which must either be set to True or omitted.</summary>
        bool? RequireGuestProvisionSignal { get; set; }
        /// <summary>
        /// Specifies set of certificates that should be installed onto the virtual machine. To install certificates on a virtual
        /// machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
        /// or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVaultSecretGroup[] Secret { get; set; }
        /// <summary>The list of SSH public keys used to authenticate with linux based VMs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISshPublicKey[] SshPublicKey { get; set; }
        /// <summary>The list of Windows Remote Management listeners</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWinRmListener[] WinRmListener { get; set; }
        /// <summary>
        /// Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is
        /// used by Windows Setup.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IAdditionalUnattendContent[] WindowConfigurationAdditionalUnattendContent { get; set; }
        /// <summary>
        /// Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. <br><br> For virtual
        /// machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.
        /// </summary>
        bool? WindowConfigurationEnableAutomaticUpdate { get; set; }
        /// <summary>[Preview Feature] Specifies settings related to VM Guest Patching on Windows.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IPatchSettings WindowConfigurationPatchSetting { get; set; }
        /// <summary>
        /// Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not
        /// specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the
        /// VM so that extensions can be added to the VM later.
        /// </summary>
        bool? WindowConfigurationProvisionVMAgent { get; set; }
        /// <summary>
        /// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time". <br><br> Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id)
        /// value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).
        /// </summary>
        string WindowConfigurationTimeZone { get; set; }
        /// <summary>
        /// Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWinRmConfiguration WindowConfigurationWinRm { get; set; }
        /// <summary>Specifies Windows operating system settings on the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsConfiguration WindowsConfiguration { get; set; }
        /// <summary>
        /// Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br
        /// /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform**
        /// - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.WindowsPatchAssessmentMode? WindowsConfigurationPatchSettingsAssessmentMode { get; set; }
        /// <summary>
        /// Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Windows.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IWindowsVMGuestPatchAutomaticByPlatformSettings WindowsConfigurationPatchSettingsAutomaticByPlatformSetting { get; set; }
        /// <summary>
        /// Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.WindowsVMGuestPatchAutomaticByPlatformRebootSetting? WindowsConfigurationPatchSettingsAutomaticByPlatformSettingsRebootSetting { get; set; }
        /// <summary>
        /// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale
        /// set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You control the application
        /// of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates
        /// are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The
        /// virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must
        /// be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties
        /// provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.WindowsVMGuestPatchMode? WindowsConfigurationPatchSettingsPatchMode { get; set; }

    }
}