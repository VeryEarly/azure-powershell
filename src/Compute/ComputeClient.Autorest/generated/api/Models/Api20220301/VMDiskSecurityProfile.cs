// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>
    /// Specifies the security profile settings for the managed disk. <br><br> NOTE: It can only be set for Confidential VMs
    /// </summary>
    public partial class VMDiskSecurityProfile :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMDiskSecurityProfile,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMDiskSecurityProfileInternal
    {

        /// <summary>Backing field for <see cref="DiskEncryptionSet" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource _diskEncryptionSet;

        /// <summary>
        /// Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed
        /// Key encrypted ConfidentialVM OS Disk and VMGuest blob.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource DiskEncryptionSet { get => (this._diskEncryptionSet = this._diskEncryptionSet ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.SubResource()); set => this._diskEncryptionSet = value; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string DiskEncryptionSetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResourceInternal)DiskEncryptionSet).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResourceInternal)DiskEncryptionSet).Id = value ?? null; }

        /// <summary>Internal Acessors for DiskEncryptionSet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMDiskSecurityProfileInternal.DiskEncryptionSet { get => (this._diskEncryptionSet = this._diskEncryptionSet ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.SubResource()); set { {_diskEncryptionSet = value;} } }

        /// <summary>Backing field for <see cref="SecurityEncryptionType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes? _securityEncryptionType;

        /// <summary>
        /// Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed
        /// disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It
        /// can be set for only Confidential VMs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes? SecurityEncryptionType { get => this._securityEncryptionType; set => this._securityEncryptionType = value; }

        /// <summary>Creates an new <see cref="VMDiskSecurityProfile" /> instance.</summary>
        public VMDiskSecurityProfile()
        {

        }
    }
    /// Specifies the security profile settings for the managed disk. <br><br> NOTE: It can only be set for Confidential VMs
    public partial interface IVMDiskSecurityProfile :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable
    {
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string DiskEncryptionSetId { get; set; }
        /// <summary>
        /// Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed
        /// disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It
        /// can be set for only Confidential VMs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It can be set for only Confidential VMs.",
        SerializedName = @"securityEncryptionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes? SecurityEncryptionType { get; set; }

    }
    /// Specifies the security profile settings for the managed disk. <br><br> NOTE: It can only be set for Confidential VMs
    internal partial interface IVMDiskSecurityProfileInternal

    {
        /// <summary>
        /// Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed
        /// Key encrypted ConfidentialVM OS Disk and VMGuest blob.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource DiskEncryptionSet { get; set; }
        /// <summary>Resource Id</summary>
        string DiskEncryptionSetId { get; set; }
        /// <summary>
        /// Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed
        /// disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It
        /// can be set for only Confidential VMs.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes? SecurityEncryptionType { get; set; }

    }
}