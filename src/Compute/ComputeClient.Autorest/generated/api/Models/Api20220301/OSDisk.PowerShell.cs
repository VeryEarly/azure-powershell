// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301
{
    using Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.PowerShell;

    /// <summary>
    /// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about
    /// disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(OSDiskTypeConverter))]
    public partial class OSDisk
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.OSDisk"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDisk" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDisk DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new OSDisk(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.OSDisk"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDisk" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDisk DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new OSDisk(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="OSDisk" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="OSDisk" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDisk FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.OSDisk"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal OSDisk(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("EncryptionSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).EncryptionSetting = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IDiskEncryptionSettings) content.GetValueForProperty("EncryptionSetting",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).EncryptionSetting, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.DiskEncryptionSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Vhd"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).Vhd = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualHardDisk) content.GetValueForProperty("Vhd",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).Vhd, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.VirtualHardDiskTypeConverter.ConvertFrom);
            }
            if (content.Contains("Image"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).Image = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualHardDisk) content.GetValueForProperty("Image",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).Image, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.VirtualHardDiskTypeConverter.ConvertFrom);
            }
            if (content.Contains("DiffDiskSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiffDiskSetting = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IDiffDiskSettings) content.GetValueForProperty("DiffDiskSetting",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiffDiskSetting, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.DiffDiskSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDisk = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IManagedDiskParameters) content.GetValueForProperty("ManagedDisk",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDisk, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ManagedDiskParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).OSType = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.OperatingSystemTypes?) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).OSType, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.OperatingSystemTypes.CreateFrom);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Caching"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).Caching = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.CachingTypes?) content.GetValueForProperty("Caching",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).Caching, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.CachingTypes.CreateFrom);
            }
            if (content.Contains("WriteAcceleratorEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).WriteAcceleratorEnabled = (bool?) content.GetValueForProperty("WriteAcceleratorEnabled",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).WriteAcceleratorEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CreateOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).CreateOption = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.DiskCreateOptionTypes) content.GetValueForProperty("CreateOption",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).CreateOption, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.DiskCreateOptionTypes.CreateFrom);
            }
            if (content.Contains("DiskSizeGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiskSizeGb = (int?) content.GetValueForProperty("DiskSizeGb",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiskSizeGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DeleteOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DeleteOption = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.DiskDeleteOptionTypes?) content.GetValueForProperty("DeleteOption",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DeleteOption, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.DiskDeleteOptionTypes.CreateFrom);
            }
            if (content.Contains("EncryptionSettingDiskEncryptionKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).EncryptionSettingDiskEncryptionKey = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IKeyVaultSecretReference) content.GetValueForProperty("EncryptionSettingDiskEncryptionKey",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).EncryptionSettingDiskEncryptionKey, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.KeyVaultSecretReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("EncryptionSettingKeyEncryptionKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).EncryptionSettingKeyEncryptionKey = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IKeyVaultKeyReference) content.GetValueForProperty("EncryptionSettingKeyEncryptionKey",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).EncryptionSettingKeyEncryptionKey, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.KeyVaultKeyReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("EncryptionSettingEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).EncryptionSettingEnabled = (bool?) content.GetValueForProperty("EncryptionSettingEnabled",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).EncryptionSettingEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VhdUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).VhdUri = (string) content.GetValueForProperty("VhdUri",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).VhdUri, global::System.Convert.ToString);
            }
            if (content.Contains("ImageUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ImageUri = (string) content.GetValueForProperty("ImageUri",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ImageUri, global::System.Convert.ToString);
            }
            if (content.Contains("DiffDiskSettingOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiffDiskSettingOption = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.DiffDiskOptions?) content.GetValueForProperty("DiffDiskSettingOption",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiffDiskSettingOption, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.DiffDiskOptions.CreateFrom);
            }
            if (content.Contains("DiffDiskSettingPlacement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiffDiskSettingPlacement = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.DiffDiskPlacement?) content.GetValueForProperty("DiffDiskSettingPlacement",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiffDiskSettingPlacement, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.DiffDiskPlacement.CreateFrom);
            }
            if (content.Contains("ManagedDiskId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDiskId = (string) content.GetValueForProperty("ManagedDiskId",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDiskId, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedDiskEncryptionSet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDiskEncryptionSet = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResource) content.GetValueForProperty("ManagedDiskEncryptionSet",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDiskEncryptionSet, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.SubResourceTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedDiskSecurityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDiskSecurityProfile = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVMDiskSecurityProfile) content.GetValueForProperty("ManagedDiskSecurityProfile",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDiskSecurityProfile, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.VMDiskSecurityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedDiskStorageAccountType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDiskStorageAccountType = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.StorageAccountTypes?) content.GetValueForProperty("ManagedDiskStorageAccountType",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDiskStorageAccountType, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.StorageAccountTypes.CreateFrom);
            }
            if (content.Contains("DiskEncryptionKeySourceVault"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiskEncryptionKeySourceVault = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResource) content.GetValueForProperty("DiskEncryptionKeySourceVault",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiskEncryptionKeySourceVault, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.SubResourceTypeConverter.ConvertFrom);
            }
            if (content.Contains("DiskEncryptionKeySecretUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiskEncryptionKeySecretUrl = (string) content.GetValueForProperty("DiskEncryptionKeySecretUrl",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiskEncryptionKeySecretUrl, global::System.Convert.ToString);
            }
            if (content.Contains("KeyEncryptionKeySourceVault"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).KeyEncryptionKeySourceVault = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResource) content.GetValueForProperty("KeyEncryptionKeySourceVault",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).KeyEncryptionKeySourceVault, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.SubResourceTypeConverter.ConvertFrom);
            }
            if (content.Contains("KeyEncryptionKeyUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).KeyEncryptionKeyUrl = (string) content.GetValueForProperty("KeyEncryptionKeyUrl",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).KeyEncryptionKeyUrl, global::System.Convert.ToString);
            }
            if (content.Contains("SubResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).SubResourceId = (string) content.GetValueForProperty("SubResourceId",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).SubResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("SecurityProfileDiskEncryptionSet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).SecurityProfileDiskEncryptionSet = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResource) content.GetValueForProperty("SecurityProfileDiskEncryptionSet",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).SecurityProfileDiskEncryptionSet, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.SubResourceTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecurityProfileSecurityEncryptionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).SecurityProfileSecurityEncryptionType = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.SecurityEncryptionTypes?) content.GetValueForProperty("SecurityProfileSecurityEncryptionType",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).SecurityProfileSecurityEncryptionType, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.SecurityEncryptionTypes.CreateFrom);
            }
            if (content.Contains("DiskEncryptionKeySourceVaultId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiskEncryptionKeySourceVaultId = (string) content.GetValueForProperty("DiskEncryptionKeySourceVaultId",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiskEncryptionKeySourceVaultId, global::System.Convert.ToString);
            }
            if (content.Contains("KeyEncryptionKeySourceVaultId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).KeyEncryptionKeySourceVaultId = (string) content.GetValueForProperty("KeyEncryptionKeySourceVaultId",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).KeyEncryptionKeySourceVaultId, global::System.Convert.ToString);
            }
            if (content.Contains("SecurityProfileDiskEncryptionSetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).SecurityProfileDiskEncryptionSetId = (string) content.GetValueForProperty("SecurityProfileDiskEncryptionSetId",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).SecurityProfileDiskEncryptionSetId, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.OSDisk"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal OSDisk(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("EncryptionSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).EncryptionSetting = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IDiskEncryptionSettings) content.GetValueForProperty("EncryptionSetting",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).EncryptionSetting, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.DiskEncryptionSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Vhd"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).Vhd = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualHardDisk) content.GetValueForProperty("Vhd",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).Vhd, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.VirtualHardDiskTypeConverter.ConvertFrom);
            }
            if (content.Contains("Image"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).Image = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualHardDisk) content.GetValueForProperty("Image",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).Image, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.VirtualHardDiskTypeConverter.ConvertFrom);
            }
            if (content.Contains("DiffDiskSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiffDiskSetting = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IDiffDiskSettings) content.GetValueForProperty("DiffDiskSetting",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiffDiskSetting, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.DiffDiskSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDisk = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IManagedDiskParameters) content.GetValueForProperty("ManagedDisk",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDisk, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ManagedDiskParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).OSType = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.OperatingSystemTypes?) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).OSType, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.OperatingSystemTypes.CreateFrom);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Caching"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).Caching = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.CachingTypes?) content.GetValueForProperty("Caching",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).Caching, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.CachingTypes.CreateFrom);
            }
            if (content.Contains("WriteAcceleratorEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).WriteAcceleratorEnabled = (bool?) content.GetValueForProperty("WriteAcceleratorEnabled",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).WriteAcceleratorEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CreateOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).CreateOption = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.DiskCreateOptionTypes) content.GetValueForProperty("CreateOption",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).CreateOption, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.DiskCreateOptionTypes.CreateFrom);
            }
            if (content.Contains("DiskSizeGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiskSizeGb = (int?) content.GetValueForProperty("DiskSizeGb",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiskSizeGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DeleteOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DeleteOption = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.DiskDeleteOptionTypes?) content.GetValueForProperty("DeleteOption",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DeleteOption, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.DiskDeleteOptionTypes.CreateFrom);
            }
            if (content.Contains("EncryptionSettingDiskEncryptionKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).EncryptionSettingDiskEncryptionKey = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IKeyVaultSecretReference) content.GetValueForProperty("EncryptionSettingDiskEncryptionKey",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).EncryptionSettingDiskEncryptionKey, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.KeyVaultSecretReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("EncryptionSettingKeyEncryptionKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).EncryptionSettingKeyEncryptionKey = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IKeyVaultKeyReference) content.GetValueForProperty("EncryptionSettingKeyEncryptionKey",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).EncryptionSettingKeyEncryptionKey, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.KeyVaultKeyReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("EncryptionSettingEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).EncryptionSettingEnabled = (bool?) content.GetValueForProperty("EncryptionSettingEnabled",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).EncryptionSettingEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VhdUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).VhdUri = (string) content.GetValueForProperty("VhdUri",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).VhdUri, global::System.Convert.ToString);
            }
            if (content.Contains("ImageUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ImageUri = (string) content.GetValueForProperty("ImageUri",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ImageUri, global::System.Convert.ToString);
            }
            if (content.Contains("DiffDiskSettingOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiffDiskSettingOption = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.DiffDiskOptions?) content.GetValueForProperty("DiffDiskSettingOption",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiffDiskSettingOption, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.DiffDiskOptions.CreateFrom);
            }
            if (content.Contains("DiffDiskSettingPlacement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiffDiskSettingPlacement = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.DiffDiskPlacement?) content.GetValueForProperty("DiffDiskSettingPlacement",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiffDiskSettingPlacement, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.DiffDiskPlacement.CreateFrom);
            }
            if (content.Contains("ManagedDiskId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDiskId = (string) content.GetValueForProperty("ManagedDiskId",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDiskId, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedDiskEncryptionSet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDiskEncryptionSet = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResource) content.GetValueForProperty("ManagedDiskEncryptionSet",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDiskEncryptionSet, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.SubResourceTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedDiskSecurityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDiskSecurityProfile = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVMDiskSecurityProfile) content.GetValueForProperty("ManagedDiskSecurityProfile",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDiskSecurityProfile, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.VMDiskSecurityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedDiskStorageAccountType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDiskStorageAccountType = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.StorageAccountTypes?) content.GetValueForProperty("ManagedDiskStorageAccountType",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).ManagedDiskStorageAccountType, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.StorageAccountTypes.CreateFrom);
            }
            if (content.Contains("DiskEncryptionKeySourceVault"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiskEncryptionKeySourceVault = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResource) content.GetValueForProperty("DiskEncryptionKeySourceVault",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiskEncryptionKeySourceVault, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.SubResourceTypeConverter.ConvertFrom);
            }
            if (content.Contains("DiskEncryptionKeySecretUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiskEncryptionKeySecretUrl = (string) content.GetValueForProperty("DiskEncryptionKeySecretUrl",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiskEncryptionKeySecretUrl, global::System.Convert.ToString);
            }
            if (content.Contains("KeyEncryptionKeySourceVault"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).KeyEncryptionKeySourceVault = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResource) content.GetValueForProperty("KeyEncryptionKeySourceVault",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).KeyEncryptionKeySourceVault, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.SubResourceTypeConverter.ConvertFrom);
            }
            if (content.Contains("KeyEncryptionKeyUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).KeyEncryptionKeyUrl = (string) content.GetValueForProperty("KeyEncryptionKeyUrl",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).KeyEncryptionKeyUrl, global::System.Convert.ToString);
            }
            if (content.Contains("SubResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).SubResourceId = (string) content.GetValueForProperty("SubResourceId",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).SubResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("SecurityProfileDiskEncryptionSet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).SecurityProfileDiskEncryptionSet = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.ISubResource) content.GetValueForProperty("SecurityProfileDiskEncryptionSet",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).SecurityProfileDiskEncryptionSet, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.SubResourceTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecurityProfileSecurityEncryptionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).SecurityProfileSecurityEncryptionType = (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.SecurityEncryptionTypes?) content.GetValueForProperty("SecurityProfileSecurityEncryptionType",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).SecurityProfileSecurityEncryptionType, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.SecurityEncryptionTypes.CreateFrom);
            }
            if (content.Contains("DiskEncryptionKeySourceVaultId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiskEncryptionKeySourceVaultId = (string) content.GetValueForProperty("DiskEncryptionKeySourceVaultId",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).DiskEncryptionKeySourceVaultId, global::System.Convert.ToString);
            }
            if (content.Contains("KeyEncryptionKeySourceVaultId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).KeyEncryptionKeySourceVaultId = (string) content.GetValueForProperty("KeyEncryptionKeySourceVaultId",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).KeyEncryptionKeySourceVaultId, global::System.Convert.ToString);
            }
            if (content.Contains("SecurityProfileDiskEncryptionSetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).SecurityProfileDiskEncryptionSetId = (string) content.GetValueForProperty("SecurityProfileDiskEncryptionSetId",((Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IOSDiskInternal)this).SecurityProfileDiskEncryptionSetId, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about
    /// disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
    [System.ComponentModel.TypeConverter(typeof(OSDiskTypeConverter))]
    public partial interface IOSDisk

    {

    }
}