// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using static Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.Extensions;
using global::System.Linq;

namespace Microsoft.Azure.PowerShell.Cmdlets.ComputeClient
{
    public class VirtualMachinesOperations
    {
        private Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.ProxyClient _client;

        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.ProxyClient Client => _client;

        internal VirtualMachinesOperations (Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.ProxyClient client) {
            _client = client;
        }

        public async global::System.Threading.Tasks.Task<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachine> GetAsync(string resourceGroupName, string virtualMachineName, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.InstanceViewTypes? expand)
        {
            using(NoSynchronizationContext)
            using(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Operation<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachine> op = new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Operation<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachine>())
            {
                Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.IEventListener eventListener = Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.ProxyEventListener.CreateProxyEventListener();
                Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.ISendAsync sender = Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Module.Instance.CreateProxyPipeline();
                await Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Module.Instance.ClientAPI.VirtualMachinesGet(resourceGroupName, virtualMachineName, null, Client.SubscriptionId, op.onOk, op.onDefault, eventListener, sender);
                return op.Result;
            }
        }

        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachine Get(string resourceGroupName, string virtualMachineName, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Support.InstanceViewTypes? expand)
        {
            return GetAsync(resourceGroupName, virtualMachineName, expand).GetAwaiter().GetResult();
        }

        public async global::System.Threading.Tasks.Task<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachine> CreateOrUpdateAsync(string resourceGroupName, string virtualMachineName, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachine parameters)
        {
            using(NoSynchronizationContext)
            using(Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Operation<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachine> op = new Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Operation<Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachine>())
            {
                Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.IEventListener eventListener = Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.ProxyEventListener.CreateProxyEventListener();
                Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Runtime.ISendAsync sender = Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Module.Instance.CreateProxyPipeline();
                await Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Module.Instance.ClientAPI.VirtualMachinesCreateOrUpdate(resourceGroupName, virtualMachineName, Client.SubscriptionId, parameters, op.onOk, op.onDefault, eventListener, sender);
                return op.Result;
            }
        }

        public Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachine CreateOrUpdate(string resourceGroupName, string virtualMachineName, Microsoft.Azure.PowerShell.Cmdlets.ComputeClient.Models.Api20220301.IVirtualMachine parameters)
        {
            return CreateOrUpdateAsync(resourceGroupName, virtualMachineName, parameters).GetAwaiter().GetResult();
        }
    }
}