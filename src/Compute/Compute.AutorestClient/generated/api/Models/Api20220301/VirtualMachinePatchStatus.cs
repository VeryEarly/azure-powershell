// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>The status of virtual machine patch operations.</summary>
    public partial class VirtualMachinePatchStatus :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatus,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal
    {

        /// <summary>Backing field for <see cref="AvailablePatchSummary" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummary _availablePatchSummary;

        /// <summary>
        /// The available patch summary of the latest assessment operation for the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummary AvailablePatchSummary { get => (this._availablePatchSummary = this._availablePatchSummary ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.AvailablePatchSummary()); set => this._availablePatchSummary = value; }

        /// <summary>
        /// The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string AvailablePatchSummaryAssessmentActivityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).AssessmentActivityId; }

        /// <summary>
        /// The number of critical or security patches that have been detected as available and not yet installed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? AvailablePatchSummaryCriticalAndSecurityPatchCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).CriticalAndSecurityPatchCount; }

        /// <summary>The error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string AvailablePatchSummaryErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).Code = value ?? null; }

        /// <summary>The Api error details</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IApiErrorBase[] AvailablePatchSummaryErrorDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).Detail = value ?? null /* arrayOf */; }

        /// <summary>The internal error message or exception dump.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string AvailablePatchSummaryErrorInnererrorErrordetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).InnererrorErrordetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).InnererrorErrordetail = value ?? null; }

        /// <summary>The exception type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string AvailablePatchSummaryErrorInnererrorExceptiontype { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).InnererrorExceptiontype; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).InnererrorExceptiontype = value ?? null; }

        /// <summary>The error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string AvailablePatchSummaryErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).Message = value ?? null; }

        /// <summary>The target of the particular error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string AvailablePatchSummaryErrorTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).Target = value ?? null; }

        /// <summary>The UTC timestamp when the operation began.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public global::System.DateTime? AvailablePatchSummaryLastModifiedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).LastModifiedTime; }

        /// <summary>The number of all available patches excluding critical and security.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? AvailablePatchSummaryOtherPatchCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).OtherPatchCount; }

        /// <summary>
        /// The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation
        /// but the reboot has not yet occurred.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? AvailablePatchSummaryRebootPending { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).RebootPending; }

        /// <summary>The UTC timestamp when the operation began.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public global::System.DateTime? AvailablePatchSummaryStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).StartTime; }

        /// <summary>
        /// The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that
        /// point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PatchOperationStatus? AvailablePatchSummaryStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).Status; }

        /// <summary>Backing field for <see cref="ConfigurationStatuses" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus[] _configurationStatuses;

        /// <summary>The enablement status of the specified patchMode</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus[] ConfigurationStatuses { get => this._configurationStatuses; }

        /// <summary>Backing field for <see cref="LastPatchInstallationSummary" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummary _lastPatchInstallationSummary;

        /// <summary>
        /// The installation summary of the latest installation operation for the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummary LastPatchInstallationSummary { get => (this._lastPatchInstallationSummary = this._lastPatchInstallationSummary ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.LastPatchInstallationSummary()); set => this._lastPatchInstallationSummary = value; }

        /// <summary>The error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string LastPatchInstallationSummaryErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).Code = value ?? null; }

        /// <summary>The Api error details</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IApiErrorBase[] LastPatchInstallationSummaryErrorDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).Detail = value ?? null /* arrayOf */; }

        /// <summary>The internal error message or exception dump.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string LastPatchInstallationSummaryErrorInnererrorErrordetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).InnererrorErrordetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).InnererrorErrordetail = value ?? null; }

        /// <summary>The exception type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string LastPatchInstallationSummaryErrorInnererrorExceptiontype { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).InnererrorExceptiontype; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).InnererrorExceptiontype = value ?? null; }

        /// <summary>The error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string LastPatchInstallationSummaryErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).Message = value ?? null; }

        /// <summary>The target of the particular error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string LastPatchInstallationSummaryErrorTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).Target = value ?? null; }

        /// <summary>
        /// The number of all available patches but excluded explicitly by a customer-specified exclusion list match.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? LastPatchInstallationSummaryExcludedPatchCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).ExcludedPatchCount; }

        /// <summary>The count of patches that failed installation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? LastPatchInstallationSummaryFailedPatchCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).FailedPatchCount; }

        /// <summary>
        /// The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string LastPatchInstallationSummaryInstallationActivityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).InstallationActivityId; }

        /// <summary>The count of patches that successfully installed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? LastPatchInstallationSummaryInstalledPatchCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).InstalledPatchCount; }

        /// <summary>The UTC timestamp when the operation began.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastPatchInstallationSummaryLastModifiedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).LastModifiedTime; }

        /// <summary>
        /// Describes whether the operation ran out of time before it completed all its intended actions
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? LastPatchInstallationSummaryMaintenanceWindowExceeded { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).MaintenanceWindowExceeded; }

        /// <summary>
        /// The number of all available patches but not going to be installed because it didn't match a classification or inclusion
        /// list entry.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? LastPatchInstallationSummaryNotSelectedPatchCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).NotSelectedPatchCount; }

        /// <summary>
        /// The number of all available patches expected to be installed over the course of the patch installation operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? LastPatchInstallationSummaryPendingPatchCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).PendingPatchCount; }

        /// <summary>The UTC timestamp when the operation began.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastPatchInstallationSummaryStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).StartTime; }

        /// <summary>
        /// The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that
        /// point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PatchOperationStatus? LastPatchInstallationSummaryStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).Status; }

        /// <summary>Internal Acessors for AvailablePatchSummary</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummary Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.AvailablePatchSummary { get => (this._availablePatchSummary = this._availablePatchSummary ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.AvailablePatchSummary()); set { {_availablePatchSummary = value;} } }

        /// <summary>Internal Acessors for AvailablePatchSummaryAssessmentActivityId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.AvailablePatchSummaryAssessmentActivityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).AssessmentActivityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).AssessmentActivityId = value; }

        /// <summary>Internal Acessors for AvailablePatchSummaryCriticalAndSecurityPatchCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.AvailablePatchSummaryCriticalAndSecurityPatchCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).CriticalAndSecurityPatchCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).CriticalAndSecurityPatchCount = value; }

        /// <summary>Internal Acessors for AvailablePatchSummaryError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IApiError Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.AvailablePatchSummaryError { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).Error; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).Error = value; }

        /// <summary>Internal Acessors for AvailablePatchSummaryErrorInnererror</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInnerError Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.AvailablePatchSummaryErrorInnererror { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).Innererror; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).Innererror = value; }

        /// <summary>Internal Acessors for AvailablePatchSummaryLastModifiedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.AvailablePatchSummaryLastModifiedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).LastModifiedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).LastModifiedTime = value; }

        /// <summary>Internal Acessors for AvailablePatchSummaryOtherPatchCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.AvailablePatchSummaryOtherPatchCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).OtherPatchCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).OtherPatchCount = value; }

        /// <summary>Internal Acessors for AvailablePatchSummaryRebootPending</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.AvailablePatchSummaryRebootPending { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).RebootPending; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).RebootPending = value; }

        /// <summary>Internal Acessors for AvailablePatchSummaryStartTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.AvailablePatchSummaryStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).StartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).StartTime = value; }

        /// <summary>Internal Acessors for AvailablePatchSummaryStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PatchOperationStatus? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.AvailablePatchSummaryStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummaryInternal)AvailablePatchSummary).Status = value; }

        /// <summary>Internal Acessors for ConfigurationStatuses</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus[] Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.ConfigurationStatuses { get => this._configurationStatuses; set { {_configurationStatuses = value;} } }

        /// <summary>Internal Acessors for LastPatchInstallationSummary</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummary Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.LastPatchInstallationSummary { get => (this._lastPatchInstallationSummary = this._lastPatchInstallationSummary ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.LastPatchInstallationSummary()); set { {_lastPatchInstallationSummary = value;} } }

        /// <summary>Internal Acessors for LastPatchInstallationSummaryError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IApiError Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.LastPatchInstallationSummaryError { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).Error; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).Error = value; }

        /// <summary>Internal Acessors for LastPatchInstallationSummaryErrorInnererror</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInnerError Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.LastPatchInstallationSummaryErrorInnererror { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).Innererror; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).Innererror = value; }

        /// <summary>Internal Acessors for LastPatchInstallationSummaryExcludedPatchCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.LastPatchInstallationSummaryExcludedPatchCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).ExcludedPatchCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).ExcludedPatchCount = value; }

        /// <summary>Internal Acessors for LastPatchInstallationSummaryFailedPatchCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.LastPatchInstallationSummaryFailedPatchCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).FailedPatchCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).FailedPatchCount = value; }

        /// <summary>Internal Acessors for LastPatchInstallationSummaryInstallationActivityId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.LastPatchInstallationSummaryInstallationActivityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).InstallationActivityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).InstallationActivityId = value; }

        /// <summary>Internal Acessors for LastPatchInstallationSummaryInstalledPatchCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.LastPatchInstallationSummaryInstalledPatchCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).InstalledPatchCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).InstalledPatchCount = value; }

        /// <summary>Internal Acessors for LastPatchInstallationSummaryLastModifiedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.LastPatchInstallationSummaryLastModifiedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).LastModifiedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).LastModifiedTime = value; }

        /// <summary>Internal Acessors for LastPatchInstallationSummaryMaintenanceWindowExceeded</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.LastPatchInstallationSummaryMaintenanceWindowExceeded { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).MaintenanceWindowExceeded; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).MaintenanceWindowExceeded = value; }

        /// <summary>Internal Acessors for LastPatchInstallationSummaryNotSelectedPatchCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.LastPatchInstallationSummaryNotSelectedPatchCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).NotSelectedPatchCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).NotSelectedPatchCount = value; }

        /// <summary>Internal Acessors for LastPatchInstallationSummaryPendingPatchCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.LastPatchInstallationSummaryPendingPatchCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).PendingPatchCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).PendingPatchCount = value; }

        /// <summary>Internal Acessors for LastPatchInstallationSummaryStartTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.LastPatchInstallationSummaryStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).StartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).StartTime = value; }

        /// <summary>Internal Acessors for LastPatchInstallationSummaryStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PatchOperationStatus? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatusInternal.LastPatchInstallationSummaryStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummaryInternal)LastPatchInstallationSummary).Status = value; }

        /// <summary>Creates an new <see cref="VirtualMachinePatchStatus" /> instance.</summary>
        public VirtualMachinePatchStatus()
        {

        }
    }
    /// The status of virtual machine patch operations.
    public partial interface IVirtualMachinePatchStatus :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.",
        SerializedName = @"assessmentActivityId",
        PossibleTypes = new [] { typeof(string) })]
        string AvailablePatchSummaryAssessmentActivityId { get;  }
        /// <summary>
        /// The number of critical or security patches that have been detected as available and not yet installed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of critical or security patches that have been detected as available and not yet installed.",
        SerializedName = @"criticalAndSecurityPatchCount",
        PossibleTypes = new [] { typeof(int) })]
        int? AvailablePatchSummaryCriticalAndSecurityPatchCount { get;  }
        /// <summary>The error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The error code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string AvailablePatchSummaryErrorCode { get; set; }
        /// <summary>The Api error details</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Api error details",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IApiErrorBase) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IApiErrorBase[] AvailablePatchSummaryErrorDetail { get; set; }
        /// <summary>The internal error message or exception dump.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The internal error message or exception dump.",
        SerializedName = @"errordetail",
        PossibleTypes = new [] { typeof(string) })]
        string AvailablePatchSummaryErrorInnererrorErrordetail { get; set; }
        /// <summary>The exception type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The exception type.",
        SerializedName = @"exceptiontype",
        PossibleTypes = new [] { typeof(string) })]
        string AvailablePatchSummaryErrorInnererrorExceptiontype { get; set; }
        /// <summary>The error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The error message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string AvailablePatchSummaryErrorMessage { get; set; }
        /// <summary>The target of the particular error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target of the particular error.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string AvailablePatchSummaryErrorTarget { get; set; }
        /// <summary>The UTC timestamp when the operation began.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The UTC timestamp when the operation began.",
        SerializedName = @"lastModifiedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AvailablePatchSummaryLastModifiedTime { get;  }
        /// <summary>The number of all available patches excluding critical and security.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of all available patches excluding critical and security.",
        SerializedName = @"otherPatchCount",
        PossibleTypes = new [] { typeof(int) })]
        int? AvailablePatchSummaryOtherPatchCount { get;  }
        /// <summary>
        /// The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation
        /// but the reboot has not yet occurred.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation but the reboot has not yet occurred.",
        SerializedName = @"rebootPending",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AvailablePatchSummaryRebootPending { get;  }
        /// <summary>The UTC timestamp when the operation began.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The UTC timestamp when the operation began.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AvailablePatchSummaryStartTime { get;  }
        /// <summary>
        /// The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that
        /// point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The overall success or failure status of the operation. It remains ""InProgress"" until the operation completes. At that point it will become ""Unknown"", ""Failed"", ""Succeeded"", or ""CompletedWithWarnings.""",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PatchOperationStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PatchOperationStatus? AvailablePatchSummaryStatus { get;  }
        /// <summary>The enablement status of the specified patchMode</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The enablement status of the specified patchMode",
        SerializedName = @"configurationStatuses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus[] ConfigurationStatuses { get;  }
        /// <summary>The error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The error code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string LastPatchInstallationSummaryErrorCode { get; set; }
        /// <summary>The Api error details</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Api error details",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IApiErrorBase) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IApiErrorBase[] LastPatchInstallationSummaryErrorDetail { get; set; }
        /// <summary>The internal error message or exception dump.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The internal error message or exception dump.",
        SerializedName = @"errordetail",
        PossibleTypes = new [] { typeof(string) })]
        string LastPatchInstallationSummaryErrorInnererrorErrordetail { get; set; }
        /// <summary>The exception type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The exception type.",
        SerializedName = @"exceptiontype",
        PossibleTypes = new [] { typeof(string) })]
        string LastPatchInstallationSummaryErrorInnererrorExceptiontype { get; set; }
        /// <summary>The error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The error message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string LastPatchInstallationSummaryErrorMessage { get; set; }
        /// <summary>The target of the particular error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target of the particular error.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string LastPatchInstallationSummaryErrorTarget { get; set; }
        /// <summary>
        /// The number of all available patches but excluded explicitly by a customer-specified exclusion list match.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of all available patches but excluded explicitly by a customer-specified exclusion list match.",
        SerializedName = @"excludedPatchCount",
        PossibleTypes = new [] { typeof(int) })]
        int? LastPatchInstallationSummaryExcludedPatchCount { get;  }
        /// <summary>The count of patches that failed installation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The count of patches that failed installation.",
        SerializedName = @"failedPatchCount",
        PossibleTypes = new [] { typeof(int) })]
        int? LastPatchInstallationSummaryFailedPatchCount { get;  }
        /// <summary>
        /// The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.",
        SerializedName = @"installationActivityId",
        PossibleTypes = new [] { typeof(string) })]
        string LastPatchInstallationSummaryInstallationActivityId { get;  }
        /// <summary>The count of patches that successfully installed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The count of patches that successfully installed.",
        SerializedName = @"installedPatchCount",
        PossibleTypes = new [] { typeof(int) })]
        int? LastPatchInstallationSummaryInstalledPatchCount { get;  }
        /// <summary>The UTC timestamp when the operation began.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The UTC timestamp when the operation began.",
        SerializedName = @"lastModifiedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastPatchInstallationSummaryLastModifiedTime { get;  }
        /// <summary>
        /// Describes whether the operation ran out of time before it completed all its intended actions
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Describes whether the operation ran out of time before it completed all its intended actions",
        SerializedName = @"maintenanceWindowExceeded",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LastPatchInstallationSummaryMaintenanceWindowExceeded { get;  }
        /// <summary>
        /// The number of all available patches but not going to be installed because it didn't match a classification or inclusion
        /// list entry.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of all available patches but not going to be installed because it didn't match a classification or inclusion list entry.",
        SerializedName = @"notSelectedPatchCount",
        PossibleTypes = new [] { typeof(int) })]
        int? LastPatchInstallationSummaryNotSelectedPatchCount { get;  }
        /// <summary>
        /// The number of all available patches expected to be installed over the course of the patch installation operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of all available patches expected to be installed over the course of the patch installation operation.",
        SerializedName = @"pendingPatchCount",
        PossibleTypes = new [] { typeof(int) })]
        int? LastPatchInstallationSummaryPendingPatchCount { get;  }
        /// <summary>The UTC timestamp when the operation began.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The UTC timestamp when the operation began.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastPatchInstallationSummaryStartTime { get;  }
        /// <summary>
        /// The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that
        /// point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The overall success or failure status of the operation. It remains ""InProgress"" until the operation completes. At that point it will become ""Unknown"", ""Failed"", ""Succeeded"", or ""CompletedWithWarnings.""",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PatchOperationStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PatchOperationStatus? LastPatchInstallationSummaryStatus { get;  }

    }
    /// The status of virtual machine patch operations.
    internal partial interface IVirtualMachinePatchStatusInternal

    {
        /// <summary>
        /// The available patch summary of the latest assessment operation for the virtual machine.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IAvailablePatchSummary AvailablePatchSummary { get; set; }
        /// <summary>
        /// The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        /// </summary>
        string AvailablePatchSummaryAssessmentActivityId { get; set; }
        /// <summary>
        /// The number of critical or security patches that have been detected as available and not yet installed.
        /// </summary>
        int? AvailablePatchSummaryCriticalAndSecurityPatchCount { get; set; }
        /// <summary>
        /// The errors that were encountered during execution of the operation. The details array contains the list of them.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IApiError AvailablePatchSummaryError { get; set; }
        /// <summary>The error code.</summary>
        string AvailablePatchSummaryErrorCode { get; set; }
        /// <summary>The Api error details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IApiErrorBase[] AvailablePatchSummaryErrorDetail { get; set; }
        /// <summary>The Api inner error</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInnerError AvailablePatchSummaryErrorInnererror { get; set; }
        /// <summary>The internal error message or exception dump.</summary>
        string AvailablePatchSummaryErrorInnererrorErrordetail { get; set; }
        /// <summary>The exception type.</summary>
        string AvailablePatchSummaryErrorInnererrorExceptiontype { get; set; }
        /// <summary>The error message.</summary>
        string AvailablePatchSummaryErrorMessage { get; set; }
        /// <summary>The target of the particular error.</summary>
        string AvailablePatchSummaryErrorTarget { get; set; }
        /// <summary>The UTC timestamp when the operation began.</summary>
        global::System.DateTime? AvailablePatchSummaryLastModifiedTime { get; set; }
        /// <summary>The number of all available patches excluding critical and security.</summary>
        int? AvailablePatchSummaryOtherPatchCount { get; set; }
        /// <summary>
        /// The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation
        /// but the reboot has not yet occurred.
        /// </summary>
        bool? AvailablePatchSummaryRebootPending { get; set; }
        /// <summary>The UTC timestamp when the operation began.</summary>
        global::System.DateTime? AvailablePatchSummaryStartTime { get; set; }
        /// <summary>
        /// The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that
        /// point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PatchOperationStatus? AvailablePatchSummaryStatus { get; set; }
        /// <summary>The enablement status of the specified patchMode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus[] ConfigurationStatuses { get; set; }
        /// <summary>
        /// The installation summary of the latest installation operation for the virtual machine.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ILastPatchInstallationSummary LastPatchInstallationSummary { get; set; }
        /// <summary>
        /// The errors that were encountered during execution of the operation. The details array contains the list of them.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IApiError LastPatchInstallationSummaryError { get; set; }
        /// <summary>The error code.</summary>
        string LastPatchInstallationSummaryErrorCode { get; set; }
        /// <summary>The Api error details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IApiErrorBase[] LastPatchInstallationSummaryErrorDetail { get; set; }
        /// <summary>The Api inner error</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInnerError LastPatchInstallationSummaryErrorInnererror { get; set; }
        /// <summary>The internal error message or exception dump.</summary>
        string LastPatchInstallationSummaryErrorInnererrorErrordetail { get; set; }
        /// <summary>The exception type.</summary>
        string LastPatchInstallationSummaryErrorInnererrorExceptiontype { get; set; }
        /// <summary>The error message.</summary>
        string LastPatchInstallationSummaryErrorMessage { get; set; }
        /// <summary>The target of the particular error.</summary>
        string LastPatchInstallationSummaryErrorTarget { get; set; }
        /// <summary>
        /// The number of all available patches but excluded explicitly by a customer-specified exclusion list match.
        /// </summary>
        int? LastPatchInstallationSummaryExcludedPatchCount { get; set; }
        /// <summary>The count of patches that failed installation.</summary>
        int? LastPatchInstallationSummaryFailedPatchCount { get; set; }
        /// <summary>
        /// The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        /// </summary>
        string LastPatchInstallationSummaryInstallationActivityId { get; set; }
        /// <summary>The count of patches that successfully installed.</summary>
        int? LastPatchInstallationSummaryInstalledPatchCount { get; set; }
        /// <summary>The UTC timestamp when the operation began.</summary>
        global::System.DateTime? LastPatchInstallationSummaryLastModifiedTime { get; set; }
        /// <summary>
        /// Describes whether the operation ran out of time before it completed all its intended actions
        /// </summary>
        bool? LastPatchInstallationSummaryMaintenanceWindowExceeded { get; set; }
        /// <summary>
        /// The number of all available patches but not going to be installed because it didn't match a classification or inclusion
        /// list entry.
        /// </summary>
        int? LastPatchInstallationSummaryNotSelectedPatchCount { get; set; }
        /// <summary>
        /// The number of all available patches expected to be installed over the course of the patch installation operation.
        /// </summary>
        int? LastPatchInstallationSummaryPendingPatchCount { get; set; }
        /// <summary>The UTC timestamp when the operation began.</summary>
        global::System.DateTime? LastPatchInstallationSummaryStartTime { get; set; }
        /// <summary>
        /// The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that
        /// point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PatchOperationStatus? LastPatchInstallationSummaryStatus { get; set; }

    }
}