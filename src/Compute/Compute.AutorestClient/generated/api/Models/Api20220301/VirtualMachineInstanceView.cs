// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>The instance view of a virtual machine.</summary>
    public partial class VirtualMachineInstanceView :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineInstanceView,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineInstanceViewInternal
    {

        /// <summary>Backing field for <see cref="AssignedHost" /> property.</summary>
        private string _assignedHost;

        /// <summary>
        /// Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual
        /// machine is associated with a dedicated host group that has automatic placement enabled. <br><br>Minimum api-version: 2020-06-01.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string AssignedHost { get => this._assignedHost; }

        /// <summary>Backing field for <see cref="BootDiagnostic" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceView _bootDiagnostic;

        /// <summary>
        /// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status.
        /// <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the
        /// VM from the hypervisor.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceView BootDiagnostic { get => (this._bootDiagnostic = this._bootDiagnostic ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.BootDiagnosticsInstanceView()); set => this._bootDiagnostic = value; }

        /// <summary>
        /// The console screenshot blob URI. <br><br>NOTE: This will **not** be set if boot diagnostics is currently enabled with
        /// managed storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string BootDiagnosticConsoleScreenshotBlobUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceViewInternal)BootDiagnostic).ConsoleScreenshotBlobUri; }

        /// <summary>
        /// The serial console log blob Uri. <br><br>NOTE: This will **not** be set if boot diagnostics is currently enabled with
        /// managed storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string BootDiagnosticSerialConsoleLogBlobUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceViewInternal)BootDiagnostic).SerialConsoleLogBlobUri; }

        /// <summary>The status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string BootDiagnosticsStatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceViewInternal)BootDiagnostic).StatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceViewInternal)BootDiagnostic).StatusCode = value ?? null; }

        /// <summary>The short localizable label for the status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string BootDiagnosticsStatusDisplayStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceViewInternal)BootDiagnostic).StatusDisplayStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceViewInternal)BootDiagnostic).StatusDisplayStatus = value ?? null; }

        /// <summary>The level code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StatusLevelTypes? BootDiagnosticsStatusLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceViewInternal)BootDiagnostic).StatusLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceViewInternal)BootDiagnostic).StatusLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StatusLevelTypes)""); }

        /// <summary>The detailed status message, including for alerts and error messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string BootDiagnosticsStatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceViewInternal)BootDiagnostic).StatusMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceViewInternal)BootDiagnostic).StatusMessage = value ?? null; }

        /// <summary>The time of the status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public global::System.DateTime? BootDiagnosticsStatusTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceViewInternal)BootDiagnostic).StatusTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceViewInternal)BootDiagnostic).StatusTime = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="ComputerName" /> property.</summary>
        private string _computerName;

        /// <summary>The computer name assigned to the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string ComputerName { get => this._computerName; set => this._computerName = value; }

        /// <summary>Backing field for <see cref="Disk" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskInstanceView[] _disk;

        /// <summary>The virtual machine disk information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskInstanceView[] Disk { get => this._disk; set => this._disk = value; }

        /// <summary>Backing field for <see cref="Extension" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionInstanceView[] _extension;

        /// <summary>The extensions information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionInstanceView[] Extension { get => this._extension; set => this._extension = value; }

        /// <summary>Backing field for <see cref="HyperVGeneration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.HyperVGenerationType? _hyperVGeneration;

        /// <summary>Specifies the HyperVGeneration Type associated with a resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.HyperVGenerationType? HyperVGeneration { get => this._hyperVGeneration; set => this._hyperVGeneration = value; }

        /// <summary>Backing field for <see cref="MaintenanceRedeployStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IMaintenanceRedeployStatus _maintenanceRedeployStatus;

        /// <summary>The Maintenance Operation status on the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IMaintenanceRedeployStatus MaintenanceRedeployStatus { get => (this._maintenanceRedeployStatus = this._maintenanceRedeployStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.MaintenanceRedeployStatus()); set => this._maintenanceRedeployStatus = value; }

        /// <summary>True, if customer is allowed to perform Maintenance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? MaintenanceRedeployStatusIsCustomerInitiatedMaintenanceAllowed { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IMaintenanceRedeployStatusInternal)MaintenanceRedeployStatus).IsCustomerInitiatedMaintenanceAllowed; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IMaintenanceRedeployStatusInternal)MaintenanceRedeployStatus).IsCustomerInitiatedMaintenanceAllowed = value ?? default(bool); }

        /// <summary>Message returned for the last Maintenance Operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string MaintenanceRedeployStatusLastOperationMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IMaintenanceRedeployStatusInternal)MaintenanceRedeployStatus).LastOperationMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IMaintenanceRedeployStatusInternal)MaintenanceRedeployStatus).LastOperationMessage = value ?? null; }

        /// <summary>The Last Maintenance Operation Result Code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.MaintenanceOperationResultCodeTypes? MaintenanceRedeployStatusLastOperationResultCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IMaintenanceRedeployStatusInternal)MaintenanceRedeployStatus).LastOperationResultCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IMaintenanceRedeployStatusInternal)MaintenanceRedeployStatus).LastOperationResultCode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.MaintenanceOperationResultCodeTypes)""); }

        /// <summary>End Time for the Maintenance Window.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public global::System.DateTime? MaintenanceRedeployStatusMaintenanceWindowEndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IMaintenanceRedeployStatusInternal)MaintenanceRedeployStatus).MaintenanceWindowEndTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IMaintenanceRedeployStatusInternal)MaintenanceRedeployStatus).MaintenanceWindowEndTime = value ?? default(global::System.DateTime); }

        /// <summary>Start Time for the Maintenance Window.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public global::System.DateTime? MaintenanceRedeployStatusMaintenanceWindowStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IMaintenanceRedeployStatusInternal)MaintenanceRedeployStatus).MaintenanceWindowStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IMaintenanceRedeployStatusInternal)MaintenanceRedeployStatus).MaintenanceWindowStartTime = value ?? default(global::System.DateTime); }

        /// <summary>End Time for the Pre Maintenance Window.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public global::System.DateTime? MaintenanceRedeployStatusPreMaintenanceWindowEndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IMaintenanceRedeployStatusInternal)MaintenanceRedeployStatus).PreMaintenanceWindowEndTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IMaintenanceRedeployStatusInternal)MaintenanceRedeployStatus).PreMaintenanceWindowEndTime = value ?? default(global::System.DateTime); }

        /// <summary>Start Time for the Pre Maintenance Window.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public global::System.DateTime? MaintenanceRedeployStatusPreMaintenanceWindowStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IMaintenanceRedeployStatusInternal)MaintenanceRedeployStatus).PreMaintenanceWindowStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IMaintenanceRedeployStatusInternal)MaintenanceRedeployStatus).PreMaintenanceWindowStartTime = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for AssignedHost</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineInstanceViewInternal.AssignedHost { get => this._assignedHost; set { {_assignedHost = value;} } }

        /// <summary>Internal Acessors for BootDiagnostic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceView Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineInstanceViewInternal.BootDiagnostic { get => (this._bootDiagnostic = this._bootDiagnostic ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.BootDiagnosticsInstanceView()); set { {_bootDiagnostic = value;} } }

        /// <summary>Internal Acessors for BootDiagnosticConsoleScreenshotBlobUri</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineInstanceViewInternal.BootDiagnosticConsoleScreenshotBlobUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceViewInternal)BootDiagnostic).ConsoleScreenshotBlobUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceViewInternal)BootDiagnostic).ConsoleScreenshotBlobUri = value; }

        /// <summary>Internal Acessors for BootDiagnosticSerialConsoleLogBlobUri</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineInstanceViewInternal.BootDiagnosticSerialConsoleLogBlobUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceViewInternal)BootDiagnostic).SerialConsoleLogBlobUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceViewInternal)BootDiagnostic).SerialConsoleLogBlobUri = value; }

        /// <summary>Internal Acessors for BootDiagnosticStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineInstanceViewInternal.BootDiagnosticStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceViewInternal)BootDiagnostic).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceViewInternal)BootDiagnostic).Status = value; }

        /// <summary>Internal Acessors for MaintenanceRedeployStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IMaintenanceRedeployStatus Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineInstanceViewInternal.MaintenanceRedeployStatus { get => (this._maintenanceRedeployStatus = this._maintenanceRedeployStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.MaintenanceRedeployStatus()); set { {_maintenanceRedeployStatus = value;} } }

        /// <summary>Internal Acessors for VMAgent</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineAgentInstanceView Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineInstanceViewInternal.VMAgent { get => (this._vMAgent = this._vMAgent ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualMachineAgentInstanceView()); set { {_vMAgent = value;} } }

        /// <summary>Internal Acessors for VMHealth</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineHealthStatus Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineInstanceViewInternal.VMHealth { get => (this._vMHealth = this._vMHealth ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualMachineHealthStatus()); set { {_vMHealth = value;} } }

        /// <summary>Internal Acessors for VMHealthStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineInstanceViewInternal.VMHealthStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineHealthStatusInternal)VMHealth).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineHealthStatusInternal)VMHealth).Status = value; }

        /// <summary>Backing field for <see cref="OSName" /> property.</summary>
        private string _oSName;

        /// <summary>The Operating System running on the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string OSName { get => this._oSName; set => this._oSName = value; }

        /// <summary>Backing field for <see cref="OSVersion" /> property.</summary>
        private string _oSVersion;

        /// <summary>The version of Operating System running on the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string OSVersion { get => this._oSVersion; set => this._oSVersion = value; }

        /// <summary>Backing field for <see cref="PatchStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatus _patchStatus;

        /// <summary>[Preview Feature] The status of virtual machine patch operations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatus PatchStatus { get => (this._patchStatus = this._patchStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualMachinePatchStatus()); set => this._patchStatus = value; }

        /// <summary>Backing field for <see cref="PlatformFaultDomain" /> property.</summary>
        private int? _platformFaultDomain;

        /// <summary>Specifies the fault domain of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public int? PlatformFaultDomain { get => this._platformFaultDomain; set => this._platformFaultDomain = value; }

        /// <summary>Backing field for <see cref="PlatformUpdateDomain" /> property.</summary>
        private int? _platformUpdateDomain;

        /// <summary>Specifies the update domain of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public int? PlatformUpdateDomain { get => this._platformUpdateDomain; set => this._platformUpdateDomain = value; }

        /// <summary>Backing field for <see cref="RdpThumbPrint" /> property.</summary>
        private string _rdpThumbPrint;

        /// <summary>The Remote desktop certificate thumbprint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string RdpThumbPrint { get => this._rdpThumbPrint; set => this._rdpThumbPrint = value; }

        /// <summary>Backing field for <see cref="Statuses" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus[] _statuses;

        /// <summary>The resource status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus[] Statuses { get => this._statuses; set => this._statuses = value; }

        /// <summary>Backing field for <see cref="VMAgent" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineAgentInstanceView _vMAgent;

        /// <summary>The VM Agent running on the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineAgentInstanceView VMAgent { get => (this._vMAgent = this._vMAgent ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualMachineAgentInstanceView()); set => this._vMAgent = value; }

        /// <summary>The virtual machine extension handler instance view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionHandlerInstanceView[] VMAgentExtensionHandler { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineAgentInstanceViewInternal)VMAgent).ExtensionHandler; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineAgentInstanceViewInternal)VMAgent).ExtensionHandler = value ?? null /* arrayOf */; }

        /// <summary>The resource status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus[] VMAgentStatuses { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineAgentInstanceViewInternal)VMAgent).Statuses; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineAgentInstanceViewInternal)VMAgent).Statuses = value ?? null /* arrayOf */; }

        /// <summary>The VM Agent full version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string VMAgentVmagentVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineAgentInstanceViewInternal)VMAgent).VMAgentVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineAgentInstanceViewInternal)VMAgent).VMAgentVersion = value ?? null; }

        /// <summary>Backing field for <see cref="VMHealth" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineHealthStatus _vMHealth;

        /// <summary>The health status for the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineHealthStatus VMHealth { get => (this._vMHealth = this._vMHealth ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualMachineHealthStatus()); }

        /// <summary>The status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string VMHealthStatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineHealthStatusInternal)VMHealth).StatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineHealthStatusInternal)VMHealth).StatusCode = value ?? null; }

        /// <summary>The short localizable label for the status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string VMHealthStatusDisplayStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineHealthStatusInternal)VMHealth).StatusDisplayStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineHealthStatusInternal)VMHealth).StatusDisplayStatus = value ?? null; }

        /// <summary>The level code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StatusLevelTypes? VMHealthStatusLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineHealthStatusInternal)VMHealth).StatusLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineHealthStatusInternal)VMHealth).StatusLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StatusLevelTypes)""); }

        /// <summary>The detailed status message, including for alerts and error messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string VMHealthStatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineHealthStatusInternal)VMHealth).StatusMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineHealthStatusInternal)VMHealth).StatusMessage = value ?? null; }

        /// <summary>The time of the status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public global::System.DateTime? VMHealthStatusTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineHealthStatusInternal)VMHealth).StatusTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineHealthStatusInternal)VMHealth).StatusTime = value ?? default(global::System.DateTime); }

        /// <summary>Creates an new <see cref="VirtualMachineInstanceView" /> instance.</summary>
        public VirtualMachineInstanceView()
        {

        }
    }
    /// The instance view of a virtual machine.
    public partial interface IVirtualMachineInstanceView :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual
        /// machine is associated with a dedicated host group that has automatic placement enabled. <br><br>Minimum api-version: 2020-06-01.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual machine is associated with a dedicated host group that has automatic placement enabled. <br><br>Minimum api-version: 2020-06-01.",
        SerializedName = @"assignedHost",
        PossibleTypes = new [] { typeof(string) })]
        string AssignedHost { get;  }
        /// <summary>
        /// The console screenshot blob URI. <br><br>NOTE: This will **not** be set if boot diagnostics is currently enabled with
        /// managed storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The console screenshot blob URI. <br><br>NOTE: This will **not** be set if boot diagnostics is currently enabled with managed storage.",
        SerializedName = @"consoleScreenshotBlobUri",
        PossibleTypes = new [] { typeof(string) })]
        string BootDiagnosticConsoleScreenshotBlobUri { get;  }
        /// <summary>
        /// The serial console log blob Uri. <br><br>NOTE: This will **not** be set if boot diagnostics is currently enabled with
        /// managed storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The serial console log blob Uri. <br><br>NOTE: This will **not** be set if boot diagnostics is currently enabled with managed storage.",
        SerializedName = @"serialConsoleLogBlobUri",
        PossibleTypes = new [] { typeof(string) })]
        string BootDiagnosticSerialConsoleLogBlobUri { get;  }
        /// <summary>The status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The status code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string BootDiagnosticsStatusCode { get; set; }
        /// <summary>The short localizable label for the status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The short localizable label for the status.",
        SerializedName = @"displayStatus",
        PossibleTypes = new [] { typeof(string) })]
        string BootDiagnosticsStatusDisplayStatus { get; set; }
        /// <summary>The level code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The level code.",
        SerializedName = @"level",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StatusLevelTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StatusLevelTypes? BootDiagnosticsStatusLevel { get; set; }
        /// <summary>The detailed status message, including for alerts and error messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The detailed status message, including for alerts and error messages.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string BootDiagnosticsStatusMessage { get; set; }
        /// <summary>The time of the status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time of the status.",
        SerializedName = @"time",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BootDiagnosticsStatusTime { get; set; }
        /// <summary>The computer name assigned to the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The computer name assigned to the virtual machine.",
        SerializedName = @"computerName",
        PossibleTypes = new [] { typeof(string) })]
        string ComputerName { get; set; }
        /// <summary>The virtual machine disk information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The virtual machine disk information.",
        SerializedName = @"disks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskInstanceView) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskInstanceView[] Disk { get; set; }
        /// <summary>The extensions information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The extensions information.",
        SerializedName = @"extensions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionInstanceView) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionInstanceView[] Extension { get; set; }
        /// <summary>Specifies the HyperVGeneration Type associated with a resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the HyperVGeneration Type associated with a resource",
        SerializedName = @"hyperVGeneration",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.HyperVGenerationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.HyperVGenerationType? HyperVGeneration { get; set; }
        /// <summary>True, if customer is allowed to perform Maintenance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"True, if customer is allowed to perform Maintenance.",
        SerializedName = @"isCustomerInitiatedMaintenanceAllowed",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaintenanceRedeployStatusIsCustomerInitiatedMaintenanceAllowed { get; set; }
        /// <summary>Message returned for the last Maintenance Operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Message returned for the last Maintenance Operation.",
        SerializedName = @"lastOperationMessage",
        PossibleTypes = new [] { typeof(string) })]
        string MaintenanceRedeployStatusLastOperationMessage { get; set; }
        /// <summary>The Last Maintenance Operation Result Code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Last Maintenance Operation Result Code.",
        SerializedName = @"lastOperationResultCode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.MaintenanceOperationResultCodeTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.MaintenanceOperationResultCodeTypes? MaintenanceRedeployStatusLastOperationResultCode { get; set; }
        /// <summary>End Time for the Maintenance Window.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"End Time for the Maintenance Window.",
        SerializedName = @"maintenanceWindowEndTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? MaintenanceRedeployStatusMaintenanceWindowEndTime { get; set; }
        /// <summary>Start Time for the Maintenance Window.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Start Time for the Maintenance Window.",
        SerializedName = @"maintenanceWindowStartTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? MaintenanceRedeployStatusMaintenanceWindowStartTime { get; set; }
        /// <summary>End Time for the Pre Maintenance Window.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"End Time for the Pre Maintenance Window.",
        SerializedName = @"preMaintenanceWindowEndTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? MaintenanceRedeployStatusPreMaintenanceWindowEndTime { get; set; }
        /// <summary>Start Time for the Pre Maintenance Window.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Start Time for the Pre Maintenance Window.",
        SerializedName = @"preMaintenanceWindowStartTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? MaintenanceRedeployStatusPreMaintenanceWindowStartTime { get; set; }
        /// <summary>The Operating System running on the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Operating System running on the virtual machine.",
        SerializedName = @"osName",
        PossibleTypes = new [] { typeof(string) })]
        string OSName { get; set; }
        /// <summary>The version of Operating System running on the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of Operating System running on the virtual machine.",
        SerializedName = @"osVersion",
        PossibleTypes = new [] { typeof(string) })]
        string OSVersion { get; set; }
        /// <summary>[Preview Feature] The status of virtual machine patch operations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Preview Feature] The status of virtual machine patch operations.",
        SerializedName = @"patchStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatus PatchStatus { get; set; }
        /// <summary>Specifies the fault domain of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the fault domain of the virtual machine.",
        SerializedName = @"platformFaultDomain",
        PossibleTypes = new [] { typeof(int) })]
        int? PlatformFaultDomain { get; set; }
        /// <summary>Specifies the update domain of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the update domain of the virtual machine.",
        SerializedName = @"platformUpdateDomain",
        PossibleTypes = new [] { typeof(int) })]
        int? PlatformUpdateDomain { get; set; }
        /// <summary>The Remote desktop certificate thumbprint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Remote desktop certificate thumbprint.",
        SerializedName = @"rdpThumbPrint",
        PossibleTypes = new [] { typeof(string) })]
        string RdpThumbPrint { get; set; }
        /// <summary>The resource status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource status information.",
        SerializedName = @"statuses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus[] Statuses { get; set; }
        /// <summary>The virtual machine extension handler instance view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The virtual machine extension handler instance view.",
        SerializedName = @"extensionHandlers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionHandlerInstanceView) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionHandlerInstanceView[] VMAgentExtensionHandler { get; set; }
        /// <summary>The resource status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource status information.",
        SerializedName = @"statuses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus[] VMAgentStatuses { get; set; }
        /// <summary>The VM Agent full version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The VM Agent full version.",
        SerializedName = @"vmAgentVersion",
        PossibleTypes = new [] { typeof(string) })]
        string VMAgentVmagentVersion { get; set; }
        /// <summary>The status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The status code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string VMHealthStatusCode { get; set; }
        /// <summary>The short localizable label for the status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The short localizable label for the status.",
        SerializedName = @"displayStatus",
        PossibleTypes = new [] { typeof(string) })]
        string VMHealthStatusDisplayStatus { get; set; }
        /// <summary>The level code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The level code.",
        SerializedName = @"level",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StatusLevelTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StatusLevelTypes? VMHealthStatusLevel { get; set; }
        /// <summary>The detailed status message, including for alerts and error messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The detailed status message, including for alerts and error messages.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string VMHealthStatusMessage { get; set; }
        /// <summary>The time of the status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time of the status.",
        SerializedName = @"time",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? VMHealthStatusTime { get; set; }

    }
    /// The instance view of a virtual machine.
    internal partial interface IVirtualMachineInstanceViewInternal

    {
        /// <summary>
        /// Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual
        /// machine is associated with a dedicated host group that has automatic placement enabled. <br><br>Minimum api-version: 2020-06-01.
        /// </summary>
        string AssignedHost { get; set; }
        /// <summary>
        /// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status.
        /// <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the
        /// VM from the hypervisor.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IBootDiagnosticsInstanceView BootDiagnostic { get; set; }
        /// <summary>
        /// The console screenshot blob URI. <br><br>NOTE: This will **not** be set if boot diagnostics is currently enabled with
        /// managed storage.
        /// </summary>
        string BootDiagnosticConsoleScreenshotBlobUri { get; set; }
        /// <summary>
        /// The serial console log blob Uri. <br><br>NOTE: This will **not** be set if boot diagnostics is currently enabled with
        /// managed storage.
        /// </summary>
        string BootDiagnosticSerialConsoleLogBlobUri { get; set; }
        /// <summary>
        /// The boot diagnostics status information for the VM. <br><br> NOTE: It will be set only if there are errors encountered
        /// in enabling boot diagnostics.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus BootDiagnosticStatus { get; set; }
        /// <summary>The status code.</summary>
        string BootDiagnosticsStatusCode { get; set; }
        /// <summary>The short localizable label for the status.</summary>
        string BootDiagnosticsStatusDisplayStatus { get; set; }
        /// <summary>The level code.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StatusLevelTypes? BootDiagnosticsStatusLevel { get; set; }
        /// <summary>The detailed status message, including for alerts and error messages.</summary>
        string BootDiagnosticsStatusMessage { get; set; }
        /// <summary>The time of the status.</summary>
        global::System.DateTime? BootDiagnosticsStatusTime { get; set; }
        /// <summary>The computer name assigned to the virtual machine.</summary>
        string ComputerName { get; set; }
        /// <summary>The virtual machine disk information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskInstanceView[] Disk { get; set; }
        /// <summary>The extensions information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionInstanceView[] Extension { get; set; }
        /// <summary>Specifies the HyperVGeneration Type associated with a resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.HyperVGenerationType? HyperVGeneration { get; set; }
        /// <summary>The Maintenance Operation status on the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IMaintenanceRedeployStatus MaintenanceRedeployStatus { get; set; }
        /// <summary>True, if customer is allowed to perform Maintenance.</summary>
        bool? MaintenanceRedeployStatusIsCustomerInitiatedMaintenanceAllowed { get; set; }
        /// <summary>Message returned for the last Maintenance Operation.</summary>
        string MaintenanceRedeployStatusLastOperationMessage { get; set; }
        /// <summary>The Last Maintenance Operation Result Code.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.MaintenanceOperationResultCodeTypes? MaintenanceRedeployStatusLastOperationResultCode { get; set; }
        /// <summary>End Time for the Maintenance Window.</summary>
        global::System.DateTime? MaintenanceRedeployStatusMaintenanceWindowEndTime { get; set; }
        /// <summary>Start Time for the Maintenance Window.</summary>
        global::System.DateTime? MaintenanceRedeployStatusMaintenanceWindowStartTime { get; set; }
        /// <summary>End Time for the Pre Maintenance Window.</summary>
        global::System.DateTime? MaintenanceRedeployStatusPreMaintenanceWindowEndTime { get; set; }
        /// <summary>Start Time for the Pre Maintenance Window.</summary>
        global::System.DateTime? MaintenanceRedeployStatusPreMaintenanceWindowStartTime { get; set; }
        /// <summary>The Operating System running on the virtual machine.</summary>
        string OSName { get; set; }
        /// <summary>The version of Operating System running on the virtual machine.</summary>
        string OSVersion { get; set; }
        /// <summary>[Preview Feature] The status of virtual machine patch operations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePatchStatus PatchStatus { get; set; }
        /// <summary>Specifies the fault domain of the virtual machine.</summary>
        int? PlatformFaultDomain { get; set; }
        /// <summary>Specifies the update domain of the virtual machine.</summary>
        int? PlatformUpdateDomain { get; set; }
        /// <summary>The Remote desktop certificate thumbprint.</summary>
        string RdpThumbPrint { get; set; }
        /// <summary>The resource status information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus[] Statuses { get; set; }
        /// <summary>The VM Agent running on the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineAgentInstanceView VMAgent { get; set; }
        /// <summary>The virtual machine extension handler instance view.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineExtensionHandlerInstanceView[] VMAgentExtensionHandler { get; set; }
        /// <summary>The resource status information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus[] VMAgentStatuses { get; set; }
        /// <summary>The VM Agent full version.</summary>
        string VMAgentVmagentVersion { get; set; }
        /// <summary>The health status for the VM.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineHealthStatus VMHealth { get; set; }
        /// <summary>The health status information for the VM.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IInstanceViewStatus VMHealthStatus { get; set; }
        /// <summary>The status code.</summary>
        string VMHealthStatusCode { get; set; }
        /// <summary>The short localizable label for the status.</summary>
        string VMHealthStatusDisplayStatus { get; set; }
        /// <summary>The level code.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StatusLevelTypes? VMHealthStatusLevel { get; set; }
        /// <summary>The detailed status message, including for alerts and error messages.</summary>
        string VMHealthStatusMessage { get; set; }
        /// <summary>The time of the status.</summary>
        global::System.DateTime? VMHealthStatusTime { get; set; }

    }
}