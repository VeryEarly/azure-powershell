// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>Describes a data disk.</summary>
    public partial class DataDisk :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDisk,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal
    {

        /// <summary>Backing field for <see cref="Caching" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.CachingTypes? _caching;

        /// <summary>
        /// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite**
        /// <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.CachingTypes? Caching { get => this._caching; set => this._caching = value; }

        /// <summary>Backing field for <see cref="CreateOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskCreateOptionTypes _createOption;

        /// <summary>
        /// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value
        /// is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is
        /// used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference
        /// element described above. If you are using a marketplace image, you also use the plan element previously described.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskCreateOptionTypes CreateOption { get => this._createOption; set => this._createOption = value; }

        /// <summary>Backing field for <see cref="DeleteOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDeleteOptionTypes? _deleteOption;

        /// <summary>
        /// Specifies whether data disk should be deleted or detached upon VM deletion.<br><br> Possible values: <br><br> **Delete**
        /// If this value is used, the data disk is deleted when VM is deleted.<br><br> **Detach** If this value is used, the data
        /// disk is retained after VM is deleted.<br><br> The default value is set to **detach**
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDeleteOptionTypes? DeleteOption { get => this._deleteOption; set => this._deleteOption = value; }

        /// <summary>Backing field for <see cref="DetachOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDetachOptionTypes? _detachOption;

        /// <summary>
        /// Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from
        /// the virtual machine. Supported values: **ForceDetach**. <br><br> detachOption: **ForceDetach** is applicable only for
        /// managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from
        /// the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk
        /// forcibly from the VM. All writes might not have been flushed when using this detach behavior. <br><br> This feature is
        /// still in preview mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached
        /// to 'true' along with setting detachOption: 'ForceDetach'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDetachOptionTypes? DetachOption { get => this._detachOption; set => this._detachOption = value; }

        /// <summary>Backing field for <see cref="DiskIopsReadWrite" /> property.</summary>
        private long? _diskIopsReadWrite;

        /// <summary>
        /// Specifies the Read-Write IOPS for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine
        /// ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public long? DiskIopsReadWrite { get => this._diskIopsReadWrite; }

        /// <summary>Backing field for <see cref="DiskMBpsReadWrite" /> property.</summary>
        private long? _diskMBpsReadWrite;

        /// <summary>
        /// Specifies the bandwidth in MB per second for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for
        /// VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public long? DiskMBpsReadWrite { get => this._diskMBpsReadWrite; }

        /// <summary>Backing field for <see cref="DiskSizeGb" /> property.</summary>
        private int? _diskSizeGb;

        /// <summary>
        /// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a
        /// virtual machine image. <br><br> This value cannot be larger than 1023 GB
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public int? DiskSizeGb { get => this._diskSizeGb; set => this._diskSizeGb = value; }

        /// <summary>Backing field for <see cref="Image" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk _image;

        /// <summary>
        /// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine.
        /// If SourceImage is provided, the destination virtual hard drive must not exist.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk Image { get => (this._image = this._image ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualHardDisk()); set => this._image = value; }

        /// <summary>Specifies the virtual hard disk's uri.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ImageUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDiskInternal)Image).Uri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDiskInternal)Image).Uri = value ?? null; }

        /// <summary>Backing field for <see cref="Lun" /> property.</summary>
        private int _lun;

        /// <summary>
        /// Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore
        /// must be unique for each data disk attached to a VM.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public int Lun { get => this._lun; set => this._lun = value; }

        /// <summary>Backing field for <see cref="ManagedDisk" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParameters _managedDisk;

        /// <summary>The managed disk parameters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParameters ManagedDisk { get => (this._managedDisk = this._managedDisk ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ManagedDiskParameters()); set => this._managedDisk = value; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ManagedDiskId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResourceInternal)ManagedDisk).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResourceInternal)ManagedDisk).Id = value ?? null; }

        /// <summary>
        /// Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot
        /// be used with OS Disk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountTypes? ManagedDiskStorageAccountType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).StorageAccountType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).StorageAccountType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountTypes)""); }

        /// <summary>Internal Acessors for DiskIopsReadWrite</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal.DiskIopsReadWrite { get => this._diskIopsReadWrite; set { {_diskIopsReadWrite = value;} } }

        /// <summary>Internal Acessors for DiskMBpsReadWrite</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal.DiskMBpsReadWrite { get => this._diskMBpsReadWrite; set { {_diskMBpsReadWrite = value;} } }

        /// <summary>Internal Acessors for Image</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal.Image { get => (this._image = this._image ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualHardDisk()); set { {_image = value;} } }

        /// <summary>Internal Acessors for ManagedDisk</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParameters Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal.ManagedDisk { get => (this._managedDisk = this._managedDisk ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ManagedDiskParameters()); set { {_managedDisk = value;} } }

        /// <summary>Internal Acessors for ManagedDiskEncryptionSet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal.ManagedDiskEncryptionSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).DiskEncryptionSet; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).DiskEncryptionSet = value; }

        /// <summary>Internal Acessors for ManagedDiskSecurityProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMDiskSecurityProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal.ManagedDiskSecurityProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SecurityProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SecurityProfile = value; }

        /// <summary>Internal Acessors for SecurityProfileDiskEncryptionSet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal.SecurityProfileDiskEncryptionSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SecurityProfileDiskEncryptionSet; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SecurityProfileDiskEncryptionSet = value; }

        /// <summary>Internal Acessors for Vhd</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDataDiskInternal.Vhd { get => (this._vhd = this._vhd ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualHardDisk()); set { {_vhd = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The disk name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string SecurityProfileDiskEncryptionSetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SecurityProfileDiskEncryptionSetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SecurityProfileDiskEncryptionSetId = value ?? null; }

        /// <summary>
        /// Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed
        /// disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It
        /// can be set for only Confidential VMs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes? SecurityProfileSecurityEncryptionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SecurityProfileSecurityEncryptionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SecurityProfileSecurityEncryptionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes)""); }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string SubResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SubResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SubResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="ToBeDetached" /> property.</summary>
        private bool? _toBeDetached;

        /// <summary>
        /// Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public bool? ToBeDetached { get => this._toBeDetached; set => this._toBeDetached = value; }

        /// <summary>Backing field for <see cref="Vhd" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk _vhd;

        /// <summary>The virtual hard disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk Vhd { get => (this._vhd = this._vhd ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualHardDisk()); set => this._vhd = value; }

        /// <summary>Specifies the virtual hard disk's uri.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string VhdUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDiskInternal)Vhd).Uri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDiskInternal)Vhd).Uri = value ?? null; }

        /// <summary>Backing field for <see cref="WriteAcceleratorEnabled" /> property.</summary>
        private bool? _writeAcceleratorEnabled;

        /// <summary>Specifies whether writeAccelerator should be enabled or disabled on the disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public bool? WriteAcceleratorEnabled { get => this._writeAcceleratorEnabled; set => this._writeAcceleratorEnabled = value; }

        /// <summary>Creates an new <see cref="DataDisk" /> instance.</summary>
        public DataDisk()
        {

        }
    }
    /// Describes a data disk.
    public partial interface IDataDisk :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite**
        /// <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**",
        SerializedName = @"caching",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.CachingTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.CachingTypes? Caching { get; set; }
        /// <summary>
        /// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value
        /// is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is
        /// used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference
        /// element described above. If you are using a marketplace image, you also use the plan element previously described.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.",
        SerializedName = @"createOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskCreateOptionTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskCreateOptionTypes CreateOption { get; set; }
        /// <summary>
        /// Specifies whether data disk should be deleted or detached upon VM deletion.<br><br> Possible values: <br><br> **Delete**
        /// If this value is used, the data disk is deleted when VM is deleted.<br><br> **Detach** If this value is used, the data
        /// disk is retained after VM is deleted.<br><br> The default value is set to **detach**
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether data disk should be deleted or detached upon VM deletion.<br><br> Possible values: <br><br> **Delete** If this value is used, the data disk is deleted when VM is deleted.<br><br> **Detach** If this value is used, the data disk is retained after VM is deleted.<br><br> The default value is set to **detach**",
        SerializedName = @"deleteOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDeleteOptionTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDeleteOptionTypes? DeleteOption { get; set; }
        /// <summary>
        /// Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from
        /// the virtual machine. Supported values: **ForceDetach**. <br><br> detachOption: **ForceDetach** is applicable only for
        /// managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from
        /// the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk
        /// forcibly from the VM. All writes might not have been flushed when using this detach behavior. <br><br> This feature is
        /// still in preview mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached
        /// to 'true' along with setting detachOption: 'ForceDetach'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: **ForceDetach**. <br><br> detachOption: **ForceDetach** is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. <br><br> This feature is still in preview mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached to 'true' along with setting detachOption: 'ForceDetach'.",
        SerializedName = @"detachOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDetachOptionTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDetachOptionTypes? DetachOption { get; set; }
        /// <summary>
        /// Specifies the Read-Write IOPS for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine
        /// ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the Read-Write IOPS for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.",
        SerializedName = @"diskIOPSReadWrite",
        PossibleTypes = new [] { typeof(long) })]
        long? DiskIopsReadWrite { get;  }
        /// <summary>
        /// Specifies the bandwidth in MB per second for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for
        /// VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the bandwidth in MB per second for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.",
        SerializedName = @"diskMBpsReadWrite",
        PossibleTypes = new [] { typeof(long) })]
        long? DiskMBpsReadWrite { get;  }
        /// <summary>
        /// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a
        /// virtual machine image. <br><br> This value cannot be larger than 1023 GB
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB",
        SerializedName = @"diskSizeGB",
        PossibleTypes = new [] { typeof(int) })]
        int? DiskSizeGb { get; set; }
        /// <summary>Specifies the virtual hard disk's uri.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the virtual hard disk's uri.",
        SerializedName = @"uri",
        PossibleTypes = new [] { typeof(string) })]
        string ImageUri { get; set; }
        /// <summary>
        /// Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore
        /// must be unique for each data disk attached to a VM.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.",
        SerializedName = @"lun",
        PossibleTypes = new [] { typeof(int) })]
        int Lun { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedDiskId { get; set; }
        /// <summary>
        /// Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot
        /// be used with OS Disk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.",
        SerializedName = @"storageAccountType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountTypes? ManagedDiskStorageAccountType { get; set; }
        /// <summary>The disk name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The disk name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string SecurityProfileDiskEncryptionSetId { get; set; }
        /// <summary>
        /// Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed
        /// disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It
        /// can be set for only Confidential VMs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It can be set for only Confidential VMs.",
        SerializedName = @"securityEncryptionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes? SecurityProfileSecurityEncryptionType { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string SubResourceId { get; set; }
        /// <summary>
        /// Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset",
        SerializedName = @"toBeDetached",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ToBeDetached { get; set; }
        /// <summary>Specifies the virtual hard disk's uri.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the virtual hard disk's uri.",
        SerializedName = @"uri",
        PossibleTypes = new [] { typeof(string) })]
        string VhdUri { get; set; }
        /// <summary>Specifies whether writeAccelerator should be enabled or disabled on the disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether writeAccelerator should be enabled or disabled on the disk.",
        SerializedName = @"writeAcceleratorEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WriteAcceleratorEnabled { get; set; }

    }
    /// Describes a data disk.
    internal partial interface IDataDiskInternal

    {
        /// <summary>
        /// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite**
        /// <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.CachingTypes? Caching { get; set; }
        /// <summary>
        /// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value
        /// is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is
        /// used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference
        /// element described above. If you are using a marketplace image, you also use the plan element previously described.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskCreateOptionTypes CreateOption { get; set; }
        /// <summary>
        /// Specifies whether data disk should be deleted or detached upon VM deletion.<br><br> Possible values: <br><br> **Delete**
        /// If this value is used, the data disk is deleted when VM is deleted.<br><br> **Detach** If this value is used, the data
        /// disk is retained after VM is deleted.<br><br> The default value is set to **detach**
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDeleteOptionTypes? DeleteOption { get; set; }
        /// <summary>
        /// Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from
        /// the virtual machine. Supported values: **ForceDetach**. <br><br> detachOption: **ForceDetach** is applicable only for
        /// managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from
        /// the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk
        /// forcibly from the VM. All writes might not have been flushed when using this detach behavior. <br><br> This feature is
        /// still in preview mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached
        /// to 'true' along with setting detachOption: 'ForceDetach'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDetachOptionTypes? DetachOption { get; set; }
        /// <summary>
        /// Specifies the Read-Write IOPS for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine
        /// ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.
        /// </summary>
        long? DiskIopsReadWrite { get; set; }
        /// <summary>
        /// Specifies the bandwidth in MB per second for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for
        /// VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.
        /// </summary>
        long? DiskMBpsReadWrite { get; set; }
        /// <summary>
        /// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a
        /// virtual machine image. <br><br> This value cannot be larger than 1023 GB
        /// </summary>
        int? DiskSizeGb { get; set; }
        /// <summary>
        /// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine.
        /// If SourceImage is provided, the destination virtual hard drive must not exist.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk Image { get; set; }
        /// <summary>Specifies the virtual hard disk's uri.</summary>
        string ImageUri { get; set; }
        /// <summary>
        /// Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore
        /// must be unique for each data disk attached to a VM.
        /// </summary>
        int Lun { get; set; }
        /// <summary>The managed disk parameters.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParameters ManagedDisk { get; set; }
        /// <summary>
        /// Specifies the customer managed disk encryption set resource id for the managed disk.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource ManagedDiskEncryptionSet { get; set; }
        /// <summary>Resource Id</summary>
        string ManagedDiskId { get; set; }
        /// <summary>Specifies the security profile for the managed disk.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMDiskSecurityProfile ManagedDiskSecurityProfile { get; set; }
        /// <summary>
        /// Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot
        /// be used with OS Disk.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountTypes? ManagedDiskStorageAccountType { get; set; }
        /// <summary>The disk name.</summary>
        string Name { get; set; }
        /// <summary>
        /// Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed
        /// Key encrypted ConfidentialVM OS Disk and VMGuest blob.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource SecurityProfileDiskEncryptionSet { get; set; }
        /// <summary>Resource Id</summary>
        string SecurityProfileDiskEncryptionSetId { get; set; }
        /// <summary>
        /// Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed
        /// disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It
        /// can be set for only Confidential VMs.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes? SecurityProfileSecurityEncryptionType { get; set; }
        /// <summary>Resource Id</summary>
        string SubResourceId { get; set; }
        /// <summary>
        /// Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset
        /// </summary>
        bool? ToBeDetached { get; set; }
        /// <summary>The virtual hard disk.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk Vhd { get; set; }
        /// <summary>Specifies the virtual hard disk's uri.</summary>
        string VhdUri { get; set; }
        /// <summary>Specifies whether writeAccelerator should be enabled or disabled on the disk.</summary>
        bool? WriteAcceleratorEnabled { get; set; }

    }
}