// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>Describes a virtual machine network interface IP configuration properties.</summary>
    public partial class VirtualMachineNetworkInterfaceIPConfigurationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineNetworkInterfaceIPConfigurationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineNetworkInterfaceIPConfigurationPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ApplicationGatewayBackendAddressPool" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource[] _applicationGatewayBackendAddressPool;

        /// <summary>
        /// Specifies an array of references to backend address pools of application gateways. A virtual machine can reference backend
        /// address pools of multiple application gateways. Multiple virtual machines cannot use the same application gateway.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource[] ApplicationGatewayBackendAddressPool { get => this._applicationGatewayBackendAddressPool; set => this._applicationGatewayBackendAddressPool = value; }

        /// <summary>Backing field for <see cref="ApplicationSecurityGroup" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource[] _applicationSecurityGroup;

        /// <summary>Specifies an array of references to application security group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource[] ApplicationSecurityGroup { get => this._applicationSecurityGroup; set => this._applicationSecurityGroup = value; }

        /// <summary>Specify what happens to the public IP address when the VM is deleted</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DeleteOptions? DeleteOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DeleteOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DeleteOption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DeleteOptions)""); }

        /// <summary>
        /// The Domain name label prefix of the PublicIPAddress resources that will be created. The generated name label is the concatenation
        /// of the domain name label and vm network profile unique ID.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string DnsSettingDomainNameLabel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DnsSettingDomainNameLabel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DnsSettingDomainNameLabel = value ?? null; }

        /// <summary>The list of IP tags associated with the public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineIPTag[] IPTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).IPTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).IPTag = value ?? null /* arrayOf */; }

        /// <summary>The idle timeout of the public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? IdleTimeoutInMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).IdleTimeoutInMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).IdleTimeoutInMinute = value ?? default(int); }

        /// <summary>Backing field for <see cref="LoadBalancerBackendAddressPool" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource[] _loadBalancerBackendAddressPool;

        /// <summary>
        /// Specifies an array of references to backend address pools of load balancers. A virtual machine can reference backend address
        /// pools of one public and one internal load balancer. [Multiple virtual machines cannot use the same basic sku load balancer].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource[] LoadBalancerBackendAddressPool { get => this._loadBalancerBackendAddressPool; set => this._loadBalancerBackendAddressPool = value; }

        /// <summary>Internal Acessors for DnsSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressDnsSettingsConfiguration Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineNetworkInterfaceIPConfigurationPropertiesInternal.DnsSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DnsSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DnsSetting = value; }

        /// <summary>Internal Acessors for PublicIPAddressConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfiguration Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineNetworkInterfaceIPConfigurationPropertiesInternal.PublicIPAddressConfiguration { get => (this._publicIPAddressConfiguration = this._publicIPAddressConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualMachinePublicIPAddressConfiguration()); set { {_publicIPAddressConfiguration = value;} } }

        /// <summary>Internal Acessors for PublicIPAddressConfigurationProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationProperties Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineNetworkInterfaceIPConfigurationPropertiesInternal.PublicIPAddressConfigurationProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).Property; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).Property = value; }

        /// <summary>Internal Acessors for PublicIPAddressConfigurationSku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IPublicIPAddressSku Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineNetworkInterfaceIPConfigurationPropertiesInternal.PublicIPAddressConfigurationSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).Sku; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).Sku = value; }

        /// <summary>Internal Acessors for PublicIPPrefix</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineNetworkInterfaceIPConfigurationPropertiesInternal.PublicIPPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPPrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPPrefix = value; }

        /// <summary>Internal Acessors for Subnet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineNetworkInterfaceIPConfigurationPropertiesInternal.Subnet { get => (this._subnet = this._subnet ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.SubResource()); set { {_subnet = value;} } }

        /// <summary>Backing field for <see cref="Primary" /> property.</summary>
        private bool? _primary;

        /// <summary>
        /// Specifies the primary network interface in case the virtual machine has more than 1 network interface.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public bool? Primary { get => this._primary; set => this._primary = value; }

        /// <summary>Backing field for <see cref="PrivateIPAddressVersion" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.IPVersions? _privateIPAddressVersion;

        /// <summary>
        /// Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default
        /// is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.IPVersions? PrivateIPAddressVersion { get => this._privateIPAddressVersion; set => this._privateIPAddressVersion = value; }

        /// <summary>Backing field for <see cref="PublicIPAddressConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfiguration _publicIPAddressConfiguration;

        /// <summary>The publicIPAddressConfiguration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfiguration PublicIPAddressConfiguration { get => (this._publicIPAddressConfiguration = this._publicIPAddressConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualMachinePublicIPAddressConfiguration()); set => this._publicIPAddressConfiguration = value; }

        /// <summary>The publicIP address configuration name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string PublicIPAddressConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).Name = value ?? null; }

        /// <summary>
        /// Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default
        /// is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.IPVersions? PublicIPAddressVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPAddressVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPAddressVersion = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.IPVersions)""); }

        /// <summary>Specify the public IP allocation type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PublicIPAllocationMethod? PublicIPAllocationMethod { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPAllocationMethod; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPAllocationMethod = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PublicIPAllocationMethod)""); }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string PublicIPPrefixId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPPrefixId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPPrefixId = value ?? null; }

        /// <summary>Specify public IP sku name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PublicIPAddressSkuName? SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).SkuName = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PublicIPAddressSkuName)""); }

        /// <summary>Specify public IP sku tier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PublicIPAddressSkuTier? SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).SkuTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).SkuTier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PublicIPAddressSkuTier)""); }

        /// <summary>Backing field for <see cref="Subnet" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource _subnet;

        /// <summary>Specifies the identifier of the subnet.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource Subnet { get => (this._subnet = this._subnet ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.SubResource()); set => this._subnet = value; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string SubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResourceInternal)Subnet).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResourceInternal)Subnet).Id = value ?? null; }

        /// <summary>
        /// Creates an new <see cref="VirtualMachineNetworkInterfaceIPConfigurationProperties" /> instance.
        /// </summary>
        public VirtualMachineNetworkInterfaceIPConfigurationProperties()
        {

        }
    }
    /// Describes a virtual machine network interface IP configuration properties.
    public partial interface IVirtualMachineNetworkInterfaceIPConfigurationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Specifies an array of references to backend address pools of application gateways. A virtual machine can reference backend
        /// address pools of multiple application gateways. Multiple virtual machines cannot use the same application gateway.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies an array of references to backend address pools of application gateways. A virtual machine can reference backend address pools of multiple application gateways. Multiple virtual machines cannot use the same application gateway.",
        SerializedName = @"applicationGatewayBackendAddressPools",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource[] ApplicationGatewayBackendAddressPool { get; set; }
        /// <summary>Specifies an array of references to application security group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies an array of references to application security group.",
        SerializedName = @"applicationSecurityGroups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource[] ApplicationSecurityGroup { get; set; }
        /// <summary>Specify what happens to the public IP address when the VM is deleted</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify what happens to the public IP address when the VM is deleted",
        SerializedName = @"deleteOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DeleteOptions) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DeleteOptions? DeleteOption { get; set; }
        /// <summary>
        /// The Domain name label prefix of the PublicIPAddress resources that will be created. The generated name label is the concatenation
        /// of the domain name label and vm network profile unique ID.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Domain name label prefix of the PublicIPAddress resources that will be created. The generated name label is the concatenation of the domain name label and vm network profile unique ID.",
        SerializedName = @"domainNameLabel",
        PossibleTypes = new [] { typeof(string) })]
        string DnsSettingDomainNameLabel { get; set; }
        /// <summary>The list of IP tags associated with the public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of IP tags associated with the public IP address.",
        SerializedName = @"ipTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineIPTag) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineIPTag[] IPTag { get; set; }
        /// <summary>The idle timeout of the public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The idle timeout of the public IP address.",
        SerializedName = @"idleTimeoutInMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? IdleTimeoutInMinute { get; set; }
        /// <summary>
        /// Specifies an array of references to backend address pools of load balancers. A virtual machine can reference backend address
        /// pools of one public and one internal load balancer. [Multiple virtual machines cannot use the same basic sku load balancer].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies an array of references to backend address pools of load balancers. A virtual machine can reference backend address pools of one public and one internal load balancer. [Multiple virtual machines cannot use the same basic sku load balancer].",
        SerializedName = @"loadBalancerBackendAddressPools",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource[] LoadBalancerBackendAddressPool { get; set; }
        /// <summary>
        /// Specifies the primary network interface in case the virtual machine has more than 1 network interface.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the primary network interface in case the virtual machine has more than 1 network interface.",
        SerializedName = @"primary",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Primary { get; set; }
        /// <summary>
        /// Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default
        /// is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.",
        SerializedName = @"privateIPAddressVersion",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.IPVersions) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.IPVersions? PrivateIPAddressVersion { get; set; }
        /// <summary>The publicIP address configuration name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The publicIP address configuration name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string PublicIPAddressConfigurationName { get; set; }
        /// <summary>
        /// Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default
        /// is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'.",
        SerializedName = @"publicIPAddressVersion",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.IPVersions) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.IPVersions? PublicIPAddressVersion { get; set; }
        /// <summary>Specify the public IP allocation type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify the public IP allocation type",
        SerializedName = @"publicIPAllocationMethod",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PublicIPAllocationMethod) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PublicIPAllocationMethod? PublicIPAllocationMethod { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string PublicIPPrefixId { get; set; }
        /// <summary>Specify public IP sku name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify public IP sku name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PublicIPAddressSkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PublicIPAddressSkuName? SkuName { get; set; }
        /// <summary>Specify public IP sku tier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify public IP sku tier",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PublicIPAddressSkuTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PublicIPAddressSkuTier? SkuTier { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string SubnetId { get; set; }

    }
    /// Describes a virtual machine network interface IP configuration properties.
    internal partial interface IVirtualMachineNetworkInterfaceIPConfigurationPropertiesInternal

    {
        /// <summary>
        /// Specifies an array of references to backend address pools of application gateways. A virtual machine can reference backend
        /// address pools of multiple application gateways. Multiple virtual machines cannot use the same application gateway.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource[] ApplicationGatewayBackendAddressPool { get; set; }
        /// <summary>Specifies an array of references to application security group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource[] ApplicationSecurityGroup { get; set; }
        /// <summary>Specify what happens to the public IP address when the VM is deleted</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DeleteOptions? DeleteOption { get; set; }
        /// <summary>The dns settings to be applied on the publicIP addresses .</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressDnsSettingsConfiguration DnsSetting { get; set; }
        /// <summary>
        /// The Domain name label prefix of the PublicIPAddress resources that will be created. The generated name label is the concatenation
        /// of the domain name label and vm network profile unique ID.
        /// </summary>
        string DnsSettingDomainNameLabel { get; set; }
        /// <summary>The list of IP tags associated with the public IP address.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachineIPTag[] IPTag { get; set; }
        /// <summary>The idle timeout of the public IP address.</summary>
        int? IdleTimeoutInMinute { get; set; }
        /// <summary>
        /// Specifies an array of references to backend address pools of load balancers. A virtual machine can reference backend address
        /// pools of one public and one internal load balancer. [Multiple virtual machines cannot use the same basic sku load balancer].
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource[] LoadBalancerBackendAddressPool { get; set; }
        /// <summary>
        /// Specifies the primary network interface in case the virtual machine has more than 1 network interface.
        /// </summary>
        bool? Primary { get; set; }
        /// <summary>
        /// Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default
        /// is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.IPVersions? PrivateIPAddressVersion { get; set; }
        /// <summary>The publicIPAddressConfiguration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfiguration PublicIPAddressConfiguration { get; set; }
        /// <summary>The publicIP address configuration name.</summary>
        string PublicIPAddressConfigurationName { get; set; }
        /// <summary>Describes a virtual machines IP Configuration's PublicIPAddress configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachinePublicIPAddressConfigurationProperties PublicIPAddressConfigurationProperty { get; set; }
        /// <summary>
        /// Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IPublicIPAddressSku PublicIPAddressConfigurationSku { get; set; }
        /// <summary>
        /// Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default
        /// is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.IPVersions? PublicIPAddressVersion { get; set; }
        /// <summary>Specify the public IP allocation type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PublicIPAllocationMethod? PublicIPAllocationMethod { get; set; }
        /// <summary>The PublicIPPrefix from which to allocate publicIP addresses.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource PublicIPPrefix { get; set; }
        /// <summary>Resource Id</summary>
        string PublicIPPrefixId { get; set; }
        /// <summary>Specify public IP sku name</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PublicIPAddressSkuName? SkuName { get; set; }
        /// <summary>Specify public IP sku tier</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.PublicIPAddressSkuTier? SkuTier { get; set; }
        /// <summary>Specifies the identifier of the subnet.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource Subnet { get; set; }
        /// <summary>Resource Id</summary>
        string SubnetId { get; set; }

    }
}