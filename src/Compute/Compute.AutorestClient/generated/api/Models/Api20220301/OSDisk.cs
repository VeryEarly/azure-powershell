// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>
    /// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about
    /// disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
    /// </summary>
    public partial class OSDisk :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSDisk,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSDiskInternal
    {

        /// <summary>Backing field for <see cref="Caching" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.CachingTypes? _caching;

        /// <summary>
        /// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite**
        /// <br><br> Default: **None** for Standard storage. **ReadOnly** for Premium storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.CachingTypes? Caching { get => this._caching; set => this._caching = value; }

        /// <summary>Backing field for <see cref="CreateOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskCreateOptionTypes _createOption;

        /// <summary>
        /// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value
        /// is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is
        /// used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference
        /// element described above. If you are using a marketplace image, you also use the plan element previously described.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskCreateOptionTypes CreateOption { get => this._createOption; set => this._createOption = value; }

        /// <summary>Backing field for <see cref="DeleteOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDeleteOptionTypes? _deleteOption;

        /// <summary>
        /// Specifies whether OS Disk should be deleted or detached upon VM deletion. <br><br> Possible values: <br><br> **Delete**
        /// If this value is used, the OS disk is deleted when VM is deleted.<br><br> **Detach** If this value is used, the os disk
        /// is retained after VM is deleted. <br><br> The default value is set to **detach**. For an ephemeral OS Disk, the default
        /// value is set to **Delete**. User cannot change the delete option for ephemeral OS Disk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDeleteOptionTypes? DeleteOption { get => this._deleteOption; set => this._deleteOption = value; }

        /// <summary>Backing field for <see cref="DiffDiskSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiffDiskSettings _diffDiskSetting;

        /// <summary>
        /// Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiffDiskSettings DiffDiskSetting { get => (this._diffDiskSetting = this._diffDiskSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.DiffDiskSettings()); set => this._diffDiskSetting = value; }

        /// <summary>Specifies the ephemeral disk settings for operating system disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiffDiskOptions? DiffDiskSettingOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiffDiskSettingsInternal)DiffDiskSetting).Option; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiffDiskSettingsInternal)DiffDiskSetting).Option = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiffDiskOptions)""); }

        /// <summary>
        /// Specifies the ephemeral disk placement for operating system disk.<br><br> Possible values are: <br><br> **CacheDisk**
        /// <br><br> **ResourceDisk** <br><br> Default: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk**
        /// is used.<br><br> Refer to VM size documentation for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/sizes
        /// and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache
        /// disk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiffDiskPlacement? DiffDiskSettingPlacement { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiffDiskSettingsInternal)DiffDiskSetting).Placement; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiffDiskSettingsInternal)DiffDiskSetting).Placement = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiffDiskPlacement)""); }

        /// <summary>The URL referencing a secret in a Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string DiskEncryptionKeySecretUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettingsInternal)EncryptionSetting).DiskEncryptionKeySecretUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettingsInternal)EncryptionSetting).DiskEncryptionKeySecretUrl = value ?? null; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string DiskEncryptionKeySourceVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettingsInternal)EncryptionSetting).DiskEncryptionKeySourceVaultId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettingsInternal)EncryptionSetting).DiskEncryptionKeySourceVaultId = value ?? null; }

        /// <summary>Backing field for <see cref="DiskSizeGb" /> property.</summary>
        private int? _diskSizeGb;

        /// <summary>
        /// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a
        /// virtual machine image. <br><br> This value cannot be larger than 1023 GB
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public int? DiskSizeGb { get => this._diskSizeGb; set => this._diskSizeGb = value; }

        /// <summary>Backing field for <see cref="EncryptionSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettings _encryptionSetting;

        /// <summary>
        /// Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettings EncryptionSetting { get => (this._encryptionSetting = this._encryptionSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.DiskEncryptionSettings()); set => this._encryptionSetting = value; }

        /// <summary>Specifies whether disk encryption should be enabled on the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? EncryptionSettingEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettingsInternal)EncryptionSetting).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettingsInternal)EncryptionSetting).Enabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Image" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk _image;

        /// <summary>
        /// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine.
        /// If SourceImage is provided, the destination virtual hard drive must not exist.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk Image { get => (this._image = this._image ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualHardDisk()); set => this._image = value; }

        /// <summary>Specifies the virtual hard disk's uri.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ImageUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDiskInternal)Image).Uri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDiskInternal)Image).Uri = value ?? null; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string KeyEncryptionKeySourceVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettingsInternal)EncryptionSetting).KeyEncryptionKeySourceVaultId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettingsInternal)EncryptionSetting).KeyEncryptionKeySourceVaultId = value ?? null; }

        /// <summary>The URL referencing a key encryption key in Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string KeyEncryptionKeyUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettingsInternal)EncryptionSetting).KeyEncryptionKeyUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettingsInternal)EncryptionSetting).KeyEncryptionKeyUrl = value ?? null; }

        /// <summary>Backing field for <see cref="ManagedDisk" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParameters _managedDisk;

        /// <summary>The managed disk parameters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParameters ManagedDisk { get => (this._managedDisk = this._managedDisk ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ManagedDiskParameters()); set => this._managedDisk = value; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ManagedDiskId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResourceInternal)ManagedDisk).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResourceInternal)ManagedDisk).Id = value ?? null; }

        /// <summary>
        /// Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot
        /// be used with OS Disk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountTypes? ManagedDiskStorageAccountType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).StorageAccountType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).StorageAccountType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountTypes)""); }

        /// <summary>Internal Acessors for DiffDiskSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiffDiskSettings Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSDiskInternal.DiffDiskSetting { get => (this._diffDiskSetting = this._diffDiskSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.DiffDiskSettings()); set { {_diffDiskSetting = value;} } }

        /// <summary>Internal Acessors for DiskEncryptionKeySourceVault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSDiskInternal.DiskEncryptionKeySourceVault { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettingsInternal)EncryptionSetting).DiskEncryptionKeySourceVault; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettingsInternal)EncryptionSetting).DiskEncryptionKeySourceVault = value; }

        /// <summary>Internal Acessors for EncryptionSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettings Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSDiskInternal.EncryptionSetting { get => (this._encryptionSetting = this._encryptionSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.DiskEncryptionSettings()); set { {_encryptionSetting = value;} } }

        /// <summary>Internal Acessors for EncryptionSettingDiskEncryptionKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IKeyVaultSecretReference Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSDiskInternal.EncryptionSettingDiskEncryptionKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettingsInternal)EncryptionSetting).DiskEncryptionKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettingsInternal)EncryptionSetting).DiskEncryptionKey = value; }

        /// <summary>Internal Acessors for EncryptionSettingKeyEncryptionKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IKeyVaultKeyReference Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSDiskInternal.EncryptionSettingKeyEncryptionKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettingsInternal)EncryptionSetting).KeyEncryptionKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettingsInternal)EncryptionSetting).KeyEncryptionKey = value; }

        /// <summary>Internal Acessors for Image</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSDiskInternal.Image { get => (this._image = this._image ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualHardDisk()); set { {_image = value;} } }

        /// <summary>Internal Acessors for KeyEncryptionKeySourceVault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSDiskInternal.KeyEncryptionKeySourceVault { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettingsInternal)EncryptionSetting).KeyEncryptionKeySourceVault; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettingsInternal)EncryptionSetting).KeyEncryptionKeySourceVault = value; }

        /// <summary>Internal Acessors for ManagedDisk</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParameters Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSDiskInternal.ManagedDisk { get => (this._managedDisk = this._managedDisk ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ManagedDiskParameters()); set { {_managedDisk = value;} } }

        /// <summary>Internal Acessors for ManagedDiskEncryptionSet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSDiskInternal.ManagedDiskEncryptionSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).DiskEncryptionSet; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).DiskEncryptionSet = value; }

        /// <summary>Internal Acessors for ManagedDiskSecurityProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMDiskSecurityProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSDiskInternal.ManagedDiskSecurityProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SecurityProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SecurityProfile = value; }

        /// <summary>Internal Acessors for SecurityProfileDiskEncryptionSet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSDiskInternal.SecurityProfileDiskEncryptionSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SecurityProfileDiskEncryptionSet; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SecurityProfileDiskEncryptionSet = value; }

        /// <summary>Internal Acessors for Vhd</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IOSDiskInternal.Vhd { get => (this._vhd = this._vhd ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualHardDisk()); set { {_vhd = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The disk name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.OperatingSystemTypes? _oSType;

        /// <summary>
        /// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or
        /// a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.OperatingSystemTypes? OSType { get => this._oSType; set => this._oSType = value; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string SecurityProfileDiskEncryptionSetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SecurityProfileDiskEncryptionSetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SecurityProfileDiskEncryptionSetId = value ?? null; }

        /// <summary>
        /// Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed
        /// disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It
        /// can be set for only Confidential VMs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes? SecurityProfileSecurityEncryptionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SecurityProfileSecurityEncryptionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SecurityProfileSecurityEncryptionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes)""); }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string SubResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SubResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParametersInternal)ManagedDisk).SubResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="Vhd" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk _vhd;

        /// <summary>The virtual hard disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk Vhd { get => (this._vhd = this._vhd ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.VirtualHardDisk()); set => this._vhd = value; }

        /// <summary>Specifies the virtual hard disk's uri.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string VhdUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDiskInternal)Vhd).Uri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDiskInternal)Vhd).Uri = value ?? null; }

        /// <summary>Backing field for <see cref="WriteAcceleratorEnabled" /> property.</summary>
        private bool? _writeAcceleratorEnabled;

        /// <summary>Specifies whether writeAccelerator should be enabled or disabled on the disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public bool? WriteAcceleratorEnabled { get => this._writeAcceleratorEnabled; set => this._writeAcceleratorEnabled = value; }

        /// <summary>Creates an new <see cref="OSDisk" /> instance.</summary>
        public OSDisk()
        {

        }
    }
    /// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about
    /// disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
    public partial interface IOSDisk :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite**
        /// <br><br> Default: **None** for Standard storage. **ReadOnly** for Premium storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None** for Standard storage. **ReadOnly** for Premium storage.",
        SerializedName = @"caching",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.CachingTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.CachingTypes? Caching { get; set; }
        /// <summary>
        /// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value
        /// is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is
        /// used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference
        /// element described above. If you are using a marketplace image, you also use the plan element previously described.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.",
        SerializedName = @"createOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskCreateOptionTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskCreateOptionTypes CreateOption { get; set; }
        /// <summary>
        /// Specifies whether OS Disk should be deleted or detached upon VM deletion. <br><br> Possible values: <br><br> **Delete**
        /// If this value is used, the OS disk is deleted when VM is deleted.<br><br> **Detach** If this value is used, the os disk
        /// is retained after VM is deleted. <br><br> The default value is set to **detach**. For an ephemeral OS Disk, the default
        /// value is set to **Delete**. User cannot change the delete option for ephemeral OS Disk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether OS Disk should be deleted or detached upon VM deletion. <br><br> Possible values: <br><br> **Delete** If this value is used, the OS disk is deleted when VM is deleted.<br><br> **Detach** If this value is used, the os disk is retained after VM is deleted. <br><br> The default value is set to **detach**. For an ephemeral OS Disk, the default value is set to **Delete**. User cannot change the delete option for ephemeral OS Disk.",
        SerializedName = @"deleteOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDeleteOptionTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDeleteOptionTypes? DeleteOption { get; set; }
        /// <summary>Specifies the ephemeral disk settings for operating system disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the ephemeral disk settings for operating system disk.",
        SerializedName = @"option",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiffDiskOptions) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiffDiskOptions? DiffDiskSettingOption { get; set; }
        /// <summary>
        /// Specifies the ephemeral disk placement for operating system disk.<br><br> Possible values are: <br><br> **CacheDisk**
        /// <br><br> **ResourceDisk** <br><br> Default: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk**
        /// is used.<br><br> Refer to VM size documentation for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/sizes
        /// and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache
        /// disk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the ephemeral disk placement for operating system disk.<br><br> Possible values are: <br><br> **CacheDisk** <br><br> **ResourceDisk** <br><br> Default: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk** is used.<br><br> Refer to VM size documentation for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk.",
        SerializedName = @"placement",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiffDiskPlacement) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiffDiskPlacement? DiffDiskSettingPlacement { get; set; }
        /// <summary>The URL referencing a secret in a Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL referencing a secret in a Key Vault.",
        SerializedName = @"secretUrl",
        PossibleTypes = new [] { typeof(string) })]
        string DiskEncryptionKeySecretUrl { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string DiskEncryptionKeySourceVaultId { get; set; }
        /// <summary>
        /// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a
        /// virtual machine image. <br><br> This value cannot be larger than 1023 GB
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB",
        SerializedName = @"diskSizeGB",
        PossibleTypes = new [] { typeof(int) })]
        int? DiskSizeGb { get; set; }
        /// <summary>Specifies whether disk encryption should be enabled on the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether disk encryption should be enabled on the virtual machine.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EncryptionSettingEnabled { get; set; }
        /// <summary>Specifies the virtual hard disk's uri.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the virtual hard disk's uri.",
        SerializedName = @"uri",
        PossibleTypes = new [] { typeof(string) })]
        string ImageUri { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string KeyEncryptionKeySourceVaultId { get; set; }
        /// <summary>The URL referencing a key encryption key in Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL referencing a key encryption key in Key Vault.",
        SerializedName = @"keyUrl",
        PossibleTypes = new [] { typeof(string) })]
        string KeyEncryptionKeyUrl { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedDiskId { get; set; }
        /// <summary>
        /// Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot
        /// be used with OS Disk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.",
        SerializedName = @"storageAccountType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountTypes? ManagedDiskStorageAccountType { get; set; }
        /// <summary>The disk name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The disk name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>
        /// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or
        /// a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.OperatingSystemTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.OperatingSystemTypes? OSType { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string SecurityProfileDiskEncryptionSetId { get; set; }
        /// <summary>
        /// Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed
        /// disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It
        /// can be set for only Confidential VMs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It can be set for only Confidential VMs.",
        SerializedName = @"securityEncryptionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes? SecurityProfileSecurityEncryptionType { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string SubResourceId { get; set; }
        /// <summary>Specifies the virtual hard disk's uri.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the virtual hard disk's uri.",
        SerializedName = @"uri",
        PossibleTypes = new [] { typeof(string) })]
        string VhdUri { get; set; }
        /// <summary>Specifies whether writeAccelerator should be enabled or disabled on the disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether writeAccelerator should be enabled or disabled on the disk.",
        SerializedName = @"writeAcceleratorEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WriteAcceleratorEnabled { get; set; }

    }
    /// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about
    /// disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
    internal partial interface IOSDiskInternal

    {
        /// <summary>
        /// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite**
        /// <br><br> Default: **None** for Standard storage. **ReadOnly** for Premium storage.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.CachingTypes? Caching { get; set; }
        /// <summary>
        /// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value
        /// is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is
        /// used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference
        /// element described above. If you are using a marketplace image, you also use the plan element previously described.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskCreateOptionTypes CreateOption { get; set; }
        /// <summary>
        /// Specifies whether OS Disk should be deleted or detached upon VM deletion. <br><br> Possible values: <br><br> **Delete**
        /// If this value is used, the OS disk is deleted when VM is deleted.<br><br> **Detach** If this value is used, the os disk
        /// is retained after VM is deleted. <br><br> The default value is set to **detach**. For an ephemeral OS Disk, the default
        /// value is set to **Delete**. User cannot change the delete option for ephemeral OS Disk.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiskDeleteOptionTypes? DeleteOption { get; set; }
        /// <summary>
        /// Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiffDiskSettings DiffDiskSetting { get; set; }
        /// <summary>Specifies the ephemeral disk settings for operating system disk.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiffDiskOptions? DiffDiskSettingOption { get; set; }
        /// <summary>
        /// Specifies the ephemeral disk placement for operating system disk.<br><br> Possible values are: <br><br> **CacheDisk**
        /// <br><br> **ResourceDisk** <br><br> Default: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk**
        /// is used.<br><br> Refer to VM size documentation for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/sizes
        /// and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache
        /// disk.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.DiffDiskPlacement? DiffDiskSettingPlacement { get; set; }
        /// <summary>The URL referencing a secret in a Key Vault.</summary>
        string DiskEncryptionKeySecretUrl { get; set; }
        /// <summary>The relative URL of the Key Vault containing the secret.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource DiskEncryptionKeySourceVault { get; set; }
        /// <summary>Resource Id</summary>
        string DiskEncryptionKeySourceVaultId { get; set; }
        /// <summary>
        /// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a
        /// virtual machine image. <br><br> This value cannot be larger than 1023 GB
        /// </summary>
        int? DiskSizeGb { get; set; }
        /// <summary>
        /// Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IDiskEncryptionSettings EncryptionSetting { get; set; }
        /// <summary>Specifies the location of the disk encryption key, which is a Key Vault Secret.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IKeyVaultSecretReference EncryptionSettingDiskEncryptionKey { get; set; }
        /// <summary>Specifies whether disk encryption should be enabled on the virtual machine.</summary>
        bool? EncryptionSettingEnabled { get; set; }
        /// <summary>Specifies the location of the key encryption key in Key Vault.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IKeyVaultKeyReference EncryptionSettingKeyEncryptionKey { get; set; }
        /// <summary>
        /// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine.
        /// If SourceImage is provided, the destination virtual hard drive must not exist.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk Image { get; set; }
        /// <summary>Specifies the virtual hard disk's uri.</summary>
        string ImageUri { get; set; }
        /// <summary>The relative URL of the Key Vault containing the key.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource KeyEncryptionKeySourceVault { get; set; }
        /// <summary>Resource Id</summary>
        string KeyEncryptionKeySourceVaultId { get; set; }
        /// <summary>The URL referencing a key encryption key in Key Vault.</summary>
        string KeyEncryptionKeyUrl { get; set; }
        /// <summary>The managed disk parameters.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IManagedDiskParameters ManagedDisk { get; set; }
        /// <summary>
        /// Specifies the customer managed disk encryption set resource id for the managed disk.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource ManagedDiskEncryptionSet { get; set; }
        /// <summary>Resource Id</summary>
        string ManagedDiskId { get; set; }
        /// <summary>Specifies the security profile for the managed disk.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVMDiskSecurityProfile ManagedDiskSecurityProfile { get; set; }
        /// <summary>
        /// Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot
        /// be used with OS Disk.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountTypes? ManagedDiskStorageAccountType { get; set; }
        /// <summary>The disk name.</summary>
        string Name { get; set; }
        /// <summary>
        /// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or
        /// a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.OperatingSystemTypes? OSType { get; set; }
        /// <summary>
        /// Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed
        /// Key encrypted ConfidentialVM OS Disk and VMGuest blob.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ISubResource SecurityProfileDiskEncryptionSet { get; set; }
        /// <summary>Resource Id</summary>
        string SecurityProfileDiskEncryptionSetId { get; set; }
        /// <summary>
        /// Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed
        /// disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It
        /// can be set for only Confidential VMs.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SecurityEncryptionTypes? SecurityProfileSecurityEncryptionType { get; set; }
        /// <summary>Resource Id</summary>
        string SubResourceId { get; set; }
        /// <summary>The virtual hard disk.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualHardDisk Vhd { get; set; }
        /// <summary>Specifies the virtual hard disk's uri.</summary>
        string VhdUri { get; set; }
        /// <summary>Specifies whether writeAccelerator should be enabled or disabled on the disk.</summary>
        bool? WriteAcceleratorEnabled { get; set; }

    }
}