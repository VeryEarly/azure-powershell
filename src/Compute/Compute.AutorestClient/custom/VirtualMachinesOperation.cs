// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;
using global::System.Linq;

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute
{
    using OnDefault = global::System.Func<global::System.Net.Http.HttpResponseMessage, global::System.Threading.Tasks.Task<Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.ICloudError>, global::System.Threading.Tasks.Task>;
    using OnOkGet = global::System.Func<global::System.Net.Http.HttpResponseMessage, global::System.Threading.Tasks.Task<Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachine>, global::System.Threading.Tasks.Task>;

    public class ActivityLogAlertsOperations
    {
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.ProxyClient _client;

        public Microsoft.Azure.PowerShell.Cmdlets.Compute.ProxyClient Client => _client;

        internal VirtualMachinesOperations (Microsoft.Azure.PowerShell.Cmdlets.Compute.ProxyClient client) {
            _client = client;
        }

        public async global::System.Threading.Tasks.Task<Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachine> GetAsync(string resourceGroupName, string activityLogAlertName)
        {
            using(NoSynchronizationContext)
            using(Microsoft.Azure.PowerShell.Cmdlets.Compute.Operation<Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachine> op = new Microsoft.Azure.PowerShell.Cmdlets.Compute.Operation<Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachine>())
            {
                OnOkGet onOk = op.onOk;
                OnDefault onDefault = op.onDefault;
                Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IEventListener eventListener = Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.ProxyEventListener.CreateProxyEventListener();
            Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.ISendAsync sender = Microsoft.Azure.PowerShell.Cmdlets.Compute.Module.Instance.CreateProxyPipeline();
                await Microsoft.Azure.PowerShell.Cmdlets.Compute.Module.Instance.ClientAPI.ActivityLogAlertsGet(Client.SubscriptionId, resourceGroupName, activityLogAlertName, onOk, onDefault, eventListener, sender);
                return op.Result;
            }
        }

        public Azure.PowerShell.Cmdlets.Compute.Models.Api20220301.IVirtualMachine Get(string resourceGroupName, string activityLogAlertName)
        {
            return GetAsync(resourceGroupName, activityLogAlertName).GetAwaiter().GetResult();
        }
    }
}